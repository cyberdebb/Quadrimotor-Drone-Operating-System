

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Mon Oct 20 20:35:00 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1
    25                           	psect	intcode,global,reloc=2,class=CODE,space=0,delta=1
    26                           	psect	intcode_body,global,reloc=2,class=CODE,space=0,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1
    30                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
    31                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    32                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    33                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    34   000000                     
    35                           ; Generated 17/01/2025 GMT
    36                           ; 
    37                           ; Copyright Â© 2025, Microchip Technology Inc. and its subsidiaries ("Microchip")
    38                           ; All rights reserved.
    39                           ; 
    40                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    41                           ; 
    42                           ; Redistribution and use in source and binary forms, with or without modification, are
    43                           ; permitted provided that the following conditions are met:
    44                           ; 
    45                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    46                           ;        conditions and the following disclaimer.
    47                           ; 
    48                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    49                           ;        of conditions and the following disclaimer in the documentation and/or other
    50                           ;        materials provided with the distribution. Publication is not required when
    51                           ;        this file is used in an embedded application.
    52                           ; 
    53                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    54                           ;        software without specific prior written permission.
    55                           ; 
    56                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    57                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    58                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    59                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    60                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    61                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    62                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    63                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    64                           ; 
    65                           ; 
    66                           ; Code-generator required, PIC18F4550 Definitions
    67                           ; 
    68                           ; SFR Addresses
    69   000FE0                     bsr             equ	4064
    70   000FE9                     fsr0            equ	4073
    71   000FEA                     fsr0h           equ	4074
    72   000FE9                     fsr0l           equ	4073
    73   000FE1                     fsr1            equ	4065
    74   000FE2                     fsr1h           equ	4066
    75   000FE1                     fsr1l           equ	4065
    76   000FD9                     fsr2            equ	4057
    77   000FDA                     fsr2h           equ	4058
    78   000FD9                     fsr2l           equ	4057
    79   000FEF                     indf0           equ	4079
    80   000FE7                     indf1           equ	4071
    81   000FDF                     indf2           equ	4063
    82   000FF2                     intcon          equ	4082
    83   000000                     nvmcon          equ	0
    84   000FF9                     pcl             equ	4089
    85   000FFA                     pclath          equ	4090
    86   000FFB                     pclatu          equ	4091
    87   000FEB                     plusw0          equ	4075
    88   000FE3                     plusw1          equ	4067
    89   000FDB                     plusw2          equ	4059
    90   000FED                     postdec0        equ	4077
    91   000FE5                     postdec1        equ	4069
    92   000FDD                     postdec2        equ	4061
    93   000FEE                     postinc0        equ	4078
    94   000FE6                     postinc1        equ	4070
    95   000FDE                     postinc2        equ	4062
    96   000FEC                     preinc0         equ	4076
    97   000FE4                     preinc1         equ	4068
    98   000FDC                     preinc2         equ	4060
    99   000FF3                     prod            equ	4083
   100   000FF4                     prodh           equ	4084
   101   000FF3                     prodl           equ	4083
   102   000FD8                     status          equ	4056
   103   000FF5                     tablat          equ	4085
   104   000FF6                     tblptr          equ	4086
   105   000FF7                     tblptrh         equ	4087
   106   000FF6                     tblptrl         equ	4086
   107   000FF8                     tblptru         equ	4088
   108   000FFD                     tosl            equ	4093
   109   000FE8                     wreg            equ	4072
   110   000F62                     SPPDATA         equ	3938	;# 
   111   000F63                     SPPCFG          equ	3939	;# 
   112   000F64                     SPPEPS          equ	3940	;# 
   113   000F65                     SPPCON          equ	3941	;# 
   114   000F66                     UFRM            equ	3942	;# 
   115   000F66                     UFRML           equ	3942	;# 
   116   000F67                     UFRMH           equ	3943	;# 
   117   000F68                     UIR             equ	3944	;# 
   118   000F69                     UIE             equ	3945	;# 
   119   000F6A                     UEIR            equ	3946	;# 
   120   000F6B                     UEIE            equ	3947	;# 
   121   000F6C                     USTAT           equ	3948	;# 
   122   000F6D                     UCON            equ	3949	;# 
   123   000F6E                     UADDR           equ	3950	;# 
   124   000F6F                     UCFG            equ	3951	;# 
   125   000F70                     UEP0            equ	3952	;# 
   126   000F71                     UEP1            equ	3953	;# 
   127   000F72                     UEP2            equ	3954	;# 
   128   000F73                     UEP3            equ	3955	;# 
   129   000F74                     UEP4            equ	3956	;# 
   130   000F75                     UEP5            equ	3957	;# 
   131   000F76                     UEP6            equ	3958	;# 
   132   000F77                     UEP7            equ	3959	;# 
   133   000F78                     UEP8            equ	3960	;# 
   134   000F79                     UEP9            equ	3961	;# 
   135   000F7A                     UEP10           equ	3962	;# 
   136   000F7B                     UEP11           equ	3963	;# 
   137   000F7C                     UEP12           equ	3964	;# 
   138   000F7D                     UEP13           equ	3965	;# 
   139   000F7E                     UEP14           equ	3966	;# 
   140   000F7F                     UEP15           equ	3967	;# 
   141   000F80                     PORTA           equ	3968	;# 
   142   000F81                     PORTB           equ	3969	;# 
   143   000F82                     PORTC           equ	3970	;# 
   144   000F83                     PORTD           equ	3971	;# 
   145   000F84                     PORTE           equ	3972	;# 
   146   000F89                     LATA            equ	3977	;# 
   147   000F8A                     LATB            equ	3978	;# 
   148   000F8B                     LATC            equ	3979	;# 
   149   000F8C                     LATD            equ	3980	;# 
   150   000F8D                     LATE            equ	3981	;# 
   151   000F92                     TRISA           equ	3986	;# 
   152   000F92                     DDRA            equ	3986	;# 
   153   000F93                     TRISB           equ	3987	;# 
   154   000F93                     DDRB            equ	3987	;# 
   155   000F94                     TRISC           equ	3988	;# 
   156   000F94                     DDRC            equ	3988	;# 
   157   000F95                     TRISD           equ	3989	;# 
   158   000F95                     DDRD            equ	3989	;# 
   159   000F96                     TRISE           equ	3990	;# 
   160   000F96                     DDRE            equ	3990	;# 
   161   000F9B                     OSCTUNE         equ	3995	;# 
   162   000F9D                     PIE1            equ	3997	;# 
   163   000F9E                     PIR1            equ	3998	;# 
   164   000F9F                     IPR1            equ	3999	;# 
   165   000FA0                     PIE2            equ	4000	;# 
   166   000FA1                     PIR2            equ	4001	;# 
   167   000FA2                     IPR2            equ	4002	;# 
   168   000FA6                     EECON1          equ	4006	;# 
   169   000FA7                     EECON2          equ	4007	;# 
   170   000FA8                     EEDATA          equ	4008	;# 
   171   000FA9                     EEADR           equ	4009	;# 
   172   000FAB                     RCSTA           equ	4011	;# 
   173   000FAB                     RCSTA1          equ	4011	;# 
   174   000FAC                     TXSTA           equ	4012	;# 
   175   000FAC                     TXSTA1          equ	4012	;# 
   176   000FAD                     TXREG           equ	4013	;# 
   177   000FAD                     TXREG1          equ	4013	;# 
   178   000FAE                     RCREG           equ	4014	;# 
   179   000FAE                     RCREG1          equ	4014	;# 
   180   000FAF                     SPBRG           equ	4015	;# 
   181   000FAF                     SPBRG1          equ	4015	;# 
   182   000FB0                     SPBRGH          equ	4016	;# 
   183   000FB1                     T3CON           equ	4017	;# 
   184   000FB2                     TMR3            equ	4018	;# 
   185   000FB2                     TMR3L           equ	4018	;# 
   186   000FB3                     TMR3H           equ	4019	;# 
   187   000FB4                     CMCON           equ	4020	;# 
   188   000FB5                     CVRCON          equ	4021	;# 
   189   000FB6                     ECCP1AS         equ	4022	;# 
   190   000FB6                     CCP1AS          equ	4022	;# 
   191   000FB7                     ECCP1DEL        equ	4023	;# 
   192   000FB7                     CCP1DEL         equ	4023	;# 
   193   000FB8                     BAUDCON         equ	4024	;# 
   194   000FB8                     BAUDCTL         equ	4024	;# 
   195   000FBA                     CCP2CON         equ	4026	;# 
   196   000FBB                     CCPR2           equ	4027	;# 
   197   000FBB                     CCPR2L          equ	4027	;# 
   198   000FBC                     CCPR2H          equ	4028	;# 
   199   000FBD                     CCP1CON         equ	4029	;# 
   200   000FBD                     ECCP1CON        equ	4029	;# 
   201   000FBE                     CCPR1           equ	4030	;# 
   202   000FBE                     CCPR1L          equ	4030	;# 
   203   000FBF                     CCPR1H          equ	4031	;# 
   204   000FC0                     ADCON2          equ	4032	;# 
   205   000FC1                     ADCON1          equ	4033	;# 
   206   000FC2                     ADCON0          equ	4034	;# 
   207   000FC3                     ADRES           equ	4035	;# 
   208   000FC3                     ADRESL          equ	4035	;# 
   209   000FC4                     ADRESH          equ	4036	;# 
   210   000FC5                     SSPCON2         equ	4037	;# 
   211   000FC6                     SSPCON1         equ	4038	;# 
   212   000FC7                     SSPSTAT         equ	4039	;# 
   213   000FC8                     SSPADD          equ	4040	;# 
   214   000FC9                     SSPBUF          equ	4041	;# 
   215   000FCA                     T2CON           equ	4042	;# 
   216   000FCB                     PR2             equ	4043	;# 
   217   000FCB                     MEMCON          equ	4043	;# 
   218   000FCC                     TMR2            equ	4044	;# 
   219   000FCD                     T1CON           equ	4045	;# 
   220   000FCE                     TMR1            equ	4046	;# 
   221   000FCE                     TMR1L           equ	4046	;# 
   222   000FCF                     TMR1H           equ	4047	;# 
   223   000FD0                     RCON            equ	4048	;# 
   224   000FD1                     WDTCON          equ	4049	;# 
   225   000FD2                     HLVDCON         equ	4050	;# 
   226   000FD2                     LVDCON          equ	4050	;# 
   227   000FD3                     OSCCON          equ	4051	;# 
   228   000FD5                     T0CON           equ	4053	;# 
   229   000FD6                     TMR0            equ	4054	;# 
   230   000FD6                     TMR0L           equ	4054	;# 
   231   000FD7                     TMR0H           equ	4055	;# 
   232   000FD8                     STATUS          equ	4056	;# 
   233   000FD9                     FSR2            equ	4057	;# 
   234   000FD9                     FSR2L           equ	4057	;# 
   235   000FDA                     FSR2H           equ	4058	;# 
   236   000FDB                     PLUSW2          equ	4059	;# 
   237   000FDC                     PREINC2         equ	4060	;# 
   238   000FDD                     POSTDEC2        equ	4061	;# 
   239   000FDE                     POSTINC2        equ	4062	;# 
   240   000FDF                     INDF2           equ	4063	;# 
   241   000FE0                     BSR             equ	4064	;# 
   242   000FE1                     FSR1            equ	4065	;# 
   243   000FE1                     FSR1L           equ	4065	;# 
   244   000FE2                     FSR1H           equ	4066	;# 
   245   000FE3                     PLUSW1          equ	4067	;# 
   246   000FE4                     PREINC1         equ	4068	;# 
   247   000FE5                     POSTDEC1        equ	4069	;# 
   248   000FE6                     POSTINC1        equ	4070	;# 
   249   000FE7                     INDF1           equ	4071	;# 
   250   000FE8                     WREG            equ	4072	;# 
   251   000FE9                     FSR0            equ	4073	;# 
   252   000FE9                     FSR0L           equ	4073	;# 
   253   000FEA                     FSR0H           equ	4074	;# 
   254   000FEB                     PLUSW0          equ	4075	;# 
   255   000FEC                     PREINC0         equ	4076	;# 
   256   000FED                     POSTDEC0        equ	4077	;# 
   257   000FEE                     POSTINC0        equ	4078	;# 
   258   000FEF                     INDF0           equ	4079	;# 
   259   000FF0                     INTCON3         equ	4080	;# 
   260   000FF1                     INTCON2         equ	4081	;# 
   261   000FF2                     INTCON          equ	4082	;# 
   262   000FF3                     PROD            equ	4083	;# 
   263   000FF3                     PRODL           equ	4083	;# 
   264   000FF4                     PRODH           equ	4084	;# 
   265   000FF5                     TABLAT          equ	4085	;# 
   266   000FF6                     TBLPTR          equ	4086	;# 
   267   000FF6                     TBLPTRL         equ	4086	;# 
   268   000FF7                     TBLPTRH         equ	4087	;# 
   269   000FF8                     TBLPTRU         equ	4088	;# 
   270   000FF9                     PCLAT           equ	4089	;# 
   271   000FF9                     PC              equ	4089	;# 
   272   000FF9                     PCL             equ	4089	;# 
   273   000FFA                     PCLATH          equ	4090	;# 
   274   000FFB                     PCLATU          equ	4091	;# 
   275   000FFC                     STKPTR          equ	4092	;# 
   276   000FFD                     TOS             equ	4093	;# 
   277   000FFD                     TOSL            equ	4093	;# 
   278   000FFE                     TOSH            equ	4094	;# 
   279   000FFF                     TOSU            equ	4095	;# 
   280   000F62                     SPPDATA         equ	3938	;# 
   281   000F63                     SPPCFG          equ	3939	;# 
   282   000F64                     SPPEPS          equ	3940	;# 
   283   000F65                     SPPCON          equ	3941	;# 
   284   000F66                     UFRM            equ	3942	;# 
   285   000F66                     UFRML           equ	3942	;# 
   286   000F67                     UFRMH           equ	3943	;# 
   287   000F68                     UIR             equ	3944	;# 
   288   000F69                     UIE             equ	3945	;# 
   289   000F6A                     UEIR            equ	3946	;# 
   290   000F6B                     UEIE            equ	3947	;# 
   291   000F6C                     USTAT           equ	3948	;# 
   292   000F6D                     UCON            equ	3949	;# 
   293   000F6E                     UADDR           equ	3950	;# 
   294   000F6F                     UCFG            equ	3951	;# 
   295   000F70                     UEP0            equ	3952	;# 
   296   000F71                     UEP1            equ	3953	;# 
   297   000F72                     UEP2            equ	3954	;# 
   298   000F73                     UEP3            equ	3955	;# 
   299   000F74                     UEP4            equ	3956	;# 
   300   000F75                     UEP5            equ	3957	;# 
   301   000F76                     UEP6            equ	3958	;# 
   302   000F77                     UEP7            equ	3959	;# 
   303   000F78                     UEP8            equ	3960	;# 
   304   000F79                     UEP9            equ	3961	;# 
   305   000F7A                     UEP10           equ	3962	;# 
   306   000F7B                     UEP11           equ	3963	;# 
   307   000F7C                     UEP12           equ	3964	;# 
   308   000F7D                     UEP13           equ	3965	;# 
   309   000F7E                     UEP14           equ	3966	;# 
   310   000F7F                     UEP15           equ	3967	;# 
   311   000F80                     PORTA           equ	3968	;# 
   312   000F81                     PORTB           equ	3969	;# 
   313   000F82                     PORTC           equ	3970	;# 
   314   000F83                     PORTD           equ	3971	;# 
   315   000F84                     PORTE           equ	3972	;# 
   316   000F89                     LATA            equ	3977	;# 
   317   000F8A                     LATB            equ	3978	;# 
   318   000F8B                     LATC            equ	3979	;# 
   319   000F8C                     LATD            equ	3980	;# 
   320   000F8D                     LATE            equ	3981	;# 
   321   000F92                     TRISA           equ	3986	;# 
   322   000F92                     DDRA            equ	3986	;# 
   323   000F93                     TRISB           equ	3987	;# 
   324   000F93                     DDRB            equ	3987	;# 
   325   000F94                     TRISC           equ	3988	;# 
   326   000F94                     DDRC            equ	3988	;# 
   327   000F95                     TRISD           equ	3989	;# 
   328   000F95                     DDRD            equ	3989	;# 
   329   000F96                     TRISE           equ	3990	;# 
   330   000F96                     DDRE            equ	3990	;# 
   331   000F9B                     OSCTUNE         equ	3995	;# 
   332   000F9D                     PIE1            equ	3997	;# 
   333   000F9E                     PIR1            equ	3998	;# 
   334   000F9F                     IPR1            equ	3999	;# 
   335   000FA0                     PIE2            equ	4000	;# 
   336   000FA1                     PIR2            equ	4001	;# 
   337   000FA2                     IPR2            equ	4002	;# 
   338   000FA6                     EECON1          equ	4006	;# 
   339   000FA7                     EECON2          equ	4007	;# 
   340   000FA8                     EEDATA          equ	4008	;# 
   341   000FA9                     EEADR           equ	4009	;# 
   342   000FAB                     RCSTA           equ	4011	;# 
   343   000FAB                     RCSTA1          equ	4011	;# 
   344   000FAC                     TXSTA           equ	4012	;# 
   345   000FAC                     TXSTA1          equ	4012	;# 
   346   000FAD                     TXREG           equ	4013	;# 
   347   000FAD                     TXREG1          equ	4013	;# 
   348   000FAE                     RCREG           equ	4014	;# 
   349   000FAE                     RCREG1          equ	4014	;# 
   350   000FAF                     SPBRG           equ	4015	;# 
   351   000FAF                     SPBRG1          equ	4015	;# 
   352   000FB0                     SPBRGH          equ	4016	;# 
   353   000FB1                     T3CON           equ	4017	;# 
   354   000FB2                     TMR3            equ	4018	;# 
   355   000FB2                     TMR3L           equ	4018	;# 
   356   000FB3                     TMR3H           equ	4019	;# 
   357   000FB4                     CMCON           equ	4020	;# 
   358   000FB5                     CVRCON          equ	4021	;# 
   359   000FB6                     ECCP1AS         equ	4022	;# 
   360   000FB6                     CCP1AS          equ	4022	;# 
   361   000FB7                     ECCP1DEL        equ	4023	;# 
   362   000FB7                     CCP1DEL         equ	4023	;# 
   363   000FB8                     BAUDCON         equ	4024	;# 
   364   000FB8                     BAUDCTL         equ	4024	;# 
   365   000FBA                     CCP2CON         equ	4026	;# 
   366   000FBB                     CCPR2           equ	4027	;# 
   367   000FBB                     CCPR2L          equ	4027	;# 
   368   000FBC                     CCPR2H          equ	4028	;# 
   369   000FBD                     CCP1CON         equ	4029	;# 
   370   000FBD                     ECCP1CON        equ	4029	;# 
   371   000FBE                     CCPR1           equ	4030	;# 
   372   000FBE                     CCPR1L          equ	4030	;# 
   373   000FBF                     CCPR1H          equ	4031	;# 
   374   000FC0                     ADCON2          equ	4032	;# 
   375   000FC1                     ADCON1          equ	4033	;# 
   376   000FC2                     ADCON0          equ	4034	;# 
   377   000FC3                     ADRES           equ	4035	;# 
   378   000FC3                     ADRESL          equ	4035	;# 
   379   000FC4                     ADRESH          equ	4036	;# 
   380   000FC5                     SSPCON2         equ	4037	;# 
   381   000FC6                     SSPCON1         equ	4038	;# 
   382   000FC7                     SSPSTAT         equ	4039	;# 
   383   000FC8                     SSPADD          equ	4040	;# 
   384   000FC9                     SSPBUF          equ	4041	;# 
   385   000FCA                     T2CON           equ	4042	;# 
   386   000FCB                     PR2             equ	4043	;# 
   387   000FCB                     MEMCON          equ	4043	;# 
   388   000FCC                     TMR2            equ	4044	;# 
   389   000FCD                     T1CON           equ	4045	;# 
   390   000FCE                     TMR1            equ	4046	;# 
   391   000FCE                     TMR1L           equ	4046	;# 
   392   000FCF                     TMR1H           equ	4047	;# 
   393   000FD0                     RCON            equ	4048	;# 
   394   000FD1                     WDTCON          equ	4049	;# 
   395   000FD2                     HLVDCON         equ	4050	;# 
   396   000FD2                     LVDCON          equ	4050	;# 
   397   000FD3                     OSCCON          equ	4051	;# 
   398   000FD5                     T0CON           equ	4053	;# 
   399   000FD6                     TMR0            equ	4054	;# 
   400   000FD6                     TMR0L           equ	4054	;# 
   401   000FD7                     TMR0H           equ	4055	;# 
   402   000FD8                     STATUS          equ	4056	;# 
   403   000FD9                     FSR2            equ	4057	;# 
   404   000FD9                     FSR2L           equ	4057	;# 
   405   000FDA                     FSR2H           equ	4058	;# 
   406   000FDB                     PLUSW2          equ	4059	;# 
   407   000FDC                     PREINC2         equ	4060	;# 
   408   000FDD                     POSTDEC2        equ	4061	;# 
   409   000FDE                     POSTINC2        equ	4062	;# 
   410   000FDF                     INDF2           equ	4063	;# 
   411   000FE0                     BSR             equ	4064	;# 
   412   000FE1                     FSR1            equ	4065	;# 
   413   000FE1                     FSR1L           equ	4065	;# 
   414   000FE2                     FSR1H           equ	4066	;# 
   415   000FE3                     PLUSW1          equ	4067	;# 
   416   000FE4                     PREINC1         equ	4068	;# 
   417   000FE5                     POSTDEC1        equ	4069	;# 
   418   000FE6                     POSTINC1        equ	4070	;# 
   419   000FE7                     INDF1           equ	4071	;# 
   420   000FE8                     WREG            equ	4072	;# 
   421   000FE9                     FSR0            equ	4073	;# 
   422   000FE9                     FSR0L           equ	4073	;# 
   423   000FEA                     FSR0H           equ	4074	;# 
   424   000FEB                     PLUSW0          equ	4075	;# 
   425   000FEC                     PREINC0         equ	4076	;# 
   426   000FED                     POSTDEC0        equ	4077	;# 
   427   000FEE                     POSTINC0        equ	4078	;# 
   428   000FEF                     INDF0           equ	4079	;# 
   429   000FF0                     INTCON3         equ	4080	;# 
   430   000FF1                     INTCON2         equ	4081	;# 
   431   000FF2                     INTCON          equ	4082	;# 
   432   000FF3                     PROD            equ	4083	;# 
   433   000FF3                     PRODL           equ	4083	;# 
   434   000FF4                     PRODH           equ	4084	;# 
   435   000FF5                     TABLAT          equ	4085	;# 
   436   000FF6                     TBLPTR          equ	4086	;# 
   437   000FF6                     TBLPTRL         equ	4086	;# 
   438   000FF7                     TBLPTRH         equ	4087	;# 
   439   000FF8                     TBLPTRU         equ	4088	;# 
   440   000FF9                     PCLAT           equ	4089	;# 
   441   000FF9                     PC              equ	4089	;# 
   442   000FF9                     PCL             equ	4089	;# 
   443   000FFA                     PCLATH          equ	4090	;# 
   444   000FFB                     PCLATU          equ	4091	;# 
   445   000FFC                     STKPTR          equ	4092	;# 
   446   000FFD                     TOS             equ	4093	;# 
   447   000FFD                     TOSL            equ	4093	;# 
   448   000FFE                     TOSH            equ	4094	;# 
   449   000FFF                     TOSU            equ	4095	;# 
   450   000F62                     SPPDATA         equ	3938	;# 
   451   000F63                     SPPCFG          equ	3939	;# 
   452   000F64                     SPPEPS          equ	3940	;# 
   453   000F65                     SPPCON          equ	3941	;# 
   454   000F66                     UFRM            equ	3942	;# 
   455   000F66                     UFRML           equ	3942	;# 
   456   000F67                     UFRMH           equ	3943	;# 
   457   000F68                     UIR             equ	3944	;# 
   458   000F69                     UIE             equ	3945	;# 
   459   000F6A                     UEIR            equ	3946	;# 
   460   000F6B                     UEIE            equ	3947	;# 
   461   000F6C                     USTAT           equ	3948	;# 
   462   000F6D                     UCON            equ	3949	;# 
   463   000F6E                     UADDR           equ	3950	;# 
   464   000F6F                     UCFG            equ	3951	;# 
   465   000F70                     UEP0            equ	3952	;# 
   466   000F71                     UEP1            equ	3953	;# 
   467   000F72                     UEP2            equ	3954	;# 
   468   000F73                     UEP3            equ	3955	;# 
   469   000F74                     UEP4            equ	3956	;# 
   470   000F75                     UEP5            equ	3957	;# 
   471   000F76                     UEP6            equ	3958	;# 
   472   000F77                     UEP7            equ	3959	;# 
   473   000F78                     UEP8            equ	3960	;# 
   474   000F79                     UEP9            equ	3961	;# 
   475   000F7A                     UEP10           equ	3962	;# 
   476   000F7B                     UEP11           equ	3963	;# 
   477   000F7C                     UEP12           equ	3964	;# 
   478   000F7D                     UEP13           equ	3965	;# 
   479   000F7E                     UEP14           equ	3966	;# 
   480   000F7F                     UEP15           equ	3967	;# 
   481   000F80                     PORTA           equ	3968	;# 
   482   000F81                     PORTB           equ	3969	;# 
   483   000F82                     PORTC           equ	3970	;# 
   484   000F83                     PORTD           equ	3971	;# 
   485   000F84                     PORTE           equ	3972	;# 
   486   000F89                     LATA            equ	3977	;# 
   487   000F8A                     LATB            equ	3978	;# 
   488   000F8B                     LATC            equ	3979	;# 
   489   000F8C                     LATD            equ	3980	;# 
   490   000F8D                     LATE            equ	3981	;# 
   491   000F92                     TRISA           equ	3986	;# 
   492   000F92                     DDRA            equ	3986	;# 
   493   000F93                     TRISB           equ	3987	;# 
   494   000F93                     DDRB            equ	3987	;# 
   495   000F94                     TRISC           equ	3988	;# 
   496   000F94                     DDRC            equ	3988	;# 
   497   000F95                     TRISD           equ	3989	;# 
   498   000F95                     DDRD            equ	3989	;# 
   499   000F96                     TRISE           equ	3990	;# 
   500   000F96                     DDRE            equ	3990	;# 
   501   000F9B                     OSCTUNE         equ	3995	;# 
   502   000F9D                     PIE1            equ	3997	;# 
   503   000F9E                     PIR1            equ	3998	;# 
   504   000F9F                     IPR1            equ	3999	;# 
   505   000FA0                     PIE2            equ	4000	;# 
   506   000FA1                     PIR2            equ	4001	;# 
   507   000FA2                     IPR2            equ	4002	;# 
   508   000FA6                     EECON1          equ	4006	;# 
   509   000FA7                     EECON2          equ	4007	;# 
   510   000FA8                     EEDATA          equ	4008	;# 
   511   000FA9                     EEADR           equ	4009	;# 
   512   000FAB                     RCSTA           equ	4011	;# 
   513   000FAB                     RCSTA1          equ	4011	;# 
   514   000FAC                     TXSTA           equ	4012	;# 
   515   000FAC                     TXSTA1          equ	4012	;# 
   516   000FAD                     TXREG           equ	4013	;# 
   517   000FAD                     TXREG1          equ	4013	;# 
   518   000FAE                     RCREG           equ	4014	;# 
   519   000FAE                     RCREG1          equ	4014	;# 
   520   000FAF                     SPBRG           equ	4015	;# 
   521   000FAF                     SPBRG1          equ	4015	;# 
   522   000FB0                     SPBRGH          equ	4016	;# 
   523   000FB1                     T3CON           equ	4017	;# 
   524   000FB2                     TMR3            equ	4018	;# 
   525   000FB2                     TMR3L           equ	4018	;# 
   526   000FB3                     TMR3H           equ	4019	;# 
   527   000FB4                     CMCON           equ	4020	;# 
   528   000FB5                     CVRCON          equ	4021	;# 
   529   000FB6                     ECCP1AS         equ	4022	;# 
   530   000FB6                     CCP1AS          equ	4022	;# 
   531   000FB7                     ECCP1DEL        equ	4023	;# 
   532   000FB7                     CCP1DEL         equ	4023	;# 
   533   000FB8                     BAUDCON         equ	4024	;# 
   534   000FB8                     BAUDCTL         equ	4024	;# 
   535   000FBA                     CCP2CON         equ	4026	;# 
   536   000FBB                     CCPR2           equ	4027	;# 
   537   000FBB                     CCPR2L          equ	4027	;# 
   538   000FBC                     CCPR2H          equ	4028	;# 
   539   000FBD                     CCP1CON         equ	4029	;# 
   540   000FBD                     ECCP1CON        equ	4029	;# 
   541   000FBE                     CCPR1           equ	4030	;# 
   542   000FBE                     CCPR1L          equ	4030	;# 
   543   000FBF                     CCPR1H          equ	4031	;# 
   544   000FC0                     ADCON2          equ	4032	;# 
   545   000FC1                     ADCON1          equ	4033	;# 
   546   000FC2                     ADCON0          equ	4034	;# 
   547   000FC3                     ADRES           equ	4035	;# 
   548   000FC3                     ADRESL          equ	4035	;# 
   549   000FC4                     ADRESH          equ	4036	;# 
   550   000FC5                     SSPCON2         equ	4037	;# 
   551   000FC6                     SSPCON1         equ	4038	;# 
   552   000FC7                     SSPSTAT         equ	4039	;# 
   553   000FC8                     SSPADD          equ	4040	;# 
   554   000FC9                     SSPBUF          equ	4041	;# 
   555   000FCA                     T2CON           equ	4042	;# 
   556   000FCB                     PR2             equ	4043	;# 
   557   000FCB                     MEMCON          equ	4043	;# 
   558   000FCC                     TMR2            equ	4044	;# 
   559   000FCD                     T1CON           equ	4045	;# 
   560   000FCE                     TMR1            equ	4046	;# 
   561   000FCE                     TMR1L           equ	4046	;# 
   562   000FCF                     TMR1H           equ	4047	;# 
   563   000FD0                     RCON            equ	4048	;# 
   564   000FD1                     WDTCON          equ	4049	;# 
   565   000FD2                     HLVDCON         equ	4050	;# 
   566   000FD2                     LVDCON          equ	4050	;# 
   567   000FD3                     OSCCON          equ	4051	;# 
   568   000FD5                     T0CON           equ	4053	;# 
   569   000FD6                     TMR0            equ	4054	;# 
   570   000FD6                     TMR0L           equ	4054	;# 
   571   000FD7                     TMR0H           equ	4055	;# 
   572   000FD8                     STATUS          equ	4056	;# 
   573   000FD9                     FSR2            equ	4057	;# 
   574   000FD9                     FSR2L           equ	4057	;# 
   575   000FDA                     FSR2H           equ	4058	;# 
   576   000FDB                     PLUSW2          equ	4059	;# 
   577   000FDC                     PREINC2         equ	4060	;# 
   578   000FDD                     POSTDEC2        equ	4061	;# 
   579   000FDE                     POSTINC2        equ	4062	;# 
   580   000FDF                     INDF2           equ	4063	;# 
   581   000FE0                     BSR             equ	4064	;# 
   582   000FE1                     FSR1            equ	4065	;# 
   583   000FE1                     FSR1L           equ	4065	;# 
   584   000FE2                     FSR1H           equ	4066	;# 
   585   000FE3                     PLUSW1          equ	4067	;# 
   586   000FE4                     PREINC1         equ	4068	;# 
   587   000FE5                     POSTDEC1        equ	4069	;# 
   588   000FE6                     POSTINC1        equ	4070	;# 
   589   000FE7                     INDF1           equ	4071	;# 
   590   000FE8                     WREG            equ	4072	;# 
   591   000FE9                     FSR0            equ	4073	;# 
   592   000FE9                     FSR0L           equ	4073	;# 
   593   000FEA                     FSR0H           equ	4074	;# 
   594   000FEB                     PLUSW0          equ	4075	;# 
   595   000FEC                     PREINC0         equ	4076	;# 
   596   000FED                     POSTDEC0        equ	4077	;# 
   597   000FEE                     POSTINC0        equ	4078	;# 
   598   000FEF                     INDF0           equ	4079	;# 
   599   000FF0                     INTCON3         equ	4080	;# 
   600   000FF1                     INTCON2         equ	4081	;# 
   601   000FF2                     INTCON          equ	4082	;# 
   602   000FF3                     PROD            equ	4083	;# 
   603   000FF3                     PRODL           equ	4083	;# 
   604   000FF4                     PRODH           equ	4084	;# 
   605   000FF5                     TABLAT          equ	4085	;# 
   606   000FF6                     TBLPTR          equ	4086	;# 
   607   000FF6                     TBLPTRL         equ	4086	;# 
   608   000FF7                     TBLPTRH         equ	4087	;# 
   609   000FF8                     TBLPTRU         equ	4088	;# 
   610   000FF9                     PCLAT           equ	4089	;# 
   611   000FF9                     PC              equ	4089	;# 
   612   000FF9                     PCL             equ	4089	;# 
   613   000FFA                     PCLATH          equ	4090	;# 
   614   000FFB                     PCLATU          equ	4091	;# 
   615   000FFC                     STKPTR          equ	4092	;# 
   616   000FFD                     TOS             equ	4093	;# 
   617   000FFD                     TOSL            equ	4093	;# 
   618   000FFE                     TOSH            equ	4094	;# 
   619   000FFF                     TOSU            equ	4095	;# 
   620   000F62                     SPPDATA         equ	3938	;# 
   621   000F63                     SPPCFG          equ	3939	;# 
   622   000F64                     SPPEPS          equ	3940	;# 
   623   000F65                     SPPCON          equ	3941	;# 
   624   000F66                     UFRM            equ	3942	;# 
   625   000F66                     UFRML           equ	3942	;# 
   626   000F67                     UFRMH           equ	3943	;# 
   627   000F68                     UIR             equ	3944	;# 
   628   000F69                     UIE             equ	3945	;# 
   629   000F6A                     UEIR            equ	3946	;# 
   630   000F6B                     UEIE            equ	3947	;# 
   631   000F6C                     USTAT           equ	3948	;# 
   632   000F6D                     UCON            equ	3949	;# 
   633   000F6E                     UADDR           equ	3950	;# 
   634   000F6F                     UCFG            equ	3951	;# 
   635   000F70                     UEP0            equ	3952	;# 
   636   000F71                     UEP1            equ	3953	;# 
   637   000F72                     UEP2            equ	3954	;# 
   638   000F73                     UEP3            equ	3955	;# 
   639   000F74                     UEP4            equ	3956	;# 
   640   000F75                     UEP5            equ	3957	;# 
   641   000F76                     UEP6            equ	3958	;# 
   642   000F77                     UEP7            equ	3959	;# 
   643   000F78                     UEP8            equ	3960	;# 
   644   000F79                     UEP9            equ	3961	;# 
   645   000F7A                     UEP10           equ	3962	;# 
   646   000F7B                     UEP11           equ	3963	;# 
   647   000F7C                     UEP12           equ	3964	;# 
   648   000F7D                     UEP13           equ	3965	;# 
   649   000F7E                     UEP14           equ	3966	;# 
   650   000F7F                     UEP15           equ	3967	;# 
   651   000F80                     PORTA           equ	3968	;# 
   652   000F81                     PORTB           equ	3969	;# 
   653   000F82                     PORTC           equ	3970	;# 
   654   000F83                     PORTD           equ	3971	;# 
   655   000F84                     PORTE           equ	3972	;# 
   656   000F89                     LATA            equ	3977	;# 
   657   000F8A                     LATB            equ	3978	;# 
   658   000F8B                     LATC            equ	3979	;# 
   659   000F8C                     LATD            equ	3980	;# 
   660   000F8D                     LATE            equ	3981	;# 
   661   000F92                     TRISA           equ	3986	;# 
   662   000F92                     DDRA            equ	3986	;# 
   663   000F93                     TRISB           equ	3987	;# 
   664   000F93                     DDRB            equ	3987	;# 
   665   000F94                     TRISC           equ	3988	;# 
   666   000F94                     DDRC            equ	3988	;# 
   667   000F95                     TRISD           equ	3989	;# 
   668   000F95                     DDRD            equ	3989	;# 
   669   000F96                     TRISE           equ	3990	;# 
   670   000F96                     DDRE            equ	3990	;# 
   671   000F9B                     OSCTUNE         equ	3995	;# 
   672   000F9D                     PIE1            equ	3997	;# 
   673   000F9E                     PIR1            equ	3998	;# 
   674   000F9F                     IPR1            equ	3999	;# 
   675   000FA0                     PIE2            equ	4000	;# 
   676   000FA1                     PIR2            equ	4001	;# 
   677   000FA2                     IPR2            equ	4002	;# 
   678   000FA6                     EECON1          equ	4006	;# 
   679   000FA7                     EECON2          equ	4007	;# 
   680   000FA8                     EEDATA          equ	4008	;# 
   681   000FA9                     EEADR           equ	4009	;# 
   682   000FAB                     RCSTA           equ	4011	;# 
   683   000FAB                     RCSTA1          equ	4011	;# 
   684   000FAC                     TXSTA           equ	4012	;# 
   685   000FAC                     TXSTA1          equ	4012	;# 
   686   000FAD                     TXREG           equ	4013	;# 
   687   000FAD                     TXREG1          equ	4013	;# 
   688   000FAE                     RCREG           equ	4014	;# 
   689   000FAE                     RCREG1          equ	4014	;# 
   690   000FAF                     SPBRG           equ	4015	;# 
   691   000FAF                     SPBRG1          equ	4015	;# 
   692   000FB0                     SPBRGH          equ	4016	;# 
   693   000FB1                     T3CON           equ	4017	;# 
   694   000FB2                     TMR3            equ	4018	;# 
   695   000FB2                     TMR3L           equ	4018	;# 
   696   000FB3                     TMR3H           equ	4019	;# 
   697   000FB4                     CMCON           equ	4020	;# 
   698   000FB5                     CVRCON          equ	4021	;# 
   699   000FB6                     ECCP1AS         equ	4022	;# 
   700   000FB6                     CCP1AS          equ	4022	;# 
   701   000FB7                     ECCP1DEL        equ	4023	;# 
   702   000FB7                     CCP1DEL         equ	4023	;# 
   703   000FB8                     BAUDCON         equ	4024	;# 
   704   000FB8                     BAUDCTL         equ	4024	;# 
   705   000FBA                     CCP2CON         equ	4026	;# 
   706   000FBB                     CCPR2           equ	4027	;# 
   707   000FBB                     CCPR2L          equ	4027	;# 
   708   000FBC                     CCPR2H          equ	4028	;# 
   709   000FBD                     CCP1CON         equ	4029	;# 
   710   000FBD                     ECCP1CON        equ	4029	;# 
   711   000FBE                     CCPR1           equ	4030	;# 
   712   000FBE                     CCPR1L          equ	4030	;# 
   713   000FBF                     CCPR1H          equ	4031	;# 
   714   000FC0                     ADCON2          equ	4032	;# 
   715   000FC1                     ADCON1          equ	4033	;# 
   716   000FC2                     ADCON0          equ	4034	;# 
   717   000FC3                     ADRES           equ	4035	;# 
   718   000FC3                     ADRESL          equ	4035	;# 
   719   000FC4                     ADRESH          equ	4036	;# 
   720   000FC5                     SSPCON2         equ	4037	;# 
   721   000FC6                     SSPCON1         equ	4038	;# 
   722   000FC7                     SSPSTAT         equ	4039	;# 
   723   000FC8                     SSPADD          equ	4040	;# 
   724   000FC9                     SSPBUF          equ	4041	;# 
   725   000FCA                     T2CON           equ	4042	;# 
   726   000FCB                     PR2             equ	4043	;# 
   727   000FCB                     MEMCON          equ	4043	;# 
   728   000FCC                     TMR2            equ	4044	;# 
   729   000FCD                     T1CON           equ	4045	;# 
   730   000FCE                     TMR1            equ	4046	;# 
   731   000FCE                     TMR1L           equ	4046	;# 
   732   000FCF                     TMR1H           equ	4047	;# 
   733   000FD0                     RCON            equ	4048	;# 
   734   000FD1                     WDTCON          equ	4049	;# 
   735   000FD2                     HLVDCON         equ	4050	;# 
   736   000FD2                     LVDCON          equ	4050	;# 
   737   000FD3                     OSCCON          equ	4051	;# 
   738   000FD5                     T0CON           equ	4053	;# 
   739   000FD6                     TMR0            equ	4054	;# 
   740   000FD6                     TMR0L           equ	4054	;# 
   741   000FD7                     TMR0H           equ	4055	;# 
   742   000FD8                     STATUS          equ	4056	;# 
   743   000FD9                     FSR2            equ	4057	;# 
   744   000FD9                     FSR2L           equ	4057	;# 
   745   000FDA                     FSR2H           equ	4058	;# 
   746   000FDB                     PLUSW2          equ	4059	;# 
   747   000FDC                     PREINC2         equ	4060	;# 
   748   000FDD                     POSTDEC2        equ	4061	;# 
   749   000FDE                     POSTINC2        equ	4062	;# 
   750   000FDF                     INDF2           equ	4063	;# 
   751   000FE0                     BSR             equ	4064	;# 
   752   000FE1                     FSR1            equ	4065	;# 
   753   000FE1                     FSR1L           equ	4065	;# 
   754   000FE2                     FSR1H           equ	4066	;# 
   755   000FE3                     PLUSW1          equ	4067	;# 
   756   000FE4                     PREINC1         equ	4068	;# 
   757   000FE5                     POSTDEC1        equ	4069	;# 
   758   000FE6                     POSTINC1        equ	4070	;# 
   759   000FE7                     INDF1           equ	4071	;# 
   760   000FE8                     WREG            equ	4072	;# 
   761   000FE9                     FSR0            equ	4073	;# 
   762   000FE9                     FSR0L           equ	4073	;# 
   763   000FEA                     FSR0H           equ	4074	;# 
   764   000FEB                     PLUSW0          equ	4075	;# 
   765   000FEC                     PREINC0         equ	4076	;# 
   766   000FED                     POSTDEC0        equ	4077	;# 
   767   000FEE                     POSTINC0        equ	4078	;# 
   768   000FEF                     INDF0           equ	4079	;# 
   769   000FF0                     INTCON3         equ	4080	;# 
   770   000FF1                     INTCON2         equ	4081	;# 
   771   000FF2                     INTCON          equ	4082	;# 
   772   000FF3                     PROD            equ	4083	;# 
   773   000FF3                     PRODL           equ	4083	;# 
   774   000FF4                     PRODH           equ	4084	;# 
   775   000FF5                     TABLAT          equ	4085	;# 
   776   000FF6                     TBLPTR          equ	4086	;# 
   777   000FF6                     TBLPTRL         equ	4086	;# 
   778   000FF7                     TBLPTRH         equ	4087	;# 
   779   000FF8                     TBLPTRU         equ	4088	;# 
   780   000FF9                     PCLAT           equ	4089	;# 
   781   000FF9                     PC              equ	4089	;# 
   782   000FF9                     PCL             equ	4089	;# 
   783   000FFA                     PCLATH          equ	4090	;# 
   784   000FFB                     PCLATU          equ	4091	;# 
   785   000FFC                     STKPTR          equ	4092	;# 
   786   000FFD                     TOS             equ	4093	;# 
   787   000FFD                     TOSL            equ	4093	;# 
   788   000FFE                     TOSH            equ	4094	;# 
   789   000FFF                     TOSU            equ	4095	;# 
   790   000F62                     SPPDATA         equ	3938	;# 
   791   000F63                     SPPCFG          equ	3939	;# 
   792   000F64                     SPPEPS          equ	3940	;# 
   793   000F65                     SPPCON          equ	3941	;# 
   794   000F66                     UFRM            equ	3942	;# 
   795   000F66                     UFRML           equ	3942	;# 
   796   000F67                     UFRMH           equ	3943	;# 
   797   000F68                     UIR             equ	3944	;# 
   798   000F69                     UIE             equ	3945	;# 
   799   000F6A                     UEIR            equ	3946	;# 
   800   000F6B                     UEIE            equ	3947	;# 
   801   000F6C                     USTAT           equ	3948	;# 
   802   000F6D                     UCON            equ	3949	;# 
   803   000F6E                     UADDR           equ	3950	;# 
   804   000F6F                     UCFG            equ	3951	;# 
   805   000F70                     UEP0            equ	3952	;# 
   806   000F71                     UEP1            equ	3953	;# 
   807   000F72                     UEP2            equ	3954	;# 
   808   000F73                     UEP3            equ	3955	;# 
   809   000F74                     UEP4            equ	3956	;# 
   810   000F75                     UEP5            equ	3957	;# 
   811   000F76                     UEP6            equ	3958	;# 
   812   000F77                     UEP7            equ	3959	;# 
   813   000F78                     UEP8            equ	3960	;# 
   814   000F79                     UEP9            equ	3961	;# 
   815   000F7A                     UEP10           equ	3962	;# 
   816   000F7B                     UEP11           equ	3963	;# 
   817   000F7C                     UEP12           equ	3964	;# 
   818   000F7D                     UEP13           equ	3965	;# 
   819   000F7E                     UEP14           equ	3966	;# 
   820   000F7F                     UEP15           equ	3967	;# 
   821   000F80                     PORTA           equ	3968	;# 
   822   000F81                     PORTB           equ	3969	;# 
   823   000F82                     PORTC           equ	3970	;# 
   824   000F83                     PORTD           equ	3971	;# 
   825   000F84                     PORTE           equ	3972	;# 
   826   000F89                     LATA            equ	3977	;# 
   827   000F8A                     LATB            equ	3978	;# 
   828   000F8B                     LATC            equ	3979	;# 
   829   000F8C                     LATD            equ	3980	;# 
   830   000F8D                     LATE            equ	3981	;# 
   831   000F92                     TRISA           equ	3986	;# 
   832   000F92                     DDRA            equ	3986	;# 
   833   000F93                     TRISB           equ	3987	;# 
   834   000F93                     DDRB            equ	3987	;# 
   835   000F94                     TRISC           equ	3988	;# 
   836   000F94                     DDRC            equ	3988	;# 
   837   000F95                     TRISD           equ	3989	;# 
   838   000F95                     DDRD            equ	3989	;# 
   839   000F96                     TRISE           equ	3990	;# 
   840   000F96                     DDRE            equ	3990	;# 
   841   000F9B                     OSCTUNE         equ	3995	;# 
   842   000F9D                     PIE1            equ	3997	;# 
   843   000F9E                     PIR1            equ	3998	;# 
   844   000F9F                     IPR1            equ	3999	;# 
   845   000FA0                     PIE2            equ	4000	;# 
   846   000FA1                     PIR2            equ	4001	;# 
   847   000FA2                     IPR2            equ	4002	;# 
   848   000FA6                     EECON1          equ	4006	;# 
   849   000FA7                     EECON2          equ	4007	;# 
   850   000FA8                     EEDATA          equ	4008	;# 
   851   000FA9                     EEADR           equ	4009	;# 
   852   000FAB                     RCSTA           equ	4011	;# 
   853   000FAB                     RCSTA1          equ	4011	;# 
   854   000FAC                     TXSTA           equ	4012	;# 
   855   000FAC                     TXSTA1          equ	4012	;# 
   856   000FAD                     TXREG           equ	4013	;# 
   857   000FAD                     TXREG1          equ	4013	;# 
   858   000FAE                     RCREG           equ	4014	;# 
   859   000FAE                     RCREG1          equ	4014	;# 
   860   000FAF                     SPBRG           equ	4015	;# 
   861   000FAF                     SPBRG1          equ	4015	;# 
   862   000FB0                     SPBRGH          equ	4016	;# 
   863   000FB1                     T3CON           equ	4017	;# 
   864   000FB2                     TMR3            equ	4018	;# 
   865   000FB2                     TMR3L           equ	4018	;# 
   866   000FB3                     TMR3H           equ	4019	;# 
   867   000FB4                     CMCON           equ	4020	;# 
   868   000FB5                     CVRCON          equ	4021	;# 
   869   000FB6                     ECCP1AS         equ	4022	;# 
   870   000FB6                     CCP1AS          equ	4022	;# 
   871   000FB7                     ECCP1DEL        equ	4023	;# 
   872   000FB7                     CCP1DEL         equ	4023	;# 
   873   000FB8                     BAUDCON         equ	4024	;# 
   874   000FB8                     BAUDCTL         equ	4024	;# 
   875   000FBA                     CCP2CON         equ	4026	;# 
   876   000FBB                     CCPR2           equ	4027	;# 
   877   000FBB                     CCPR2L          equ	4027	;# 
   878   000FBC                     CCPR2H          equ	4028	;# 
   879   000FBD                     CCP1CON         equ	4029	;# 
   880   000FBD                     ECCP1CON        equ	4029	;# 
   881   000FBE                     CCPR1           equ	4030	;# 
   882   000FBE                     CCPR1L          equ	4030	;# 
   883   000FBF                     CCPR1H          equ	4031	;# 
   884   000FC0                     ADCON2          equ	4032	;# 
   885   000FC1                     ADCON1          equ	4033	;# 
   886   000FC2                     ADCON0          equ	4034	;# 
   887   000FC3                     ADRES           equ	4035	;# 
   888   000FC3                     ADRESL          equ	4035	;# 
   889   000FC4                     ADRESH          equ	4036	;# 
   890   000FC5                     SSPCON2         equ	4037	;# 
   891   000FC6                     SSPCON1         equ	4038	;# 
   892   000FC7                     SSPSTAT         equ	4039	;# 
   893   000FC8                     SSPADD          equ	4040	;# 
   894   000FC9                     SSPBUF          equ	4041	;# 
   895   000FCA                     T2CON           equ	4042	;# 
   896   000FCB                     PR2             equ	4043	;# 
   897   000FCB                     MEMCON          equ	4043	;# 
   898   000FCC                     TMR2            equ	4044	;# 
   899   000FCD                     T1CON           equ	4045	;# 
   900   000FCE                     TMR1            equ	4046	;# 
   901   000FCE                     TMR1L           equ	4046	;# 
   902   000FCF                     TMR1H           equ	4047	;# 
   903   000FD0                     RCON            equ	4048	;# 
   904   000FD1                     WDTCON          equ	4049	;# 
   905   000FD2                     HLVDCON         equ	4050	;# 
   906   000FD2                     LVDCON          equ	4050	;# 
   907   000FD3                     OSCCON          equ	4051	;# 
   908   000FD5                     T0CON           equ	4053	;# 
   909   000FD6                     TMR0            equ	4054	;# 
   910   000FD6                     TMR0L           equ	4054	;# 
   911   000FD7                     TMR0H           equ	4055	;# 
   912   000FD8                     STATUS          equ	4056	;# 
   913   000FD9                     FSR2            equ	4057	;# 
   914   000FD9                     FSR2L           equ	4057	;# 
   915   000FDA                     FSR2H           equ	4058	;# 
   916   000FDB                     PLUSW2          equ	4059	;# 
   917   000FDC                     PREINC2         equ	4060	;# 
   918   000FDD                     POSTDEC2        equ	4061	;# 
   919   000FDE                     POSTINC2        equ	4062	;# 
   920   000FDF                     INDF2           equ	4063	;# 
   921   000FE0                     BSR             equ	4064	;# 
   922   000FE1                     FSR1            equ	4065	;# 
   923   000FE1                     FSR1L           equ	4065	;# 
   924   000FE2                     FSR1H           equ	4066	;# 
   925   000FE3                     PLUSW1          equ	4067	;# 
   926   000FE4                     PREINC1         equ	4068	;# 
   927   000FE5                     POSTDEC1        equ	4069	;# 
   928   000FE6                     POSTINC1        equ	4070	;# 
   929   000FE7                     INDF1           equ	4071	;# 
   930   000FE8                     WREG            equ	4072	;# 
   931   000FE9                     FSR0            equ	4073	;# 
   932   000FE9                     FSR0L           equ	4073	;# 
   933   000FEA                     FSR0H           equ	4074	;# 
   934   000FEB                     PLUSW0          equ	4075	;# 
   935   000FEC                     PREINC0         equ	4076	;# 
   936   000FED                     POSTDEC0        equ	4077	;# 
   937   000FEE                     POSTINC0        equ	4078	;# 
   938   000FEF                     INDF0           equ	4079	;# 
   939   000FF0                     INTCON3         equ	4080	;# 
   940   000FF1                     INTCON2         equ	4081	;# 
   941   000FF2                     INTCON          equ	4082	;# 
   942   000FF3                     PROD            equ	4083	;# 
   943   000FF3                     PRODL           equ	4083	;# 
   944   000FF4                     PRODH           equ	4084	;# 
   945   000FF5                     TABLAT          equ	4085	;# 
   946   000FF6                     TBLPTR          equ	4086	;# 
   947   000FF6                     TBLPTRL         equ	4086	;# 
   948   000FF7                     TBLPTRH         equ	4087	;# 
   949   000FF8                     TBLPTRU         equ	4088	;# 
   950   000FF9                     PCLAT           equ	4089	;# 
   951   000FF9                     PC              equ	4089	;# 
   952   000FF9                     PCL             equ	4089	;# 
   953   000FFA                     PCLATH          equ	4090	;# 
   954   000FFB                     PCLATU          equ	4091	;# 
   955   000FFC                     STKPTR          equ	4092	;# 
   956   000FFD                     TOS             equ	4093	;# 
   957   000FFD                     TOSL            equ	4093	;# 
   958   000FFE                     TOSH            equ	4094	;# 
   959   000FFF                     TOSU            equ	4095	;# 
   960   000F62                     SPPDATA         equ	3938	;# 
   961   000F63                     SPPCFG          equ	3939	;# 
   962   000F64                     SPPEPS          equ	3940	;# 
   963   000F65                     SPPCON          equ	3941	;# 
   964   000F66                     UFRM            equ	3942	;# 
   965   000F66                     UFRML           equ	3942	;# 
   966   000F67                     UFRMH           equ	3943	;# 
   967   000F68                     UIR             equ	3944	;# 
   968   000F69                     UIE             equ	3945	;# 
   969   000F6A                     UEIR            equ	3946	;# 
   970   000F6B                     UEIE            equ	3947	;# 
   971   000F6C                     USTAT           equ	3948	;# 
   972   000F6D                     UCON            equ	3949	;# 
   973   000F6E                     UADDR           equ	3950	;# 
   974   000F6F                     UCFG            equ	3951	;# 
   975   000F70                     UEP0            equ	3952	;# 
   976   000F71                     UEP1            equ	3953	;# 
   977   000F72                     UEP2            equ	3954	;# 
   978   000F73                     UEP3            equ	3955	;# 
   979   000F74                     UEP4            equ	3956	;# 
   980   000F75                     UEP5            equ	3957	;# 
   981   000F76                     UEP6            equ	3958	;# 
   982   000F77                     UEP7            equ	3959	;# 
   983   000F78                     UEP8            equ	3960	;# 
   984   000F79                     UEP9            equ	3961	;# 
   985   000F7A                     UEP10           equ	3962	;# 
   986   000F7B                     UEP11           equ	3963	;# 
   987   000F7C                     UEP12           equ	3964	;# 
   988   000F7D                     UEP13           equ	3965	;# 
   989   000F7E                     UEP14           equ	3966	;# 
   990   000F7F                     UEP15           equ	3967	;# 
   991   000F80                     PORTA           equ	3968	;# 
   992   000F81                     PORTB           equ	3969	;# 
   993   000F82                     PORTC           equ	3970	;# 
   994   000F83                     PORTD           equ	3971	;# 
   995   000F84                     PORTE           equ	3972	;# 
   996   000F89                     LATA            equ	3977	;# 
   997   000F8A                     LATB            equ	3978	;# 
   998   000F8B                     LATC            equ	3979	;# 
   999   000F8C                     LATD            equ	3980	;# 
  1000   000F8D                     LATE            equ	3981	;# 
  1001   000F92                     TRISA           equ	3986	;# 
  1002   000F92                     DDRA            equ	3986	;# 
  1003   000F93                     TRISB           equ	3987	;# 
  1004   000F93                     DDRB            equ	3987	;# 
  1005   000F94                     TRISC           equ	3988	;# 
  1006   000F94                     DDRC            equ	3988	;# 
  1007   000F95                     TRISD           equ	3989	;# 
  1008   000F95                     DDRD            equ	3989	;# 
  1009   000F96                     TRISE           equ	3990	;# 
  1010   000F96                     DDRE            equ	3990	;# 
  1011   000F9B                     OSCTUNE         equ	3995	;# 
  1012   000F9D                     PIE1            equ	3997	;# 
  1013   000F9E                     PIR1            equ	3998	;# 
  1014   000F9F                     IPR1            equ	3999	;# 
  1015   000FA0                     PIE2            equ	4000	;# 
  1016   000FA1                     PIR2            equ	4001	;# 
  1017   000FA2                     IPR2            equ	4002	;# 
  1018   000FA6                     EECON1          equ	4006	;# 
  1019   000FA7                     EECON2          equ	4007	;# 
  1020   000FA8                     EEDATA          equ	4008	;# 
  1021   000FA9                     EEADR           equ	4009	;# 
  1022   000FAB                     RCSTA           equ	4011	;# 
  1023   000FAB                     RCSTA1          equ	4011	;# 
  1024   000FAC                     TXSTA           equ	4012	;# 
  1025   000FAC                     TXSTA1          equ	4012	;# 
  1026   000FAD                     TXREG           equ	4013	;# 
  1027   000FAD                     TXREG1          equ	4013	;# 
  1028   000FAE                     RCREG           equ	4014	;# 
  1029   000FAE                     RCREG1          equ	4014	;# 
  1030   000FAF                     SPBRG           equ	4015	;# 
  1031   000FAF                     SPBRG1          equ	4015	;# 
  1032   000FB0                     SPBRGH          equ	4016	;# 
  1033   000FB1                     T3CON           equ	4017	;# 
  1034   000FB2                     TMR3            equ	4018	;# 
  1035   000FB2                     TMR3L           equ	4018	;# 
  1036   000FB3                     TMR3H           equ	4019	;# 
  1037   000FB4                     CMCON           equ	4020	;# 
  1038   000FB5                     CVRCON          equ	4021	;# 
  1039   000FB6                     ECCP1AS         equ	4022	;# 
  1040   000FB6                     CCP1AS          equ	4022	;# 
  1041   000FB7                     ECCP1DEL        equ	4023	;# 
  1042   000FB7                     CCP1DEL         equ	4023	;# 
  1043   000FB8                     BAUDCON         equ	4024	;# 
  1044   000FB8                     BAUDCTL         equ	4024	;# 
  1045   000FBA                     CCP2CON         equ	4026	;# 
  1046   000FBB                     CCPR2           equ	4027	;# 
  1047   000FBB                     CCPR2L          equ	4027	;# 
  1048   000FBC                     CCPR2H          equ	4028	;# 
  1049   000FBD                     CCP1CON         equ	4029	;# 
  1050   000FBD                     ECCP1CON        equ	4029	;# 
  1051   000FBE                     CCPR1           equ	4030	;# 
  1052   000FBE                     CCPR1L          equ	4030	;# 
  1053   000FBF                     CCPR1H          equ	4031	;# 
  1054   000FC0                     ADCON2          equ	4032	;# 
  1055   000FC1                     ADCON1          equ	4033	;# 
  1056   000FC2                     ADCON0          equ	4034	;# 
  1057   000FC3                     ADRES           equ	4035	;# 
  1058   000FC3                     ADRESL          equ	4035	;# 
  1059   000FC4                     ADRESH          equ	4036	;# 
  1060   000FC5                     SSPCON2         equ	4037	;# 
  1061   000FC6                     SSPCON1         equ	4038	;# 
  1062   000FC7                     SSPSTAT         equ	4039	;# 
  1063   000FC8                     SSPADD          equ	4040	;# 
  1064   000FC9                     SSPBUF          equ	4041	;# 
  1065   000FCA                     T2CON           equ	4042	;# 
  1066   000FCB                     PR2             equ	4043	;# 
  1067   000FCB                     MEMCON          equ	4043	;# 
  1068   000FCC                     TMR2            equ	4044	;# 
  1069   000FCD                     T1CON           equ	4045	;# 
  1070   000FCE                     TMR1            equ	4046	;# 
  1071   000FCE                     TMR1L           equ	4046	;# 
  1072   000FCF                     TMR1H           equ	4047	;# 
  1073   000FD0                     RCON            equ	4048	;# 
  1074   000FD1                     WDTCON          equ	4049	;# 
  1075   000FD2                     HLVDCON         equ	4050	;# 
  1076   000FD2                     LVDCON          equ	4050	;# 
  1077   000FD3                     OSCCON          equ	4051	;# 
  1078   000FD5                     T0CON           equ	4053	;# 
  1079   000FD6                     TMR0            equ	4054	;# 
  1080   000FD6                     TMR0L           equ	4054	;# 
  1081   000FD7                     TMR0H           equ	4055	;# 
  1082   000FD8                     STATUS          equ	4056	;# 
  1083   000FD9                     FSR2            equ	4057	;# 
  1084   000FD9                     FSR2L           equ	4057	;# 
  1085   000FDA                     FSR2H           equ	4058	;# 
  1086   000FDB                     PLUSW2          equ	4059	;# 
  1087   000FDC                     PREINC2         equ	4060	;# 
  1088   000FDD                     POSTDEC2        equ	4061	;# 
  1089   000FDE                     POSTINC2        equ	4062	;# 
  1090   000FDF                     INDF2           equ	4063	;# 
  1091   000FE0                     BSR             equ	4064	;# 
  1092   000FE1                     FSR1            equ	4065	;# 
  1093   000FE1                     FSR1L           equ	4065	;# 
  1094   000FE2                     FSR1H           equ	4066	;# 
  1095   000FE3                     PLUSW1          equ	4067	;# 
  1096   000FE4                     PREINC1         equ	4068	;# 
  1097   000FE5                     POSTDEC1        equ	4069	;# 
  1098   000FE6                     POSTINC1        equ	4070	;# 
  1099   000FE7                     INDF1           equ	4071	;# 
  1100   000FE8                     WREG            equ	4072	;# 
  1101   000FE9                     FSR0            equ	4073	;# 
  1102   000FE9                     FSR0L           equ	4073	;# 
  1103   000FEA                     FSR0H           equ	4074	;# 
  1104   000FEB                     PLUSW0          equ	4075	;# 
  1105   000FEC                     PREINC0         equ	4076	;# 
  1106   000FED                     POSTDEC0        equ	4077	;# 
  1107   000FEE                     POSTINC0        equ	4078	;# 
  1108   000FEF                     INDF0           equ	4079	;# 
  1109   000FF0                     INTCON3         equ	4080	;# 
  1110   000FF1                     INTCON2         equ	4081	;# 
  1111   000FF2                     INTCON          equ	4082	;# 
  1112   000FF3                     PROD            equ	4083	;# 
  1113   000FF3                     PRODL           equ	4083	;# 
  1114   000FF4                     PRODH           equ	4084	;# 
  1115   000FF5                     TABLAT          equ	4085	;# 
  1116   000FF6                     TBLPTR          equ	4086	;# 
  1117   000FF6                     TBLPTRL         equ	4086	;# 
  1118   000FF7                     TBLPTRH         equ	4087	;# 
  1119   000FF8                     TBLPTRU         equ	4088	;# 
  1120   000FF9                     PCLAT           equ	4089	;# 
  1121   000FF9                     PC              equ	4089	;# 
  1122   000FF9                     PCL             equ	4089	;# 
  1123   000FFA                     PCLATH          equ	4090	;# 
  1124   000FFB                     PCLATU          equ	4091	;# 
  1125   000FFC                     STKPTR          equ	4092	;# 
  1126   000FFD                     TOS             equ	4093	;# 
  1127   000FFD                     TOSL            equ	4093	;# 
  1128   000FFE                     TOSH            equ	4094	;# 
  1129   000FFF                     TOSU            equ	4095	;# 
  1130   000F62                     SPPDATA         equ	3938	;# 
  1131   000F63                     SPPCFG          equ	3939	;# 
  1132   000F64                     SPPEPS          equ	3940	;# 
  1133   000F65                     SPPCON          equ	3941	;# 
  1134   000F66                     UFRM            equ	3942	;# 
  1135   000F66                     UFRML           equ	3942	;# 
  1136   000F67                     UFRMH           equ	3943	;# 
  1137   000F68                     UIR             equ	3944	;# 
  1138   000F69                     UIE             equ	3945	;# 
  1139   000F6A                     UEIR            equ	3946	;# 
  1140   000F6B                     UEIE            equ	3947	;# 
  1141   000F6C                     USTAT           equ	3948	;# 
  1142   000F6D                     UCON            equ	3949	;# 
  1143   000F6E                     UADDR           equ	3950	;# 
  1144   000F6F                     UCFG            equ	3951	;# 
  1145   000F70                     UEP0            equ	3952	;# 
  1146   000F71                     UEP1            equ	3953	;# 
  1147   000F72                     UEP2            equ	3954	;# 
  1148   000F73                     UEP3            equ	3955	;# 
  1149   000F74                     UEP4            equ	3956	;# 
  1150   000F75                     UEP5            equ	3957	;# 
  1151   000F76                     UEP6            equ	3958	;# 
  1152   000F77                     UEP7            equ	3959	;# 
  1153   000F78                     UEP8            equ	3960	;# 
  1154   000F79                     UEP9            equ	3961	;# 
  1155   000F7A                     UEP10           equ	3962	;# 
  1156   000F7B                     UEP11           equ	3963	;# 
  1157   000F7C                     UEP12           equ	3964	;# 
  1158   000F7D                     UEP13           equ	3965	;# 
  1159   000F7E                     UEP14           equ	3966	;# 
  1160   000F7F                     UEP15           equ	3967	;# 
  1161   000F80                     PORTA           equ	3968	;# 
  1162   000F81                     PORTB           equ	3969	;# 
  1163   000F82                     PORTC           equ	3970	;# 
  1164   000F83                     PORTD           equ	3971	;# 
  1165   000F84                     PORTE           equ	3972	;# 
  1166   000F89                     LATA            equ	3977	;# 
  1167   000F8A                     LATB            equ	3978	;# 
  1168   000F8B                     LATC            equ	3979	;# 
  1169   000F8C                     LATD            equ	3980	;# 
  1170   000F8D                     LATE            equ	3981	;# 
  1171   000F92                     TRISA           equ	3986	;# 
  1172   000F92                     DDRA            equ	3986	;# 
  1173   000F93                     TRISB           equ	3987	;# 
  1174   000F93                     DDRB            equ	3987	;# 
  1175   000F94                     TRISC           equ	3988	;# 
  1176   000F94                     DDRC            equ	3988	;# 
  1177   000F95                     TRISD           equ	3989	;# 
  1178   000F95                     DDRD            equ	3989	;# 
  1179   000F96                     TRISE           equ	3990	;# 
  1180   000F96                     DDRE            equ	3990	;# 
  1181   000F9B                     OSCTUNE         equ	3995	;# 
  1182   000F9D                     PIE1            equ	3997	;# 
  1183   000F9E                     PIR1            equ	3998	;# 
  1184   000F9F                     IPR1            equ	3999	;# 
  1185   000FA0                     PIE2            equ	4000	;# 
  1186   000FA1                     PIR2            equ	4001	;# 
  1187   000FA2                     IPR2            equ	4002	;# 
  1188   000FA6                     EECON1          equ	4006	;# 
  1189   000FA7                     EECON2          equ	4007	;# 
  1190   000FA8                     EEDATA          equ	4008	;# 
  1191   000FA9                     EEADR           equ	4009	;# 
  1192   000FAB                     RCSTA           equ	4011	;# 
  1193   000FAB                     RCSTA1          equ	4011	;# 
  1194   000FAC                     TXSTA           equ	4012	;# 
  1195   000FAC                     TXSTA1          equ	4012	;# 
  1196   000FAD                     TXREG           equ	4013	;# 
  1197   000FAD                     TXREG1          equ	4013	;# 
  1198   000FAE                     RCREG           equ	4014	;# 
  1199   000FAE                     RCREG1          equ	4014	;# 
  1200   000FAF                     SPBRG           equ	4015	;# 
  1201   000FAF                     SPBRG1          equ	4015	;# 
  1202   000FB0                     SPBRGH          equ	4016	;# 
  1203   000FB1                     T3CON           equ	4017	;# 
  1204   000FB2                     TMR3            equ	4018	;# 
  1205   000FB2                     TMR3L           equ	4018	;# 
  1206   000FB3                     TMR3H           equ	4019	;# 
  1207   000FB4                     CMCON           equ	4020	;# 
  1208   000FB5                     CVRCON          equ	4021	;# 
  1209   000FB6                     ECCP1AS         equ	4022	;# 
  1210   000FB6                     CCP1AS          equ	4022	;# 
  1211   000FB7                     ECCP1DEL        equ	4023	;# 
  1212   000FB7                     CCP1DEL         equ	4023	;# 
  1213   000FB8                     BAUDCON         equ	4024	;# 
  1214   000FB8                     BAUDCTL         equ	4024	;# 
  1215   000FBA                     CCP2CON         equ	4026	;# 
  1216   000FBB                     CCPR2           equ	4027	;# 
  1217   000FBB                     CCPR2L          equ	4027	;# 
  1218   000FBC                     CCPR2H          equ	4028	;# 
  1219   000FBD                     CCP1CON         equ	4029	;# 
  1220   000FBD                     ECCP1CON        equ	4029	;# 
  1221   000FBE                     CCPR1           equ	4030	;# 
  1222   000FBE                     CCPR1L          equ	4030	;# 
  1223   000FBF                     CCPR1H          equ	4031	;# 
  1224   000FC0                     ADCON2          equ	4032	;# 
  1225   000FC1                     ADCON1          equ	4033	;# 
  1226   000FC2                     ADCON0          equ	4034	;# 
  1227   000FC3                     ADRES           equ	4035	;# 
  1228   000FC3                     ADRESL          equ	4035	;# 
  1229   000FC4                     ADRESH          equ	4036	;# 
  1230   000FC5                     SSPCON2         equ	4037	;# 
  1231   000FC6                     SSPCON1         equ	4038	;# 
  1232   000FC7                     SSPSTAT         equ	4039	;# 
  1233   000FC8                     SSPADD          equ	4040	;# 
  1234   000FC9                     SSPBUF          equ	4041	;# 
  1235   000FCA                     T2CON           equ	4042	;# 
  1236   000FCB                     PR2             equ	4043	;# 
  1237   000FCB                     MEMCON          equ	4043	;# 
  1238   000FCC                     TMR2            equ	4044	;# 
  1239   000FCD                     T1CON           equ	4045	;# 
  1240   000FCE                     TMR1            equ	4046	;# 
  1241   000FCE                     TMR1L           equ	4046	;# 
  1242   000FCF                     TMR1H           equ	4047	;# 
  1243   000FD0                     RCON            equ	4048	;# 
  1244   000FD1                     WDTCON          equ	4049	;# 
  1245   000FD2                     HLVDCON         equ	4050	;# 
  1246   000FD2                     LVDCON          equ	4050	;# 
  1247   000FD3                     OSCCON          equ	4051	;# 
  1248   000FD5                     T0CON           equ	4053	;# 
  1249   000FD6                     TMR0            equ	4054	;# 
  1250   000FD6                     TMR0L           equ	4054	;# 
  1251   000FD7                     TMR0H           equ	4055	;# 
  1252   000FD8                     STATUS          equ	4056	;# 
  1253   000FD9                     FSR2            equ	4057	;# 
  1254   000FD9                     FSR2L           equ	4057	;# 
  1255   000FDA                     FSR2H           equ	4058	;# 
  1256   000FDB                     PLUSW2          equ	4059	;# 
  1257   000FDC                     PREINC2         equ	4060	;# 
  1258   000FDD                     POSTDEC2        equ	4061	;# 
  1259   000FDE                     POSTINC2        equ	4062	;# 
  1260   000FDF                     INDF2           equ	4063	;# 
  1261   000FE0                     BSR             equ	4064	;# 
  1262   000FE1                     FSR1            equ	4065	;# 
  1263   000FE1                     FSR1L           equ	4065	;# 
  1264   000FE2                     FSR1H           equ	4066	;# 
  1265   000FE3                     PLUSW1          equ	4067	;# 
  1266   000FE4                     PREINC1         equ	4068	;# 
  1267   000FE5                     POSTDEC1        equ	4069	;# 
  1268   000FE6                     POSTINC1        equ	4070	;# 
  1269   000FE7                     INDF1           equ	4071	;# 
  1270   000FE8                     WREG            equ	4072	;# 
  1271   000FE9                     FSR0            equ	4073	;# 
  1272   000FE9                     FSR0L           equ	4073	;# 
  1273   000FEA                     FSR0H           equ	4074	;# 
  1274   000FEB                     PLUSW0          equ	4075	;# 
  1275   000FEC                     PREINC0         equ	4076	;# 
  1276   000FED                     POSTDEC0        equ	4077	;# 
  1277   000FEE                     POSTINC0        equ	4078	;# 
  1278   000FEF                     INDF0           equ	4079	;# 
  1279   000FF0                     INTCON3         equ	4080	;# 
  1280   000FF1                     INTCON2         equ	4081	;# 
  1281   000FF2                     INTCON          equ	4082	;# 
  1282   000FF3                     PROD            equ	4083	;# 
  1283   000FF3                     PRODL           equ	4083	;# 
  1284   000FF4                     PRODH           equ	4084	;# 
  1285   000FF5                     TABLAT          equ	4085	;# 
  1286   000FF6                     TBLPTR          equ	4086	;# 
  1287   000FF6                     TBLPTRL         equ	4086	;# 
  1288   000FF7                     TBLPTRH         equ	4087	;# 
  1289   000FF8                     TBLPTRU         equ	4088	;# 
  1290   000FF9                     PCLAT           equ	4089	;# 
  1291   000FF9                     PC              equ	4089	;# 
  1292   000FF9                     PCL             equ	4089	;# 
  1293   000FFA                     PCLATH          equ	4090	;# 
  1294   000FFB                     PCLATU          equ	4091	;# 
  1295   000FFC                     STKPTR          equ	4092	;# 
  1296   000FFD                     TOS             equ	4093	;# 
  1297   000FFD                     TOSL            equ	4093	;# 
  1298   000FFE                     TOSH            equ	4094	;# 
  1299   000FFF                     TOSU            equ	4095	;# 
  1300   000FFD                     _TOS            set	4093
  1301   000FD6                     _TMR0           set	4054
  1302   000FD5                     _T0CONbits      set	4053
  1303   000FFC                     _STKPTR         set	4092
  1304   000FE8                     _WREG           set	4072
  1305   000FD8                     _STATUS         set	4056
  1306   000FE0                     _BSR            set	4064
  1307   000F83                     _PORTDbits      set	3971
  1308   000F8C                     _LATDbits       set	3980
  1309   000F95                     _TRISDbits      set	3989
  1310   000FF2                     _INTCONbits     set	4082
  1311                           
  1312                           ; #config settings
  1313                           
  1314                           	psect	cinit
  1315   000F54                     __pcinit:
  1316                           	callstack 0
  1317   000F54                     start_initialization:
  1318                           	callstack 0
  1319   000F54                     __initialization:
  1320                           	callstack 0
  1321                           
  1322                           ; Clear objects allocated to BIGRAM (533 bytes)
  1323   000F54  EE00  F0E7         	lfsr	0,__pbssBIGRAM
  1324   000F58  EE12 F015          	lfsr	1,533
  1325   000F5C                     clear_0:
  1326   000F5C  6AEE               	clrf	postinc0,c
  1327   000F5E  50E5               	movf	postdec1,w,c
  1328   000F60  50E1               	movf	fsr1l,w,c
  1329   000F62  E1FC               	bnz	clear_0
  1330   000F64  50E2               	movf	fsr1h,w,c
  1331   000F66  E1FA               	bnz	clear_0
  1332                           
  1333                           ; Clear objects allocated to COMRAM (30 bytes)
  1334   000F68  EE00  F001         	lfsr	0,__pbssCOMRAM
  1335   000F6C  0E1E               	movlw	30
  1336   000F6E                     clear_1:
  1337   000F6E  6AEE               	clrf	postinc0,c
  1338   000F70  06E8               	decf	wreg,f,c
  1339   000F72  E1FD               	bnz	clear_1
  1340   000F74                     end_of_initialization:
  1341                           	callstack 0
  1342   000F74                     __end_of__initialization:
  1343                           	callstack 0
  1344   000F74  903C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1345   000F76  923C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1346   000F78  0100               	movlb	0
  1347   000F7A  EF4B  F007         	goto	_main	;jump to C main() function
  1348                           
  1349                           	psect	bssCOMRAM
  1350   000001                     __pbssCOMRAM:
  1351                           	callstack 0
  1352   000001                     _motors_data:
  1353                           	callstack 0
  1354   000001                     	ds	16
  1355   000011                     _mutex:
  1356                           	callstack 0
  1357   000011                     	ds	14
  1358                           
  1359                           	psect	bssBIGRAM
  1360   0000E7                     __pbssBIGRAM:
  1361                           	callstack 0
  1362   0000E7                     _readyQueue:
  1363                           	callstack 0
  1364   0000E7                     	ds	533
  1365                           
  1366                           	psect	cstackBANK0
  1367   000060                     __pcstackBANK0:
  1368                           	callstack 0
  1369   000060                     	ds	18
  1370   000072                     ?_priority_scheduler:
  1371                           	callstack 0
  1372   000072                     mutex_unlock@mutex:
  1373                           	callstack 0
  1374                           
  1375                           ; 1 bytes @ 0x12
  1376   000072                     	ds	2
  1377   000074                     ?_mutex_lock:
  1378                           	callstack 0
  1379   000074                     mutex_lock@mutex:
  1380                           	callstack 0
  1381                           
  1382                           ; 1 bytes @ 0x14
  1383   000074                     	ds	2
  1384   000076                     
  1385                           ; 1 bytes @ 0x16
  1386   000076                     	ds	2
  1387   000078                     mutex_init@mutex:
  1388                           	callstack 0
  1389   000078                     os_create_task@task_f:
  1390                           	callstack 0
  1391   000078                     
  1392                           ; 1 bytes @ 0x18
  1393   000078                     	ds	1
  1394   000079                     
  1395                           ; 1 bytes @ 0x19
  1396   000079                     	ds	1
  1397   00007A                     os_create_task@prior:
  1398                           	callstack 0
  1399                           
  1400                           ; 1 bytes @ 0x1A
  1401   00007A                     	ds	1
  1402   00007B                     ??_os_create_task:
  1403                           
  1404                           ; 1 bytes @ 0x1B
  1405   00007B                     	ds	1
  1406   00007C                     os_create_task@id:
  1407                           	callstack 0
  1408                           
  1409                           ; 1 bytes @ 0x1C
  1410   00007C                     	ds	1
  1411   00007D                     os_create_task@new_task:
  1412                           	callstack 0
  1413                           
  1414                           ; 106 bytes @ 0x1D
  1415   00007D                     	ds	106
  1416   0000E7                     
  1417                           ; 1 bytes @ 0x87
  1418                           
  1419                           	psect	cstackCOMRAM
  1420   00001F                     __pcstackCOMRAM:
  1421                           	callstack 0
  1422   00001F                     ?i2_priority_scheduler:
  1423                           	callstack 0
  1424   00001F                     ??_os_idle_task:
  1425   00001F                     
  1426                           ; 1 bytes @ 0x0
  1427   00001F                     	ds	1
  1428   000020                     os_task_time_decrease@i:
  1429                           	callstack 0
  1430                           
  1431                           ; 1 bytes @ 0x1
  1432   000020                     	ds	1
  1433   000021                     ??i2_priority_scheduler:
  1434                           
  1435                           ; 1 bytes @ 0x2
  1436   000021                     	ds	3
  1437   000024                     i2priority_scheduler@highest_priority:
  1438                           	callstack 0
  1439                           
  1440                           ; 1 bytes @ 0x5
  1441   000024                     	ds	1
  1442   000025                     i2priority_scheduler@pos_highest_priority_task:
  1443                           	callstack 0
  1444                           
  1445                           ; 1 bytes @ 0x6
  1446   000025                     	ds	1
  1447   000026                     i2priority_scheduler@i:
  1448                           	callstack 0
  1449                           
  1450                           ; 2 bytes @ 0x7
  1451   000026                     	ds	2
  1452   000028                     ??_ISR_TIMER_0:
  1453   000028                     
  1454                           ; 1 bytes @ 0x9
  1455   000028                     	ds	13
  1456   000035                     ??_mutex_unlock:
  1457   000035                     ??_priority_scheduler:
  1458                           
  1459                           ; 1 bytes @ 0x16
  1460   000035                     	ds	3
  1461   000038                     priority_scheduler@highest_priority:
  1462                           	callstack 0
  1463   000038                     mutex_unlock@task:
  1464                           	callstack 0
  1465                           
  1466                           ; 2 bytes @ 0x19
  1467   000038                     	ds	1
  1468   000039                     priority_scheduler@pos_highest_priority_task:
  1469                           	callstack 0
  1470                           
  1471                           ; 1 bytes @ 0x1A
  1472   000039                     	ds	1
  1473   00003A                     priority_scheduler@i:
  1474                           	callstack 0
  1475   00003A                     mutex_unlock@i:
  1476                           	callstack 0
  1477                           
  1478                           ; 2 bytes @ 0x1B
  1479   00003A                     	ds	2
  1480   00003C                     
  1481                           ; 1 bytes @ 0x1D
  1482 ;;
  1483 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1484 ;;
  1485 ;; *************** function _main *****************
  1486 ;; Defined at:
  1487 ;;		line 7 in file "main.c"
  1488 ;; Parameters:    Size  Location     Type
  1489 ;;		None
  1490 ;; Auto vars:     Size  Location     Type
  1491 ;;		None
  1492 ;; Return value:  Size  Location     Type
  1493 ;;                  2   16[None  ] int 
  1494 ;; Registers used:
  1495 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1496 ;; Tracked objects:
  1497 ;;		On entry : 0/0
  1498 ;;		On exit  : 0/0
  1499 ;;		Unchanged: 0/0
  1500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1501 ;;      Params:         0       0       0       0       0       0       0       0       0
  1502 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1503 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1504 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1505 ;;Total ram usage:        0 bytes
  1506 ;; Hardware stack levels required when called: 10
  1507 ;; This function calls:
  1508 ;;		_os_config
  1509 ;;		_os_create_task
  1510 ;;		_os_start
  1511 ;; This function is called by:
  1512 ;;		Startup code after reset
  1513 ;; This function uses a non-reentrant model
  1514 ;;
  1515                           
  1516                           	psect	text0
  1517   000E96                     __ptext0:
  1518                           	callstack 0
  1519   000E96                     _main:
  1520                           	callstack 21
  1521   000E96                     
  1522                           ;main.c: 9:     os_config();
  1523   000E96  ECBF  F007         	call	_os_config	;wreg free
  1524                           
  1525                           ;main.c: 12:     os_create_task(100, motors_control, 5);
  1526   000E9A  0EFC               	movlw	low _motors_control
  1527   000E9C  0100               	movlb	0	; () banked
  1528   000E9E  6F78               	movwf	os_create_task@task_f& (0+255),b
  1529   000EA0  0E0E               	movlw	high _motors_control
  1530   000EA2  6F79               	movwf	(os_create_task@task_f+1)& (0+255),b
  1531   000EA4  0E05               	movlw	5
  1532   000EA6  6F7A               	movwf	os_create_task@prior& (0+255),b
  1533   000EA8  0E64               	movlw	100
  1534   000EAA  EC24  F007         	call	_os_create_task
  1535                           
  1536                           ;main.c: 13:     os_create_task(101, sensors_reading, 5);
  1537   000EAE  0E28               	movlw	low _sensors_reading
  1538   000EB0  0100               	movlb	0	; () banked
  1539   000EB2  6F78               	movwf	os_create_task@task_f& (0+255),b
  1540   000EB4  0E0F               	movlw	high _sensors_reading
  1541   000EB6  6F79               	movwf	(os_create_task@task_f+1)& (0+255),b
  1542   000EB8  0E05               	movlw	5
  1543   000EBA  6F7A               	movwf	os_create_task@prior& (0+255),b
  1544   000EBC  0E65               	movlw	101
  1545   000EBE  EC24  F007         	call	_os_create_task
  1546   000EC2                     
  1547                           ;main.c: 15:     os_start();
  1548   000EC2  EC00  F008         	call	_os_start	;wreg free
  1549   000EC6                     l17:
  1550   000EC6  EF63  F007         	goto	l17
  1551   000ECA  EF07  F000         	goto	start
  1552   000ECE                     __end_of_main:
  1553                           	callstack 0
  1554                           
  1555 ;; *************** function _os_start *****************
  1556 ;; Defined at:
  1557 ;;		line 22 in file "kernel.c"
  1558 ;; Parameters:    Size  Location     Type
  1559 ;;		None
  1560 ;; Auto vars:     Size  Location     Type
  1561 ;;		None
  1562 ;; Return value:  Size  Location     Type
  1563 ;;                  1    wreg      void 
  1564 ;; Registers used:
  1565 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1566 ;; Tracked objects:
  1567 ;;		On entry : 0/0
  1568 ;;		On exit  : 0/0
  1569 ;;		Unchanged: 0/0
  1570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1571 ;;      Params:         0       0       0       0       0       0       0       0       0
  1572 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1573 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1574 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1575 ;;Total ram usage:        0 bytes
  1576 ;; Hardware stack levels used: 1
  1577 ;; Hardware stack levels required when called: 9
  1578 ;; This function calls:
  1579 ;;		_conf_interrupts
  1580 ;;		_conf_timer_0
  1581 ;;		_config_app
  1582 ;; This function is called by:
  1583 ;;		_main
  1584 ;; This function uses a non-reentrant model
  1585 ;;
  1586                           
  1587                           	psect	text1
  1588   001000                     __ptext1:
  1589                           	callstack 0
  1590   001000                     _os_start:
  1591                           	callstack 21
  1592   001000                     
  1593                           ;kernel.c: 25:     conf_interrupts();
  1594   001000  EC17  F008         	call	_conf_interrupts	;wreg free
  1595   001004                     
  1596                           ;kernel.c: 28:     config_app();
  1597   001004  ECF4  F007         	call	_config_app	;wreg free
  1598   001008                     
  1599                           ;kernel.c: 30:     conf_timer_0();
  1600   001008  ECE6  F007         	call	_conf_timer_0	;wreg free
  1601   00100C                     
  1602                           ;kernel.c: 33:     (INTCONbits.GIE = 1);
  1603   00100C  8EF2               	bsf	242,7,c	;volatile
  1604   00100E  0012               	return		;funcret
  1605   001010                     __end_of_os_start:
  1606                           	callstack 0
  1607                           
  1608 ;; *************** function _config_app *****************
  1609 ;; Defined at:
  1610 ;;		line 6 in file "user_app.c"
  1611 ;; Parameters:    Size  Location     Type
  1612 ;;		None
  1613 ;; Auto vars:     Size  Location     Type
  1614 ;;		None
  1615 ;; Return value:  Size  Location     Type
  1616 ;;                  1    wreg      void 
  1617 ;; Registers used:
  1618 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1619 ;; Tracked objects:
  1620 ;;		On entry : 0/0
  1621 ;;		On exit  : 0/0
  1622 ;;		Unchanged: 0/0
  1623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1624 ;;      Params:         0       0       0       0       0       0       0       0       0
  1625 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1626 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1627 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1628 ;;Total ram usage:        0 bytes
  1629 ;; Hardware stack levels used: 1
  1630 ;; Hardware stack levels required when called: 8
  1631 ;; This function calls:
  1632 ;;		_mutex_init
  1633 ;; This function is called by:
  1634 ;;		_os_start
  1635 ;; This function uses a non-reentrant model
  1636 ;;
  1637                           
  1638                           	psect	text2
  1639   000FE8                     __ptext2:
  1640                           	callstack 0
  1641   000FE8                     _config_app:
  1642                           	callstack 21
  1643   000FE8                     
  1644                           ;user_app.c: 7:     TRISDbits.RD0 = 0;
  1645   000FE8  9095               	bcf	149,0,c	;volatile
  1646                           
  1647                           ;user_app.c: 8:     TRISDbits.RD1 = 0;
  1648   000FEA  9295               	bcf	149,1,c	;volatile
  1649                           
  1650                           ;user_app.c: 9:     TRISDbits.RD2 = 0;
  1651   000FEC  9495               	bcf	149,2,c	;volatile
  1652                           
  1653                           ;user_app.c: 10:     TRISDbits.RD3 = 0;
  1654   000FEE  9695               	bcf	149,3,c	;volatile
  1655                           
  1656                           ;user_app.c: 11:     TRISDbits.RD4 = 1;
  1657   000FF0  8895               	bsf	149,4,c	;volatile
  1658                           
  1659                           ;user_app.c: 12:     TRISDbits.RD5 = 1;
  1660   000FF2  8A95               	bsf	149,5,c	;# 
  1661   000FF4                     
  1662                           ;user_app.c: 16:     mutex_init(&mutex);
  1663   000FF4  0E11               	movlw	low _mutex
  1664   000FF6  0100               	movlb	0	; () banked
  1665   000FF8  6F78               	movwf	mutex_init@mutex& (0+255),b
  1666   000FFA  ECD3  F007         	call	_mutex_init	;wreg free
  1667   000FFE  0012               	return		;funcret
  1668   001000                     __end_of_config_app:
  1669                           	callstack 0
  1670                           
  1671 ;; *************** function _mutex_init *****************
  1672 ;; Defined at:
  1673 ;;		line 6 in file "mutex.c"
  1674 ;; Parameters:    Size  Location     Type
  1675 ;;  mutex           1   24[BANK0 ] PTR struct .
  1676 ;;		 -> mutex(14), 
  1677 ;; Auto vars:     Size  Location     Type
  1678 ;;		None
  1679 ;; Return value:  Size  Location     Type
  1680 ;;                  1    wreg      void 
  1681 ;; Registers used:
  1682 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1683 ;; Tracked objects:
  1684 ;;		On entry : 0/0
  1685 ;;		On exit  : 0/0
  1686 ;;		Unchanged: 0/0
  1687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1688 ;;      Params:         0       1       0       0       0       0       0       0       0
  1689 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1690 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1691 ;;      Totals:         0       1       0       0       0       0       0       0       0
  1692 ;;Total ram usage:        1 bytes
  1693 ;; Hardware stack levels used: 1
  1694 ;; Hardware stack levels required when called: 7
  1695 ;; This function calls:
  1696 ;;		Nothing
  1697 ;; This function is called by:
  1698 ;;		_config_app
  1699 ;; This function uses a non-reentrant model
  1700 ;;
  1701                           
  1702                           	psect	text3
  1703   000FA6                     __ptext3:
  1704                           	callstack 0
  1705   000FA6                     _mutex_init:
  1706                           	callstack 21
  1707   000FA6                     
  1708                           ;mutex.c: 7:     mutex->locked = 0;
  1709   000FA6  0100               	movlb	0	; () banked
  1710   000FA8  5178               	movf	mutex_init@mutex& (0+255),w,b
  1711   000FAA  6ED9               	movwf	fsr2l,c
  1712   000FAC  6ADA               	clrf	fsr2h,c
  1713   000FAE  6ADE               	clrf	postinc2,c
  1714   000FB0  6ADD               	clrf	postdec2,c
  1715   000FB2                     
  1716                           ; BSR set to: 0
  1717                           ;mutex.c: 8:     mutex->owner = 0;
  1718   000FB2  5178               	movf	mutex_init@mutex& (0+255),w,b
  1719   000FB4  6ED9               	movwf	fsr2l,c
  1720   000FB6  6ADA               	clrf	fsr2h,c
  1721   000FB8  0E02               	movlw	2
  1722   000FBA  26D9               	addwf	fsr2l,f,c
  1723   000FBC  6ADF               	clrf	indf2,c
  1724   000FBE                     
  1725                           ; BSR set to: 0
  1726                           ;mutex.c: 9:     mutex->waiting_count = 0;
  1727   000FBE  5178               	movf	mutex_init@mutex& (0+255),w,b
  1728   000FC0  6ED9               	movwf	fsr2l,c
  1729   000FC2  6ADA               	clrf	fsr2h,c
  1730   000FC4  0E0D               	movlw	13
  1731   000FC6  26D9               	addwf	fsr2l,f,c
  1732   000FC8  6ADF               	clrf	indf2,c
  1733   000FCA                     
  1734                           ; BSR set to: 0
  1735   000FCA  0012               	return		;funcret
  1736   000FCC                     __end_of_mutex_init:
  1737                           	callstack 0
  1738                           
  1739 ;; *************** function _conf_timer_0 *****************
  1740 ;; Defined at:
  1741 ;;		line 7 in file "hardware.c"
  1742 ;; Parameters:    Size  Location     Type
  1743 ;;		None
  1744 ;; Auto vars:     Size  Location     Type
  1745 ;;		None
  1746 ;; Return value:  Size  Location     Type
  1747 ;;                  1    wreg      void 
  1748 ;; Registers used:
  1749 ;;		wreg, status,2
  1750 ;; Tracked objects:
  1751 ;;		On entry : 0/0
  1752 ;;		On exit  : 0/0
  1753 ;;		Unchanged: 0/0
  1754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1755 ;;      Params:         0       0       0       0       0       0       0       0       0
  1756 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1757 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1758 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1759 ;;Total ram usage:        0 bytes
  1760 ;; Hardware stack levels used: 1
  1761 ;; Hardware stack levels required when called: 7
  1762 ;; This function calls:
  1763 ;;		Nothing
  1764 ;; This function is called by:
  1765 ;;		_os_start
  1766 ;; This function uses a non-reentrant model
  1767 ;;
  1768                           
  1769                           	psect	text4
  1770   000FCC                     __ptext4:
  1771                           	callstack 0
  1772   000FCC                     _conf_timer_0:
  1773                           	callstack 22
  1774   000FCC                     
  1775                           ;hardware.c: 10:     T0CONbits.T0CS = 0;
  1776   000FCC  9AD5               	bcf	213,5,c	;volatile
  1777                           
  1778                           ;hardware.c: 11:     T0CONbits.PSA = 0;
  1779   000FCE  96D5               	bcf	213,3,c	;volatile
  1780   000FD0                     
  1781                           ;hardware.c: 12:     T0CONbits.T0PS = 0b110;
  1782   000FD0  50D5               	movf	213,w,c	;volatile
  1783   000FD2  0BF8               	andlw	-8
  1784   000FD4  0906               	iorlw	6
  1785   000FD6  6ED5               	movwf	213,c	;volatile
  1786                           
  1787                           ;hardware.c: 13:     TMR0 = 128;
  1788   000FD8  0E00               	movlw	0
  1789   000FDA  6ED7               	movwf	215,c	;volatile
  1790   000FDC  0E80               	movlw	128
  1791   000FDE  6ED6               	movwf	214,c	;volatile
  1792   000FE0                     
  1793                           ;hardware.c: 14:     INTCONbits.TMR0IE = 1;
  1794   000FE0  8AF2               	bsf	242,5,c	;volatile
  1795   000FE2                     
  1796                           ;hardware.c: 15:     INTCONbits.TMR0IF = 0;
  1797   000FE2  94F2               	bcf	242,2,c	;volatile
  1798   000FE4                     
  1799                           ;hardware.c: 16:     T0CONbits.TMR0ON = 1;
  1800   000FE4  8ED5               	bsf	213,7,c	;volatile
  1801   000FE6  0012               	return		;funcret
  1802   000FE8                     __end_of_conf_timer_0:
  1803                           	callstack 0
  1804                           
  1805 ;; *************** function _conf_interrupts *****************
  1806 ;; Defined at:
  1807 ;;		line 19 in file "hardware.c"
  1808 ;; Parameters:    Size  Location     Type
  1809 ;;		None
  1810 ;; Auto vars:     Size  Location     Type
  1811 ;;		None
  1812 ;; Return value:  Size  Location     Type
  1813 ;;                  1    wreg      void 
  1814 ;; Registers used:
  1815 ;;		None
  1816 ;; Tracked objects:
  1817 ;;		On entry : 0/0
  1818 ;;		On exit  : 0/0
  1819 ;;		Unchanged: 0/0
  1820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1821 ;;      Params:         0       0       0       0       0       0       0       0       0
  1822 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1823 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1824 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1825 ;;Total ram usage:        0 bytes
  1826 ;; Hardware stack levels used: 1
  1827 ;; Hardware stack levels required when called: 7
  1828 ;; This function calls:
  1829 ;;		Nothing
  1830 ;; This function is called by:
  1831 ;;		_os_start
  1832 ;; This function uses a non-reentrant model
  1833 ;;
  1834                           
  1835                           	psect	text5
  1836   00102E                     __ptext5:
  1837                           	callstack 0
  1838   00102E                     _conf_interrupts:
  1839                           	callstack 22
  1840   00102E                     
  1841                           ;hardware.c: 21:     INTCONbits.PEIE = 1;
  1842   00102E  8CF2               	bsf	242,6,c	;volatile
  1843   001030  0012               	return		;funcret
  1844   001032                     __end_of_conf_interrupts:
  1845                           	callstack 0
  1846                           
  1847 ;; *************** function _os_config *****************
  1848 ;; Defined at:
  1849 ;;		line 11 in file "kernel.c"
  1850 ;; Parameters:    Size  Location     Type
  1851 ;;		None
  1852 ;; Auto vars:     Size  Location     Type
  1853 ;;		None
  1854 ;; Return value:  Size  Location     Type
  1855 ;;                  1    wreg      void 
  1856 ;; Registers used:
  1857 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1858 ;; Tracked objects:
  1859 ;;		On entry : 0/0
  1860 ;;		On exit  : 0/0
  1861 ;;		Unchanged: 0/0
  1862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1863 ;;      Params:         0       0       0       0       0       0       0       0       0
  1864 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1865 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1866 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1867 ;;Total ram usage:        0 bytes
  1868 ;; Hardware stack levels used: 1
  1869 ;; Hardware stack levels required when called: 8
  1870 ;; This function calls:
  1871 ;;		_os_create_task
  1872 ;; This function is called by:
  1873 ;;		_main
  1874 ;; This function uses a non-reentrant model
  1875 ;;
  1876                           
  1877                           	psect	text6
  1878   000F7E                     __ptext6:
  1879                           	callstack 0
  1880   000F7E                     _os_config:
  1881                           	callstack 22
  1882   000F7E                     
  1883                           ;kernel.c: 13:     readyQueue.readyQueueSize = 0;
  1884   000F7E  0E00               	movlw	0
  1885   000F80  CFE8 F2F9          	movff	wreg,_readyQueue+530
  1886                           
  1887                           ;kernel.c: 14:     readyQueue.taskRunning = 0;
  1888   000F84  0E00               	movlw	0
  1889   000F86  CFE8 F2FA          	movff	wreg,_readyQueue+531
  1890   000F8A  0E00               	movlw	0
  1891   000F8C  CFE8 F2FB          	movff	wreg,_readyQueue+532
  1892   000F90                     
  1893                           ;kernel.c: 17:     os_create_task(0, os_idle_task, 1);
  1894   000F90  0ECE               	movlw	low _os_idle_task
  1895   000F92  0100               	movlb	0	; () banked
  1896   000F94  6F78               	movwf	os_create_task@task_f& (0+255),b
  1897   000F96  0E0E               	movlw	high _os_idle_task
  1898   000F98  6F79               	movwf	(os_create_task@task_f+1)& (0+255),b
  1899   000F9A  0E01               	movlw	1
  1900   000F9C  6F7A               	movwf	os_create_task@prior& (0+255),b
  1901   000F9E  0E00               	movlw	0
  1902   000FA0  EC24  F007         	call	_os_create_task	;# 
  1903   000FA4  0012               	return		;funcret
  1904   000FA6                     __end_of_os_config:
  1905                           	callstack 0
  1906                           
  1907 ;; *************** function _os_create_task *****************
  1908 ;; Defined at:
  1909 ;;		line 9 in file "syscall.c"
  1910 ;; Parameters:    Size  Location     Type
  1911 ;;  id              1    wreg     unsigned char 
  1912 ;;  task_f          2   24[BANK0 ] PTR FTN()void 
  1913 ;;		 -> os_idle_task(1), sensors_reading(1), motors_control(1), 
  1914 ;;  prior           1   26[BANK0 ] unsigned char 
  1915 ;; Auto vars:     Size  Location     Type
  1916 ;;  id              1   28[BANK0 ] unsigned char 
  1917 ;;  new_task      106   29[BANK0 ] struct tcb
  1918 ;; Return value:  Size  Location     Type
  1919 ;;                  1    wreg      void 
  1920 ;; Registers used:
  1921 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1922 ;; Tracked objects:
  1923 ;;		On entry : 0/0
  1924 ;;		On exit  : 0/0
  1925 ;;		Unchanged: 0/0
  1926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1927 ;;      Params:         0       3       0       0       0       0       0       0       0
  1928 ;;      Locals:         0     107       0       0       0       0       0       0       0
  1929 ;;      Temps:          0       1       0       0       0       0       0       0       0
  1930 ;;      Totals:         0     111       0       0       0       0       0       0       0
  1931 ;;Total ram usage:      111 bytes
  1932 ;; Hardware stack levels used: 1
  1933 ;; Hardware stack levels required when called: 7
  1934 ;; This function calls:
  1935 ;;		Nothing
  1936 ;; This function is called by:
  1937 ;;		_main
  1938 ;;		_os_config
  1939 ;; This function uses a non-reentrant model
  1940 ;;
  1941                           
  1942                           	psect	text7
  1943   000E48                     __ptext7:
  1944                           	callstack 0
  1945   000E48                     _os_create_task:
  1946                           	callstack 23
  1947                           
  1948                           ;incstack = 0
  1949                           ;os_create_task@id stored from wreg
  1950   000E48  0100               	movlb	0	; () banked
  1951   000E4A  6F7C               	movwf	os_create_task@id& (0+255),b
  1952   000E4C                     
  1953                           ;syscall.c: 9: void os_create_task(uint8_t id, f_ptr task_f, uint8_t prior);syscall.c: 1
      +                          0: {;syscall.c: 11:     tcb_t new_task;;syscall.c: 13:     new_task.task_id = id;
  1954   000E4C  C07C  F07D         	movff	os_create_task@id,os_create_task@new_task
  1955   000E50                     
  1956                           ;syscall.c: 14:     new_task.task_func = task_f;
  1957   000E50  C078  F07E         	movff	os_create_task@task_f,os_create_task@new_task+1
  1958   000E54  C079  F07F         	movff	os_create_task@task_f+1,os_create_task@new_task+2
  1959   000E58                     
  1960                           ;syscall.c: 15:     new_task.task_priority = prior;
  1961   000E58  C07A  F081         	movff	os_create_task@prior,os_create_task@new_task+4
  1962   000E5C                     
  1963                           ;syscall.c: 16:     new_task.task_state = READY;
  1964   000E5C  0100               	movlb	0	; () banked
  1965   000E5E  6B80               	clrf	(os_create_task@new_task+3)& (0+255),b
  1966   000E60                     
  1967                           ; BSR set to: 0
  1968                           ;syscall.c: 18:     new_task.BSR_reg = 0;
  1969   000E60  6B83               	clrf	(os_create_task@new_task+6)& (0+255),b
  1970   000E62                     
  1971                           ; BSR set to: 0
  1972                           ;syscall.c: 19:     new_task.STATUS_reg = 0;
  1973   000E62  6B85               	clrf	(os_create_task@new_task+8)& (0+255),b
  1974   000E64                     
  1975                           ; BSR set to: 0
  1976                           ;syscall.c: 20:     new_task.WORK_reg = 0;
  1977   000E64  6B84               	clrf	(os_create_task@new_task+7)& (0+255),b
  1978   000E66                     
  1979                           ; BSR set to: 0
  1980                           ;syscall.c: 21:     new_task.task_sp = 0;
  1981   000E66  6BE6               	clrf	(os_create_task@new_task+105)& (0+255),b
  1982   000E68                     
  1983                           ; BSR set to: 0
  1984                           ;syscall.c: 24:     readyQueue.readyQueue[readyQueue.readyQueueSize++] = new_task;
  1985   000E68  EE20  F07D         	lfsr	2,os_create_task@new_task
  1986   000E6C  C2F9  F07B         	movff	_readyQueue+530,??_os_create_task
  1987   000E70  517B               	movf	??_os_create_task& (0+255),w,b
  1988   000E72  0D6A               	mullw	106
  1989   000E74  0EE7               	movlw	low _readyQueue
  1990   000E76  24F3               	addwf	243,w,c
  1991   000E78  6EE1               	movwf	fsr1l,c
  1992   000E7A  0E00               	movlw	high _readyQueue
  1993   000E7C  20F4               	addwfc	prodh,w,c
  1994   000E7E  6EE2               	movwf	fsr1h,c
  1995   000E80  0E69               	movlw	105
  1996   000E82                     u481:
  1997   000E82  CFDB FFE3          	movff	plusw2,plusw1
  1998   000E86  06E8               	decf	wreg,f,c
  1999   000E88  E2FC               	bc	u481
  2000   000E8A                     
  2001                           ; BSR set to: 0
  2002   000E8A  C2F9  FFE8         	movff	_readyQueue+530,wreg
  2003   000E8E  0F01               	addlw	1
  2004   000E90  CFE8 F2F9          	movff	wreg,_readyQueue+530
  2005   000E94                     
  2006                           ; BSR set to: 0
  2007   000E94  0012               	return		;funcret
  2008   000E96                     __end_of_os_create_task:
  2009                           	callstack 0
  2010                           
  2011 ;; *************** function _os_idle_task *****************
  2012 ;; Defined at:
  2013 ;;		line 37 in file "kernel.c"
  2014 ;; Parameters:    Size  Location     Type
  2015 ;;		None
  2016 ;; Auto vars:     Size  Location     Type
  2017 ;;		None
  2018 ;; Return value:  Size  Location     Type
  2019 ;;                  1    wreg      void 
  2020 ;; Registers used:
  2021 ;;		wreg, status,2, status,0
  2022 ;; Tracked objects:
  2023 ;;		On entry : 0/0
  2024 ;;		On exit  : 0/0
  2025 ;;		Unchanged: 0/0
  2026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2027 ;;      Params:         0       0       0       0       0       0       0       0       0
  2028 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2029 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2030 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2031 ;;Total ram usage:        1 bytes
  2032 ;; Hardware stack levels used: 1
  2033 ;; Hardware stack levels required when called: 3
  2034 ;; This function calls:
  2035 ;;		Nothing
  2036 ;; This function is called by:
  2037 ;;		_os_config
  2038 ;;		_rr_scheduler
  2039 ;; This function uses a non-reentrant model
  2040 ;;
  2041                           
  2042                           	psect	text8
  2043   000ECE                     __ptext8:
  2044                           	callstack 0
  2045   000ECE                     _os_idle_task:
  2046                           	callstack 24
  2047   000ECE                     
  2048                           ;kernel.c: 39:     TRISDbits.RD3 = 0;
  2049   000ECE  9695               	bcf	149,3,c	;volatile
  2050   000ED0                     l1104:
  2051                           
  2052                           ;kernel.c: 43:         LATDbits.LD3 = ~PORTDbits.RD3;
  2053   000ED0  B683               	btfsc	131,3,c	;volatile
  2054   000ED2  EF6D  F007         	goto	u17_21
  2055   000ED6  EF70  F007         	goto	u17_20
  2056   000EDA                     u17_21:
  2057   000EDA  0E01               	movlw	1
  2058   000EDC  EF71  F007         	goto	u17_26
  2059   000EE0                     u17_20:
  2060   000EE0  0E00               	movlw	0
  2061   000EE2                     u17_26:
  2062   000EE2  0AFF               	xorlw	255
  2063   000EE4  6E1F               	movwf	??_os_idle_task^0,c
  2064   000EE6  461F               	rlncf	??_os_idle_task^0,f,c
  2065   000EE8  461F               	rlncf	??_os_idle_task^0,f,c
  2066   000EEA  461F               	rlncf	??_os_idle_task^0,f,c
  2067   000EEC  508C               	movf	140,w,c	;volatile
  2068   000EEE  181F               	xorwf	??_os_idle_task^0,w,c
  2069   000EF0  0BF7               	andlw	-9
  2070   000EF2  181F               	xorwf	??_os_idle_task^0,w,c
  2071   000EF4  6E8C               	movwf	140,c	;volatile
  2072   000EF6  EF68  F007         	goto	l1104
  2073   000EFA  0012               	return		;funcret
  2074   000EFC                     __end_of_os_idle_task:
  2075                           	callstack 0
  2076                           
  2077 ;; *************** function _motors_control *****************
  2078 ;; Defined at:
  2079 ;;		line 25 in file "user_app.c"
  2080 ;; Parameters:    Size  Location     Type
  2081 ;;		None
  2082 ;; Auto vars:     Size  Location     Type
  2083 ;;		None
  2084 ;; Return value:  Size  Location     Type
  2085 ;;                  1    wreg      void 
  2086 ;; Registers used:
  2087 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2088 ;; Tracked objects:
  2089 ;;		On entry : 0/0
  2090 ;;		On exit  : 0/0
  2091 ;;		Unchanged: 0/0
  2092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2093 ;;      Params:         0       0       0       0       0       0       0       0       0
  2094 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2095 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2096 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2097 ;;Total ram usage:        0 bytes
  2098 ;; Hardware stack levels used: 1
  2099 ;; Hardware stack levels required when called: 6
  2100 ;; This function calls:
  2101 ;;		_mutex_lock
  2102 ;;		_mutex_unlock
  2103 ;; This function is called by:
  2104 ;;		_main
  2105 ;; This function uses a non-reentrant model
  2106 ;;
  2107                           
  2108                           	psect	text9
  2109   000EFC                     __ptext9:
  2110                           	callstack 0
  2111   000EFC                     _motors_control:
  2112                           	callstack 21
  2113   000EFC                     l87:
  2114   000EFC                     
  2115                           ;user_app.c: 27:         if (mutex_lock(&mutex)) {
  2116   000EFC  0E11               	movlw	low _mutex
  2117   000EFE  0100               	movlb	0	; () banked
  2118   000F00  6F74               	movwf	mutex_lock@mutex& (0+255),b
  2119   000F02  EC90  F006         	call	_mutex_lock	;wreg free
  2120   000F06  0100               	movlb	0	; () banked
  2121   000F08  5174               	movf	?_mutex_lock& (0+255),w,b
  2122   000F0A  1175               	iorwf	(?_mutex_lock+1)& (0+255),w,b
  2123   000F0C  B4D8               	btfsc	status,2,c
  2124   000F0E  EF8B  F007         	goto	u131_21
  2125   000F12  EF8D  F007         	goto	u131_20
  2126   000F16                     u131_21:
  2127   000F16  EF7E  F007         	goto	l87
  2128   000F1A                     u131_20:
  2129   000F1A                     
  2130                           ; BSR set to: 0
  2131                           ;user_app.c: 29:             mutex_unlock(&mutex);
  2132   000F1A  0E11               	movlw	low _mutex
  2133   000F1C  6F72               	movwf	mutex_unlock@mutex& (0+255),b
  2134   000F1E  EC46  F005         	call	_mutex_unlock	;wreg free
  2135   000F22  EF7E  F007         	goto	l87
  2136   000F26  0012               	return		;funcret
  2137   000F28                     __end_of_motors_control:
  2138                           	callstack 0
  2139                           
  2140 ;; *************** function _mutex_unlock *****************
  2141 ;; Defined at:
  2142 ;;		line 28 in file "mutex.c"
  2143 ;; Parameters:    Size  Location     Type
  2144 ;;  mutex           1   18[BANK0 ] PTR struct .
  2145 ;;		 -> mutex(14), 
  2146 ;; Auto vars:     Size  Location     Type
  2147 ;;  i               2   27[COMRAM] int 
  2148 ;;  task            2   25[COMRAM] PTR struct tcb
  2149 ;;		 -> NULL(0), readyQueue(533), 
  2150 ;; Return value:  Size  Location     Type
  2151 ;;                  2   18[BANK0 ] int 
  2152 ;; Registers used:
  2153 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2154 ;; Tracked objects:
  2155 ;;		On entry : 0/0
  2156 ;;		On exit  : 0/0
  2157 ;;		Unchanged: 0/0
  2158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2159 ;;      Params:         0       1       0       0       0       0       0       0       0
  2160 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2161 ;;      Temps:          3       0       0       0       0       0       0       0       0
  2162 ;;      Totals:         7       1       0       0       0       0       0       0       0
  2163 ;;Total ram usage:        8 bytes
  2164 ;; Hardware stack levels used: 1
  2165 ;; Hardware stack levels required when called: 3
  2166 ;; This function calls:
  2167 ;;		Nothing
  2168 ;; This function is called by:
  2169 ;;		_motors_control
  2170 ;;		_sensors_reading
  2171 ;; This function uses a non-reentrant model
  2172 ;;
  2173                           
  2174                           	psect	text10
  2175   000A8C                     __ptext10:
  2176                           	callstack 0
  2177   000A8C                     _mutex_unlock:
  2178                           	callstack 23
  2179   000A8C                     
  2180                           ;mutex.c: 29:     if (mutex->owner != readyQueue.taskRunning->task_id) {
  2181   000A8C  C2FA  FFD9         	movff	_readyQueue+531,fsr2l
  2182   000A90  C2FB  FFDA         	movff	_readyQueue+532,fsr2h
  2183   000A94  0100               	movlb	0	; () banked
  2184   000A96  5172               	movf	mutex_unlock@mutex& (0+255),w,b
  2185   000A98  6EE1               	movwf	fsr1l,c
  2186   000A9A  6AE2               	clrf	fsr1h,c
  2187   000A9C  0E02               	movlw	2
  2188   000A9E  26E1               	addwf	fsr1l,f,c
  2189   000AA0  50DE               	movf	postinc2,w,c
  2190   000AA2  18E6               	xorwf	postinc1,w,c
  2191   000AA4  B4D8               	btfsc	status,2,c
  2192   000AA6  EF57  F005         	goto	i1u107_21
  2193   000AAA  EF59  F005         	goto	i1u107_20
  2194   000AAE                     i1u107_21:
  2195   000AAE  EF5B  F005         	goto	i1l1812
  2196   000AB2                     i1u107_20:
  2197   000AB2  EFBC  F005         	goto	i1l250
  2198   000AB6                     i1l1812:
  2199                           
  2200                           ; BSR set to: 0
  2201                           ;mutex.c: 34:     mutex->locked = 0;
  2202   000AB6  5172               	movf	mutex_unlock@mutex& (0+255),w,b
  2203   000AB8  6ED9               	movwf	fsr2l,c
  2204   000ABA  6ADA               	clrf	fsr2h,c
  2205   000ABC  6ADE               	clrf	postinc2,c
  2206   000ABE  6ADD               	clrf	postdec2,c
  2207   000AC0                     
  2208                           ; BSR set to: 0
  2209                           ;mutex.c: 35:     mutex->owner = 0;
  2210   000AC0  5172               	movf	mutex_unlock@mutex& (0+255),w,b
  2211   000AC2  6ED9               	movwf	fsr2l,c
  2212   000AC4  6ADA               	clrf	fsr2h,c
  2213   000AC6  0E02               	movlw	2
  2214   000AC8  26D9               	addwf	fsr2l,f,c
  2215   000ACA  6ADF               	clrf	indf2,c
  2216   000ACC                     
  2217                           ; BSR set to: 0
  2218                           ;mutex.c: 38:     if (mutex->waiting_count > 0) {
  2219   000ACC  5172               	movf	mutex_unlock@mutex& (0+255),w,b
  2220   000ACE  6ED9               	movwf	fsr2l,c
  2221   000AD0  6ADA               	clrf	fsr2h,c
  2222   000AD2  0E0D               	movlw	13
  2223   000AD4  26D9               	addwf	fsr2l,f,c
  2224   000AD6  50DF               	movf	indf2,w,c
  2225   000AD8  B4D8               	btfsc	status,2,c
  2226   000ADA  EF71  F005         	goto	i1u108_21
  2227   000ADE  EF73  F005         	goto	i1u108_20
  2228   000AE2                     i1u108_21:
  2229   000AE2  EFBC  F005         	goto	i1l250
  2230   000AE6                     i1u108_20:
  2231   000AE6                     
  2232                           ; BSR set to: 0
  2233                           ;mutex.c: 39:         mutex->waiting_count--;
  2234   000AE6  5172               	movf	mutex_unlock@mutex& (0+255),w,b
  2235   000AE8  6ED9               	movwf	fsr2l,c
  2236   000AEA  6ADA               	clrf	fsr2h,c
  2237   000AEC  0E0D               	movlw	13
  2238   000AEE  26D9               	addwf	fsr2l,f,c
  2239   000AF0  06DF               	decf	indf2,f,c
  2240                           
  2241                           ;mutex.c: 40:         tcb_t* task = mutex->waiting_tasks[0];
  2242   000AF2  5172               	movf	mutex_unlock@mutex& (0+255),w,b
  2243   000AF4  6ED9               	movwf	fsr2l,c
  2244   000AF6  6ADA               	clrf	fsr2h,c
  2245   000AF8  0E03               	movlw	3
  2246   000AFA  26D9               	addwf	fsr2l,f,c
  2247   000AFC  CFDE F038          	movff	postinc2,mutex_unlock@task
  2248   000B00  CFDD F039          	movff	postdec2,mutex_unlock@task+1
  2249                           
  2250                           ;mutex.c: 41:         task->task_state = READY;
  2251   000B04  EE20 F003          	lfsr	2,3
  2252   000B08  5038               	movf	mutex_unlock@task^0,w,c
  2253   000B0A  26D9               	addwf	fsr2l,f,c
  2254   000B0C  5039               	movf	(mutex_unlock@task+1)^0,w,c
  2255   000B0E  22DA               	addwfc	fsr2h,f,c
  2256   000B10  6ADF               	clrf	indf2,c
  2257   000B12                     
  2258                           ; BSR set to: 0
  2259                           ;mutex.c: 44:         for(int i = 0; i < mutex->waiting_count; i++) {
  2260   000B12  0E00               	movlw	0
  2261   000B14  6E3B               	movwf	(mutex_unlock@i+1)^0,c
  2262   000B16  0E00               	movlw	0
  2263   000B18  6E3A               	movwf	mutex_unlock@i^0,c
  2264   000B1A  EFA5  F005         	goto	i1l1826
  2265   000B1E                     i1l1822:
  2266                           
  2267                           ; BSR set to: 0
  2268                           ;mutex.c: 45:             mutex->waiting_tasks[i] = mutex->waiting_tasks[i + 1];
  2269   000B1E  503A               	movf	mutex_unlock@i^0,w,c
  2270   000B20  0D02               	mullw	2
  2271   000B22  5172               	movf	mutex_unlock@mutex& (0+255),w,b
  2272   000B24  24F3               	addwf	243,w,c
  2273   000B26  6ED9               	movwf	fsr2l,c
  2274   000B28  6ADA               	clrf	fsr2h,c
  2275   000B2A  0E05               	movlw	5
  2276   000B2C  26D9               	addwf	fsr2l,f,c
  2277   000B2E  503A               	movf	mutex_unlock@i^0,w,c
  2278   000B30  0D02               	mullw	2
  2279   000B32  5172               	movf	mutex_unlock@mutex& (0+255),w,b
  2280   000B34  24F3               	addwf	243,w,c
  2281   000B36  6EE1               	movwf	fsr1l,c
  2282   000B38  6AE2               	clrf	fsr1h,c
  2283   000B3A  0E03               	movlw	3
  2284   000B3C  26E1               	addwf	fsr1l,f,c
  2285   000B3E  CFDE FFE6          	movff	postinc2,postinc1
  2286   000B42  CFDD FFE5          	movff	postdec2,postdec1
  2287   000B46                     
  2288                           ; BSR set to: 0
  2289                           ;mutex.c: 46:         }
  2290   000B46  4A3A               	infsnz	mutex_unlock@i^0,f,c
  2291   000B48  2A3B               	incf	(mutex_unlock@i+1)^0,f,c
  2292   000B4A                     i1l1826:
  2293                           
  2294                           ; BSR set to: 0
  2295   000B4A  5172               	movf	mutex_unlock@mutex& (0+255),w,b
  2296   000B4C  6ED9               	movwf	fsr2l,c
  2297   000B4E  6ADA               	clrf	fsr2h,c
  2298   000B50  0E0D               	movlw	13
  2299   000B52  26D9               	addwf	fsr2l,f,c
  2300   000B54  50DF               	movf	indf2,w,c
  2301   000B56  6E35               	movwf	??_mutex_unlock^0,c
  2302   000B58  6A36               	clrf	(??_mutex_unlock+1)^0,c
  2303   000B5A  5035               	movf	??_mutex_unlock^0,w,c
  2304   000B5C  5C3A               	subwf	mutex_unlock@i^0,w,c
  2305   000B5E  503B               	movf	(mutex_unlock@i+1)^0,w,c
  2306   000B60  0A80               	xorlw	128
  2307   000B62  6E37               	movwf	(??_mutex_unlock+2)^0,c
  2308   000B64  5036               	movf	(??_mutex_unlock+1)^0,w,c
  2309   000B66  0A80               	xorlw	128
  2310   000B68  5837               	subwfb	(??_mutex_unlock+2)^0,w,c
  2311   000B6A  A0D8               	btfss	status,0,c
  2312   000B6C  EFBA  F005         	goto	i1u109_21
  2313   000B70  EFBC  F005         	goto	i1u109_20
  2314   000B74                     i1u109_21:
  2315   000B74  EF8F  F005         	goto	i1l1822
  2316   000B78                     i1u109_20:
  2317   000B78                     i1l250:
  2318                           
  2319                           ; BSR set to: 0
  2320   000B78  0012               	return		;funcret
  2321   000B7A                     __end_of_mutex_unlock:
  2322                           	callstack 0
  2323                           
  2324 ;; *************** function _mutex_lock *****************
  2325 ;; Defined at:
  2326 ;;		line 12 in file "mutex.c"
  2327 ;; Parameters:    Size  Location     Type
  2328 ;;  mutex           1   20[BANK0 ] PTR struct .
  2329 ;;		 -> mutex(14), 
  2330 ;; Auto vars:     Size  Location     Type
  2331 ;;		None
  2332 ;; Return value:  Size  Location     Type
  2333 ;;                  2   20[BANK0 ] int 
  2334 ;; Registers used:
  2335 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2336 ;; Tracked objects:
  2337 ;;		On entry : 0/0
  2338 ;;		On exit  : 0/0
  2339 ;;		Unchanged: 0/0
  2340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2341 ;;      Params:         0       2       0       0       0       0       0       0       0
  2342 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2343 ;;      Temps:          0       2       0       0       0       0       0       0       0
  2344 ;;      Totals:         0       4       0       0       0       0       0       0       0
  2345 ;;Total ram usage:        4 bytes
  2346 ;; Hardware stack levels used: 1
  2347 ;; Hardware stack levels required when called: 5
  2348 ;; This function calls:
  2349 ;;		_scheduler
  2350 ;; This function is called by:
  2351 ;;		_motors_control
  2352 ;;		_sensors_reading
  2353 ;; This function uses a non-reentrant model
  2354 ;;
  2355                           
  2356                           	psect	text11
  2357   000D20                     __ptext11:
  2358                           	callstack 0
  2359   000D20                     _mutex_lock:
  2360                           	callstack 21
  2361   000D20                     
  2362                           ;mutex.c: 13:     if (mutex->locked) {
  2363   000D20  0100               	movlb	0	; () banked
  2364   000D22  5174               	movf	mutex_lock@mutex& (0+255),w,b
  2365   000D24  6ED9               	movwf	fsr2l,c
  2366   000D26  6ADA               	clrf	fsr2h,c
  2367   000D28  50DE               	movf	postinc2,w,c
  2368   000D2A  10DE               	iorwf	postinc2,w,c
  2369   000D2C  B4D8               	btfsc	status,2,c
  2370   000D2E  EF9B  F006         	goto	i1u130_21
  2371   000D32  EF9D  F006         	goto	i1u130_20
  2372   000D36                     i1u130_21:
  2373   000D36  EFC9  F006         	goto	i1l1996
  2374   000D3A                     i1u130_20:
  2375   000D3A                     
  2376                           ; BSR set to: 0
  2377                           ;mutex.c: 15:         mutex->waiting_tasks[mutex->waiting_count++] = readyQueue.taskRunn
      +                          ing;
  2378   000D3A  EE22  F0FA         	lfsr	2,_readyQueue+531
  2379   000D3E  5174               	movf	mutex_lock@mutex& (0+255),w,b
  2380   000D40  6EE1               	movwf	fsr1l,c
  2381   000D42  6AE2               	clrf	fsr1h,c
  2382   000D44  0E0D               	movlw	13
  2383   000D46  26E1               	addwf	fsr1l,f,c
  2384   000D48  50E7               	movf	indf1,w,c
  2385   000D4A  0D02               	mullw	2
  2386   000D4C  5174               	movf	mutex_lock@mutex& (0+255),w,b
  2387   000D4E  24F3               	addwf	243,w,c
  2388   000D50  6EE1               	movwf	fsr1l,c
  2389   000D52  6AE2               	clrf	fsr1h,c
  2390   000D54  0E03               	movlw	3
  2391   000D56  26E1               	addwf	fsr1l,f,c
  2392   000D58  CFDE FFE6          	movff	postinc2,postinc1
  2393   000D5C  CFDD FFE5          	movff	postdec2,postdec1
  2394   000D60                     
  2395                           ; BSR set to: 0
  2396   000D60  5174               	movf	mutex_lock@mutex& (0+255),w,b
  2397   000D62  6ED9               	movwf	fsr2l,c
  2398   000D64  6ADA               	clrf	fsr2h,c
  2399   000D66  0E0D               	movlw	13
  2400   000D68  26D9               	addwf	fsr2l,f,c
  2401   000D6A  2ADF               	incf	indf2,f,c
  2402   000D6C                     
  2403                           ; BSR set to: 0
  2404                           ;mutex.c: 16:         readyQueue.taskRunning->task_state = WAITING;
  2405   000D6C  EE22  F0FA         	lfsr	2,_readyQueue+531
  2406   000D70  EE10 F003          	lfsr	1,3
  2407   000D74  50DE               	movf	postinc2,w,c
  2408   000D76  26E1               	addwf	fsr1l,f,c
  2409   000D78  50DD               	movf	postdec2,w,c
  2410   000D7A  22E2               	addwfc	fsr1h,f,c
  2411   000D7C  0E02               	movlw	2
  2412   000D7E  6EE7               	movwf	indf1,c
  2413   000D80                     
  2414                           ; BSR set to: 0
  2415                           ;mutex.c: 18:         scheduler();
  2416   000D80  EC08  F008         	call	_scheduler	;wreg free
  2417   000D84                     
  2418                           ;mutex.c: 19:         return 0;
  2419   000D84  0E00               	movlw	0
  2420   000D86  0100               	movlb	0	; () banked
  2421   000D88  6F75               	movwf	(?_mutex_lock+1)& (0+255),b
  2422   000D8A  0E00               	movlw	0
  2423   000D8C  6F74               	movwf	?_mutex_lock& (0+255),b
  2424   000D8E  EFDF  F006         	goto	i1l246
  2425   000D92                     i1l1996:
  2426                           
  2427                           ; BSR set to: 0
  2428                           ;mutex.c: 23:     mutex->locked = 1;
  2429   000D92  5174               	movf	mutex_lock@mutex& (0+255),w,b
  2430   000D94  6ED9               	movwf	fsr2l,c
  2431   000D96  6ADA               	clrf	fsr2h,c
  2432   000D98  0E01               	movlw	1
  2433   000D9A  6EDE               	movwf	postinc2,c
  2434   000D9C  0E00               	movlw	0
  2435   000D9E  6EDD               	movwf	postdec2,c
  2436   000DA0                     
  2437                           ; BSR set to: 0
  2438                           ;mutex.c: 24:     mutex->owner = readyQueue.taskRunning->task_id;
  2439   000DA0  C2FA  FFD9         	movff	_readyQueue+531,fsr2l
  2440   000DA4  C2FB  FFDA         	movff	_readyQueue+532,fsr2h
  2441   000DA8  5174               	movf	mutex_lock@mutex& (0+255),w,b
  2442   000DAA  6EE1               	movwf	fsr1l,c
  2443   000DAC  6AE2               	clrf	fsr1h,c
  2444   000DAE  0E02               	movlw	2
  2445   000DB0  26E1               	addwf	fsr1l,f,c
  2446   000DB2  CFDF FFE7          	movff	indf2,indf1
  2447   000DB6                     
  2448                           ; BSR set to: 0
  2449                           ;mutex.c: 25:     return 1;
  2450   000DB6  0E00               	movlw	0
  2451   000DB8  6F75               	movwf	(?_mutex_lock+1)& (0+255),b
  2452   000DBA  0E01               	movlw	1
  2453   000DBC  6F74               	movwf	?_mutex_lock& (0+255),b
  2454   000DBE                     i1l246:
  2455                           
  2456                           ; BSR set to: 0
  2457   000DBE  0012               	return		;funcret
  2458   000DC0                     __end_of_mutex_lock:
  2459                           	callstack 0
  2460                           
  2461 ;; *************** function _scheduler *****************
  2462 ;; Defined at:
  2463 ;;		line 45 in file "scheduler.c"
  2464 ;; Parameters:    Size  Location     Type
  2465 ;;		None
  2466 ;; Auto vars:     Size  Location     Type
  2467 ;;		None
  2468 ;; Return value:  Size  Location     Type
  2469 ;;                  1    wreg      void 
  2470 ;; Registers used:
  2471 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2472 ;; Tracked objects:
  2473 ;;		On entry : 0/0
  2474 ;;		On exit  : 0/0
  2475 ;;		Unchanged: 0/0
  2476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2477 ;;      Params:         0       0       0       0       0       0       0       0       0
  2478 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2479 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2480 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2481 ;;Total ram usage:        0 bytes
  2482 ;; Hardware stack levels used: 1
  2483 ;; Hardware stack levels required when called: 4
  2484 ;; This function calls:
  2485 ;;		_priority_scheduler
  2486 ;; This function is called by:
  2487 ;;		_mutex_lock
  2488 ;;		_os_delay
  2489 ;;		_os_yield
  2490 ;;		_os_change_state
  2491 ;; This function uses a non-reentrant model
  2492 ;;
  2493                           
  2494                           	psect	text12
  2495   001010                     __ptext12:
  2496                           	callstack 0
  2497   001010                     _scheduler:
  2498                           	callstack 21
  2499   001010                     
  2500                           ;scheduler.c: 50:     readyQueue.taskRunning = priority_scheduler();
  2501   001010  ECBD  F005         	call	_priority_scheduler	;wreg free
  2502   001014  0100               	movlb	0	; () banked
  2503   001016  C072  F2FA         	movff	?_priority_scheduler,_readyQueue+531
  2504   00101A  C073  F2FB         	movff	?_priority_scheduler+1,_readyQueue+532
  2505   00101E                     
  2506                           ; BSR set to: 0
  2507   00101E  0012               	return		;funcret
  2508   001020                     __end_of_scheduler:
  2509                           	callstack 0
  2510                           
  2511 ;; *************** function _priority_scheduler *****************
  2512 ;; Defined at:
  2513 ;;		line 29 in file "scheduler.c"
  2514 ;; Parameters:    Size  Location     Type
  2515 ;;		None
  2516 ;; Auto vars:     Size  Location     Type
  2517 ;;  i               2   27[COMRAM] int 
  2518 ;;  pos_highest_    1   26[COMRAM] unsigned char 
  2519 ;;  highest_prio    1   25[COMRAM] unsigned char 
  2520 ;; Return value:  Size  Location     Type
  2521 ;;                  2   18[BANK0 ] PTR struct tcb
  2522 ;; Registers used:
  2523 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2524 ;; Tracked objects:
  2525 ;;		On entry : 0/0
  2526 ;;		On exit  : 0/0
  2527 ;;		Unchanged: 0/0
  2528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2529 ;;      Params:         0       2       0       0       0       0       0       0       0
  2530 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2531 ;;      Temps:          3       0       0       0       0       0       0       0       0
  2532 ;;      Totals:         7       2       0       0       0       0       0       0       0
  2533 ;;Total ram usage:        9 bytes
  2534 ;; Hardware stack levels used: 1
  2535 ;; Hardware stack levels required when called: 3
  2536 ;; This function calls:
  2537 ;;		Nothing
  2538 ;; This function is called by:
  2539 ;;		_scheduler
  2540 ;; This function uses a non-reentrant model
  2541 ;;
  2542                           
  2543                           	psect	text13
  2544   000B7A                     __ptext13:
  2545                           	callstack 0
  2546   000B7A                     _priority_scheduler:
  2547                           	callstack 21
  2548   000B7A                     
  2549                           ;scheduler.c: 31:     uint8_t highest_priority = 0;
  2550   000B7A  6A38               	clrf	priority_scheduler@highest_priority^0,c
  2551                           
  2552                           ;scheduler.c: 32:     uint8_t pos_highest_priority_task = 0;
  2553   000B7C  6A39               	clrf	priority_scheduler@pos_highest_priority_task^0,c
  2554   000B7E                     
  2555                           ;scheduler.c: 34:     for (int i = 0; i < readyQueue.readyQueueSize; i++) {
  2556   000B7E  0E00               	movlw	0
  2557   000B80  6E3B               	movwf	(priority_scheduler@i+1)^0,c
  2558   000B82  0E00               	movlw	0
  2559   000B84  6E3A               	movwf	priority_scheduler@i^0,c
  2560   000B86  EF09  F006         	goto	i1l1778
  2561   000B8A                     i1l1768:
  2562                           
  2563                           ;scheduler.c: 35:         if (readyQueue.readyQueue[i].task_priority > highest_priority 
      +                          &&
  2564   000B8A  0E6A               	movlw	106
  2565   000B8C  023A               	mulwf	priority_scheduler@i^0,c
  2566   000B8E  CFF3 F035          	movff	prodl,??_priority_scheduler
  2567   000B92  CFF4 F036          	movff	prodh,??_priority_scheduler+1
  2568   000B96  023B               	mulwf	(priority_scheduler@i+1)^0,c
  2569   000B98  50F3               	movf	prodl,w,c
  2570   000B9A  2636               	addwf	(??_priority_scheduler+1)^0,f,c
  2571   000B9C  0EEB               	movlw	low (_readyQueue+4)
  2572   000B9E  2435               	addwf	??_priority_scheduler^0,w,c
  2573   000BA0  6ED9               	movwf	fsr2l,c
  2574   000BA2  0E00               	movlw	high (_readyQueue+4)
  2575   000BA4  2036               	addwfc	(??_priority_scheduler+1)^0,w,c
  2576   000BA6  6EDA               	movwf	fsr2h,c
  2577   000BA8  50DE               	movf	postinc2,w,c
  2578   000BAA  5C38               	subwf	priority_scheduler@highest_priority^0,w,c
  2579   000BAC  B0D8               	btfsc	status,0,c
  2580   000BAE  EFDB  F005         	goto	i1u103_21
  2581   000BB2  EFDD  F005         	goto	i1u103_20
  2582   000BB6                     i1u103_21:
  2583   000BB6  EF07  F006         	goto	i1l1776
  2584   000BBA                     i1u103_20:
  2585   000BBA  0E6A               	movlw	106
  2586   000BBC  023A               	mulwf	priority_scheduler@i^0,c
  2587   000BBE  CFF3 F035          	movff	prodl,??_priority_scheduler
  2588   000BC2  CFF4 F036          	movff	prodh,??_priority_scheduler+1
  2589   000BC6  023B               	mulwf	(priority_scheduler@i+1)^0,c
  2590   000BC8  50F3               	movf	prodl,w,c
  2591   000BCA  2636               	addwf	(??_priority_scheduler+1)^0,f,c
  2592   000BCC  0EEA               	movlw	low (_readyQueue+3)
  2593   000BCE  2435               	addwf	??_priority_scheduler^0,w,c
  2594   000BD0  6ED9               	movwf	fsr2l,c
  2595   000BD2  0E00               	movlw	high (_readyQueue+3)
  2596   000BD4  2036               	addwfc	(??_priority_scheduler+1)^0,w,c
  2597   000BD6  6EDA               	movwf	fsr2h,c
  2598   000BD8  50DF               	movf	indf2,w,c
  2599   000BDA  A4D8               	btfss	status,2,c
  2600   000BDC  EFF2  F005         	goto	i1u104_21
  2601   000BE0  EFF4  F005         	goto	i1u104_20
  2602   000BE4                     i1u104_21:
  2603   000BE4  EF07  F006         	goto	i1l1776
  2604   000BE8                     i1u104_20:
  2605   000BE8                     
  2606                           ;scheduler.c: 36:             readyQueue.readyQueue[i].task_state == READY) {;scheduler.
      +                          c: 37:             highest_priority = readyQueue.readyQueue[i].task_priority;
  2607   000BE8  0E6A               	movlw	106
  2608   000BEA  023A               	mulwf	priority_scheduler@i^0,c
  2609   000BEC  CFF3 F035          	movff	prodl,??_priority_scheduler
  2610   000BF0  CFF4 F036          	movff	prodh,??_priority_scheduler+1
  2611   000BF4  023B               	mulwf	(priority_scheduler@i+1)^0,c
  2612   000BF6  50F3               	movf	prodl,w,c
  2613   000BF8  2636               	addwf	(??_priority_scheduler+1)^0,f,c
  2614   000BFA  0EEB               	movlw	low (_readyQueue+4)
  2615   000BFC  2435               	addwf	??_priority_scheduler^0,w,c
  2616   000BFE  6ED9               	movwf	fsr2l,c
  2617   000C00  0E00               	movlw	high (_readyQueue+4)
  2618   000C02  2036               	addwfc	(??_priority_scheduler+1)^0,w,c
  2619   000C04  6EDA               	movwf	fsr2h,c
  2620   000C06  50DF               	movf	indf2,w,c
  2621   000C08  6E38               	movwf	priority_scheduler@highest_priority^0,c
  2622   000C0A                     
  2623                           ;scheduler.c: 38:             pos_highest_priority_task = i;
  2624   000C0A  C03A  F039         	movff	priority_scheduler@i,priority_scheduler@pos_highest_priority_task
  2625   000C0E                     i1l1776:
  2626                           
  2627                           ;scheduler.c: 40:     }
  2628   000C0E  4A3A               	infsnz	priority_scheduler@i^0,f,c
  2629   000C10  2A3B               	incf	(priority_scheduler@i+1)^0,f,c
  2630   000C12                     i1l1778:
  2631   000C12  EE22  F0F9         	lfsr	2,_readyQueue+530
  2632   000C16  50DF               	movf	indf2,w,c
  2633   000C18  6E35               	movwf	??_priority_scheduler^0,c
  2634   000C1A  6A36               	clrf	(??_priority_scheduler+1)^0,c
  2635   000C1C  5035               	movf	??_priority_scheduler^0,w,c
  2636   000C1E  5C3A               	subwf	priority_scheduler@i^0,w,c
  2637   000C20  503B               	movf	(priority_scheduler@i+1)^0,w,c
  2638   000C22  0A80               	xorlw	128
  2639   000C24  6E37               	movwf	(??_priority_scheduler+2)^0,c
  2640   000C26  5036               	movf	(??_priority_scheduler+1)^0,w,c
  2641   000C28  0A80               	xorlw	128
  2642   000C2A  5837               	subwfb	(??_priority_scheduler+2)^0,w,c
  2643   000C2C  A0D8               	btfss	status,0,c
  2644   000C2E  EF1B  F006         	goto	i1u105_21
  2645   000C32  EF1D  F006         	goto	i1u105_20
  2646   000C36                     i1u105_21:
  2647   000C36  EFC5  F005         	goto	i1l1768
  2648   000C3A                     i1u105_20:
  2649   000C3A                     
  2650                           ;scheduler.c: 42:     return &readyQueue.readyQueue[pos_highest_priority_task];
  2651   000C3A  5039               	movf	priority_scheduler@pos_highest_priority_task^0,w,c
  2652   000C3C  0D6A               	mullw	106
  2653   000C3E  0EE7               	movlw	low _readyQueue
  2654   000C40  24F3               	addwf	243,w,c
  2655   000C42  0100               	movlb	0	; () banked
  2656   000C44  6F72               	movwf	?_priority_scheduler& (0+255),b
  2657   000C46  0E00               	movlw	high _readyQueue
  2658   000C48  20F4               	addwfc	prodh,w,c
  2659   000C4A  6F73               	movwf	(?_priority_scheduler+1)& (0+255),b
  2660   000C4C                     
  2661                           ; BSR set to: 0
  2662   000C4C  0012               	return		;funcret
  2663   000C4E                     __end_of_priority_scheduler:
  2664                           	callstack 0
  2665                           
  2666 ;; *************** function _sensors_reading *****************
  2667 ;; Defined at:
  2668 ;;		line 34 in file "user_app.c"
  2669 ;; Parameters:    Size  Location     Type
  2670 ;;		None
  2671 ;; Auto vars:     Size  Location     Type
  2672 ;;		None
  2673 ;; Return value:  Size  Location     Type
  2674 ;;                  1    wreg      void 
  2675 ;; Registers used:
  2676 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2677 ;; Tracked objects:
  2678 ;;		On entry : 0/0
  2679 ;;		On exit  : 0/0
  2680 ;;		Unchanged: 0/0
  2681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2682 ;;      Params:         0       0       0       0       0       0       0       0       0
  2683 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2684 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2685 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2686 ;;Total ram usage:        0 bytes
  2687 ;; Hardware stack levels used: 1
  2688 ;; Hardware stack levels required when called: 6
  2689 ;; This function calls:
  2690 ;;		_mutex_lock
  2691 ;;		_mutex_unlock
  2692 ;; This function is called by:
  2693 ;;		_main
  2694 ;; This function uses a non-reentrant model
  2695 ;;
  2696                           
  2697                           	psect	text14
  2698   000F28                     __ptext14:
  2699                           	callstack 0
  2700   000F28                     _sensors_reading:
  2701                           	callstack 21
  2702   000F28                     l94:
  2703   000F28                     
  2704                           ;user_app.c: 36:         if (mutex_lock(&mutex)) {
  2705   000F28  0E11               	movlw	low _mutex
  2706   000F2A  0100               	movlb	0	; () banked
  2707   000F2C  6F74               	movwf	mutex_lock@mutex& (0+255),b
  2708   000F2E  EC90  F006         	call	_mutex_lock	;wreg free
  2709   000F32  0100               	movlb	0	; () banked
  2710   000F34  5174               	movf	?_mutex_lock& (0+255),w,b
  2711   000F36  1175               	iorwf	(?_mutex_lock+1)& (0+255),w,b
  2712   000F38  B4D8               	btfsc	status,2,c
  2713   000F3A  EFA1  F007         	goto	u132_21
  2714   000F3E  EFA3  F007         	goto	u132_20
  2715   000F42                     u132_21:
  2716   000F42  EF94  F007         	goto	l94
  2717   000F46                     u132_20:
  2718   000F46                     
  2719                           ; BSR set to: 0
  2720                           ;user_app.c: 38:             mutex_unlock(&mutex);
  2721   000F46  0E11               	movlw	low _mutex
  2722   000F48  6F72               	movwf	mutex_unlock@mutex& (0+255),b
  2723   000F4A  EC46  F005         	call	_mutex_unlock	;wreg free
  2724   000F4E  EF94  F007         	goto	l94
  2725   000F52  0012               	return		;funcret
  2726   000F54                     __end_of_sensors_reading:
  2727                           	callstack 0
  2728                           
  2729 ;; *************** function _ISR_TIMER_0 *****************
  2730 ;; Defined at:
  2731 ;;		line 25 in file "hardware.c"
  2732 ;; Parameters:    Size  Location     Type
  2733 ;;		None
  2734 ;; Auto vars:     Size  Location     Type
  2735 ;;		None
  2736 ;; Return value:  Size  Location     Type
  2737 ;;                  1    wreg      void 
  2738 ;; Registers used:
  2739 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2740 ;; Tracked objects:
  2741 ;;		On entry : 0/0
  2742 ;;		On exit  : 0/0
  2743 ;;		Unchanged: 0/0
  2744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2745 ;;      Params:         0       0       0       0       0       0       0       0       0
  2746 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2747 ;;      Temps:         13       0       0       0       0       0       0       0       0
  2748 ;;      Totals:        13       0       0       0       0       0       0       0       0
  2749 ;;Total ram usage:       13 bytes
  2750 ;; Hardware stack levels used: 1
  2751 ;; Hardware stack levels required when called: 2
  2752 ;; This function calls:
  2753 ;;		_os_task_time_decrease
  2754 ;;		i2_scheduler
  2755 ;; This function is called by:
  2756 ;;		Interrupt level 2
  2757 ;; This function uses a non-reentrant model
  2758 ;;
  2759                           
  2760                           	psect	intcode
  2761   000008                     __pintcode:
  2762                           	callstack 0
  2763   000008                     _ISR_TIMER_0:
  2764                           	callstack 21
  2765                           
  2766                           ;incstack = 0
  2767   000008  823C               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  2768   00000A  ED01  F004         	call	int_func,f	;refresh shadow registers
  2769                           
  2770                           	psect	intcode_body
  2771   000802                     __pintcode_body:
  2772                           	callstack 21
  2773   000802                     int_func:
  2774                           	callstack 21
  2775   000802  0006               	pop		; remove dummy address from shadow register refresh
  2776   000804  CFE1 F02F          	movff	fsr1l,??_ISR_TIMER_0+7
  2777   000808  CFE2 F030          	movff	fsr1h,??_ISR_TIMER_0+8
  2778   00080C  CFD9 F031          	movff	fsr2l,??_ISR_TIMER_0+9
  2779   000810  CFDA F032          	movff	fsr2h,??_ISR_TIMER_0+10
  2780   000814  CFF3 F033          	movff	prodl,??_ISR_TIMER_0+11
  2781   000818  CFF4 F034          	movff	prodh,??_ISR_TIMER_0+12
  2782   00081C                     
  2783                           ;hardware.c: 27:     (INTCONbits.GIE = 0);
  2784   00081C  9EF2               	bcf	242,7,c	;volatile
  2785                           
  2786                           ;hardware.c: 29:     if (INTCONbits.TMR0IF == 1) {
  2787   00081E  A4F2               	btfss	242,2,c	;volatile
  2788   000820  EF14  F004         	goto	i2u73_41
  2789   000824  EF16  F004         	goto	i2u73_40
  2790   000828                     i2u73_41:
  2791   000828  EF37  F005         	goto	i2l1578
  2792   00082C                     i2u73_40:
  2793   00082C                     
  2794                           ;hardware.c: 30:         INTCONbits.TMR0IF = 0;
  2795   00082C  94F2               	bcf	242,2,c	;volatile
  2796   00082E                     
  2797                           ;hardware.c: 33:         os_task_time_decrease();
  2798   00082E  ECE0  F006         	call	_os_task_time_decrease	;wreg free
  2799   000832  EE22  F0FA         	lfsr	2,_readyQueue+531
  2800   000836  EE10 F003          	lfsr	1,3
  2801   00083A  50DE               	movf	postinc2,w,c
  2802   00083C  26E1               	addwf	fsr1l,f,c
  2803   00083E  50DD               	movf	postdec2,w,c
  2804   000840  22E2               	addwfc	fsr1h,f,c
  2805   000842  04E6               	decf	postinc1,w,c
  2806   000844  A4D8               	btfss	status,2,c
  2807   000846  EF27  F004         	goto	i2u74_41
  2808   00084A  EF29  F004         	goto	i2u74_40
  2809   00084E                     i2u74_41:
  2810   00084E  EF95  F004         	goto	i2l1558
  2811   000852                     i2u74_40:
  2812   000852  EE22  F0FA         	lfsr	2,_readyQueue+531
  2813   000856  EE10 F006          	lfsr	1,6
  2814   00085A  50DE               	movf	postinc2,w,c
  2815   00085C  26E1               	addwf	fsr1l,f,c
  2816   00085E  50DD               	movf	postdec2,w,c
  2817   000860  22E2               	addwfc	fsr1h,f,c
  2818   000862  CFE0 FFE7          	movff	bsr,indf1	;volatile
  2819   000866  EE22  F0FA         	lfsr	2,_readyQueue+531
  2820   00086A  EE10 F008          	lfsr	1,8
  2821   00086E  50DE               	movf	postinc2,w,c
  2822   000870  26E1               	addwf	fsr1l,f,c
  2823   000872  50DD               	movf	postdec2,w,c
  2824   000874  22E2               	addwfc	fsr1h,f,c
  2825   000876  CFD8 FFE7          	movff	status,indf1	;volatile
  2826   00087A  EE22  F0FA         	lfsr	2,_readyQueue+531
  2827   00087E  EE10 F007          	lfsr	1,7
  2828   000882  50DE               	movf	postinc2,w,c
  2829   000884  26E1               	addwf	fsr1l,f,c
  2830   000886  50DD               	movf	postdec2,w,c
  2831   000888  22E2               	addwfc	fsr1h,f,c
  2832   00088A  CFE8 FFE7          	movff	wreg,indf1	;volatile
  2833   00088E  EE22  F0FA         	lfsr	2,_readyQueue+531
  2834   000892  EE10 F069          	lfsr	1,105
  2835   000896  50DE               	movf	postinc2,w,c
  2836   000898  26E1               	addwf	fsr1l,f,c
  2837   00089A  50DD               	movf	postdec2,w,c
  2838   00089C  22E2               	addwfc	fsr1h,f,c
  2839   00089E  6AE7               	clrf	indf1,c
  2840   0008A0  EF84  F004         	goto	i2l1554
  2841   0008A4                     i2l1550:
  2842   0008A4  EE22  F0FA         	lfsr	2,_readyQueue+531
  2843   0008A8  EE10 F069          	lfsr	1,105
  2844   0008AC  50DE               	movf	postinc2,w,c
  2845   0008AE  26E1               	addwf	fsr1l,f,c
  2846   0008B0  50DD               	movf	postdec2,w,c
  2847   0008B2  22E2               	addwfc	fsr1h,f,c
  2848   0008B4  50E7               	movf	indf1,w,c
  2849   0008B6  6E28               	movwf	??_ISR_TIMER_0^0,c
  2850   0008B8  5028               	movf	??_ISR_TIMER_0^0,w,c
  2851   0008BA  0D03               	mullw	3
  2852   0008BC  CFF3 F029          	movff	prodl,??_ISR_TIMER_0+1
  2853   0008C0  CFF4 F02A          	movff	prodh,??_ISR_TIMER_0+2
  2854   0008C4  EE22  F0FA         	lfsr	2,_readyQueue+531
  2855   0008C8  CFDE F02B          	movff	postinc2,??_ISR_TIMER_0+3
  2856   0008CC  CFDD F02C          	movff	postdec2,??_ISR_TIMER_0+4
  2857   0008D0  5029               	movf	(??_ISR_TIMER_0+1)^0,w,c
  2858   0008D2  242B               	addwf	(??_ISR_TIMER_0+3)^0,w,c
  2859   0008D4  6E2D               	movwf	(??_ISR_TIMER_0+5)^0,c
  2860   0008D6  502A               	movf	(??_ISR_TIMER_0+2)^0,w,c
  2861   0008D8  202C               	addwfc	(??_ISR_TIMER_0+4)^0,w,c
  2862   0008DA  6E2E               	movwf	(??_ISR_TIMER_0+6)^0,c
  2863   0008DC  0E09               	movlw	9
  2864   0008DE  242D               	addwf	(??_ISR_TIMER_0+5)^0,w,c
  2865   0008E0  6ED9               	movwf	fsr2l,c
  2866   0008E2  0E00               	movlw	0
  2867   0008E4  202E               	addwfc	(??_ISR_TIMER_0+6)^0,w,c
  2868   0008E6  6EDA               	movwf	fsr2h,c
  2869   0008E8  CFFD FFDE          	movff	tosl,postinc2	;volatile
  2870   0008EC  CFFE FFDE          	movff	tosh,postinc2	;volatile
  2871   0008F0  CFFF FFDE          	movff	tosu,postinc2	;volatile
  2872   0008F4  EE22  F0FA         	lfsr	2,_readyQueue+531
  2873   0008F8  EE10 F069          	lfsr	1,105
  2874   0008FC  50DE               	movf	postinc2,w,c
  2875   0008FE  26E1               	addwf	fsr1l,f,c
  2876   000900  50DD               	movf	postdec2,w,c
  2877   000902  22E2               	addwfc	fsr1h,f,c
  2878   000904  2AE7               	incf	indf1,f,c
  2879   000906  0006               	pop		;# 
  2880   000908                     i2l1554:
  2881   000908  50FC               	movf	252,w,c	;volatile
  2882   00090A  A4D8               	btfss	status,2,c
  2883   00090C  EF8A  F004         	goto	i2u75_41
  2884   000910  EF8C  F004         	goto	i2u75_40
  2885   000914                     i2u75_41:
  2886   000914  EF52  F004         	goto	i2l1550
  2887   000918                     i2u75_40:
  2888   000918  EE22  F0FA         	lfsr	2,_readyQueue+531
  2889   00091C  EE10 F003          	lfsr	1,3
  2890   000920  50DE               	movf	postinc2,w,c
  2891   000922  26E1               	addwf	fsr1l,f,c
  2892   000924  50DD               	movf	postdec2,w,c
  2893   000926  22E2               	addwfc	fsr1h,f,c
  2894   000928  6AE7               	clrf	indf1,c
  2895   00092A                     i2l1558:
  2896                           
  2897                           ;hardware.c: 36:         scheduler();
  2898   00092A  EC10  F008         	call	i2_scheduler	;wreg free
  2899   00092E  EE22  F0FA         	lfsr	2,_readyQueue+531
  2900   000932  EE10 F003          	lfsr	1,3
  2901   000936  50DE               	movf	postinc2,w,c
  2902   000938  26E1               	addwf	fsr1l,f,c
  2903   00093A  50DD               	movf	postdec2,w,c
  2904   00093C  22E2               	addwfc	fsr1h,f,c
  2905   00093E  50E7               	movf	indf1,w,c
  2906   000940  A4D8               	btfss	status,2,c
  2907   000942  EFA5  F004         	goto	i2u76_41
  2908   000946  EFA7  F004         	goto	i2u76_40
  2909   00094A                     i2u76_41:
  2910   00094A  EF37  F005         	goto	i2l1578
  2911   00094E                     i2u76_40:
  2912   00094E  EE22  F0FA         	lfsr	2,_readyQueue+531
  2913   000952  EE10 F006          	lfsr	1,6
  2914   000956  50DE               	movf	postinc2,w,c
  2915   000958  26E1               	addwf	fsr1l,f,c
  2916   00095A  50DD               	movf	postdec2,w,c
  2917   00095C  22E2               	addwfc	fsr1h,f,c
  2918   00095E  50E7               	movf	indf1,w,c
  2919   000960  6EE0               	movwf	224,c	;volatile
  2920   000962  EE22  F0FA         	lfsr	2,_readyQueue+531
  2921   000966  EE10 F008          	lfsr	1,8
  2922   00096A  50DE               	movf	postinc2,w,c
  2923   00096C  26E1               	addwf	fsr1l,f,c
  2924   00096E  50DD               	movf	postdec2,w,c
  2925   000970  22E2               	addwfc	fsr1h,f,c
  2926   000972  50E7               	movf	indf1,w,c
  2927   000974  6ED8               	movwf	216,c	;volatile
  2928   000976  EE22  F0FA         	lfsr	2,_readyQueue+531
  2929   00097A  EE10 F007          	lfsr	1,7
  2930   00097E  50DE               	movf	postinc2,w,c
  2931   000980  26E1               	addwf	fsr1l,f,c
  2932   000982  50DD               	movf	postdec2,w,c
  2933   000984  22E2               	addwfc	fsr1h,f,c
  2934   000986  50E7               	movf	indf1,w,c
  2935   000988  6E28               	movwf	??_ISR_TIMER_0^0,c
  2936   00098A  5028               	movf	??_ISR_TIMER_0^0,w,c
  2937   00098C  6AFC               	clrf	252,c	;volatile
  2938   00098E  EE22  F0FA         	lfsr	2,_readyQueue+531
  2939   000992  EE10 F069          	lfsr	1,105
  2940   000996  50DE               	movf	postinc2,w,c
  2941   000998  26E1               	addwf	fsr1l,f,c
  2942   00099A  50DD               	movf	postdec2,w,c
  2943   00099C  22E2               	addwfc	fsr1h,f,c
  2944   00099E  50E7               	movf	indf1,w,c
  2945   0009A0  A4D8               	btfss	status,2,c
  2946   0009A2  EFD5  F004         	goto	i2u77_41
  2947   0009A6  EFD7  F004         	goto	i2u77_40
  2948   0009AA                     i2u77_41:
  2949   0009AA  EFEB  F004         	goto	i2l232
  2950   0009AE                     i2u77_40:
  2951   0009AE  0005               	push		;# 
  2952   0009B0  EE22  F0FA         	lfsr	2,_readyQueue+531
  2953   0009B4  EE10 F001          	lfsr	1,1
  2954   0009B8  50DE               	movf	postinc2,w,c
  2955   0009BA  26E1               	addwf	fsr1l,f,c
  2956   0009BC  50DD               	movf	postdec2,w,c
  2957   0009BE  22E2               	addwfc	fsr1h,f,c
  2958   0009C0  CFE6 F028          	movff	postinc1,??_ISR_TIMER_0
  2959   0009C4  CFE5 F029          	movff	postdec1,??_ISR_TIMER_0+1
  2960   0009C8  C028  FFFD         	movff	??_ISR_TIMER_0,tosl	;volatile
  2961   0009CC  C029  FFFE         	movff	??_ISR_TIMER_0+1,tosh	;volatile
  2962   0009D0  6AFF               	clrf	255,c	;volatile
  2963   0009D2  EF2D  F005         	goto	i2l1576
  2964   0009D6                     i2l232:
  2965   0009D6  0005               	push		;# 
  2966   0009D8  EE22  F0FA         	lfsr	2,_readyQueue+531
  2967   0009DC  EE10 F069          	lfsr	1,105
  2968   0009E0  50DE               	movf	postinc2,w,c
  2969   0009E2  26E1               	addwf	fsr1l,f,c
  2970   0009E4  50DD               	movf	postdec2,w,c
  2971   0009E6  22E2               	addwfc	fsr1h,f,c
  2972   0009E8  06E7               	decf	indf1,f,c
  2973   0009EA  EE22  F0FA         	lfsr	2,_readyQueue+531
  2974   0009EE  EE10 F069          	lfsr	1,105
  2975   0009F2  50DE               	movf	postinc2,w,c
  2976   0009F4  26E1               	addwf	fsr1l,f,c
  2977   0009F6  50DD               	movf	postdec2,w,c
  2978   0009F8  22E2               	addwfc	fsr1h,f,c
  2979   0009FA  50E7               	movf	indf1,w,c
  2980   0009FC  6E28               	movwf	??_ISR_TIMER_0^0,c
  2981   0009FE  5028               	movf	??_ISR_TIMER_0^0,w,c
  2982   000A00  0D03               	mullw	3
  2983   000A02  CFF3 F029          	movff	prodl,??_ISR_TIMER_0+1
  2984   000A06  CFF4 F02A          	movff	prodh,??_ISR_TIMER_0+2
  2985   000A0A  EE22  F0FA         	lfsr	2,_readyQueue+531
  2986   000A0E  CFDE F02B          	movff	postinc2,??_ISR_TIMER_0+3
  2987   000A12  CFDD F02C          	movff	postdec2,??_ISR_TIMER_0+4
  2988   000A16  5029               	movf	(??_ISR_TIMER_0+1)^0,w,c
  2989   000A18  242B               	addwf	(??_ISR_TIMER_0+3)^0,w,c
  2990   000A1A  6E2D               	movwf	(??_ISR_TIMER_0+5)^0,c
  2991   000A1C  502A               	movf	(??_ISR_TIMER_0+2)^0,w,c
  2992   000A1E  202C               	addwfc	(??_ISR_TIMER_0+4)^0,w,c
  2993   000A20  6E2E               	movwf	(??_ISR_TIMER_0+6)^0,c
  2994   000A22  0E09               	movlw	9
  2995   000A24  242D               	addwf	(??_ISR_TIMER_0+5)^0,w,c
  2996   000A26  6ED9               	movwf	fsr2l,c
  2997   000A28  0E00               	movlw	0
  2998   000A2A  202E               	addwfc	(??_ISR_TIMER_0+6)^0,w,c
  2999   000A2C  6EDA               	movwf	fsr2h,c
  3000   000A2E  CFDE FFFD          	movff	postinc2,tosl	;volatile
  3001   000A32  CFDE FFFE          	movff	postinc2,tosh	;volatile
  3002   000A36  CFDD FFFF          	movff	postdec2,tosu	;volatile
  3003   000A3A  EE22  F0FA         	lfsr	2,_readyQueue+531
  3004   000A3E  EE10 F069          	lfsr	1,105
  3005   000A42  50DE               	movf	postinc2,w,c
  3006   000A44  26E1               	addwf	fsr1l,f,c
  3007   000A46  50DD               	movf	postdec2,w,c
  3008   000A48  22E2               	addwfc	fsr1h,f,c
  3009   000A4A  50E7               	movf	indf1,w,c
  3010   000A4C  A4D8               	btfss	status,2,c
  3011   000A4E  EF2B  F005         	goto	i2u78_41
  3012   000A52  EF2D  F005         	goto	i2u78_40
  3013   000A56                     i2u78_41:
  3014   000A56  EFEB  F004         	goto	i2l232
  3015   000A5A                     i2u78_40:
  3016   000A5A                     i2l1576:
  3017   000A5A  EE22  F0FA         	lfsr	2,_readyQueue+531
  3018   000A5E  EE10 F003          	lfsr	1,3
  3019   000A62  50DE               	movf	postinc2,w,c
  3020   000A64  26E1               	addwf	fsr1l,f,c
  3021   000A66  50DD               	movf	postdec2,w,c
  3022   000A68  22E2               	addwfc	fsr1h,f,c
  3023   000A6A  0E01               	movlw	1
  3024   000A6C  6EE7               	movwf	indf1,c
  3025   000A6E                     i2l1578:
  3026                           
  3027                           ;hardware.c: 40:     (INTCONbits.GIE = 1);
  3028   000A6E  8EF2               	bsf	242,7,c	;volatile
  3029   000A70  C034  FFF4         	movff	??_ISR_TIMER_0+12,prodh
  3030   000A74  C033  FFF3         	movff	??_ISR_TIMER_0+11,prodl
  3031   000A78  C032  FFDA         	movff	??_ISR_TIMER_0+10,fsr2h
  3032   000A7C  C031  FFD9         	movff	??_ISR_TIMER_0+9,fsr2l
  3033   000A80  C030  FFE2         	movff	??_ISR_TIMER_0+8,fsr1h
  3034   000A84  C02F  FFE1         	movff	??_ISR_TIMER_0+7,fsr1l
  3035   000A88  923C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3036   000A8A  0011               	retfie		f
  3037   000A8C                     __end_of_ISR_TIMER_0:
  3038                           	callstack 0
  3039                           
  3040 ;; *************** function i2_scheduler *****************
  3041 ;; Defined at:
  3042 ;;		line 45 in file "scheduler.c"
  3043 ;; Parameters:    Size  Location     Type
  3044 ;;		None
  3045 ;; Auto vars:     Size  Location     Type
  3046 ;;		None
  3047 ;; Return value:  Size  Location     Type
  3048 ;;                  1    wreg      void 
  3049 ;; Registers used:
  3050 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3051 ;; Tracked objects:
  3052 ;;		On entry : 0/0
  3053 ;;		On exit  : 0/0
  3054 ;;		Unchanged: 0/0
  3055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3056 ;;      Params:         0       0       0       0       0       0       0       0       0
  3057 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3058 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3059 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3060 ;;Total ram usage:        0 bytes
  3061 ;; Hardware stack levels used: 1
  3062 ;; Hardware stack levels required when called: 1
  3063 ;; This function calls:
  3064 ;;		i2_priority_scheduler
  3065 ;; This function is called by:
  3066 ;;		_ISR_TIMER_0
  3067 ;; This function uses a non-reentrant model
  3068 ;;
  3069                           
  3070                           	psect	text16
  3071   001020                     __ptext16:
  3072                           	callstack 0
  3073   001020                     i2_scheduler:
  3074                           	callstack 21
  3075   001020                     
  3076                           ;scheduler.c: 50:     readyQueue.taskRunning = priority_scheduler();
  3077   001020  EC27  F006         	call	i2_priority_scheduler	;wreg free
  3078   001024  C01F  F2FA         	movff	?i2_priority_scheduler,_readyQueue+531
  3079   001028  C020  F2FB         	movff	?i2_priority_scheduler+1,_readyQueue+532
  3080   00102C  0012               	return		;funcret
  3081   00102E                     __end_ofi2_scheduler:
  3082                           	callstack 0
  3083                           
  3084 ;; *************** function i2_priority_scheduler *****************
  3085 ;; Defined at:
  3086 ;;		line 29 in file "scheduler.c"
  3087 ;; Parameters:    Size  Location     Type
  3088 ;;		None
  3089 ;; Auto vars:     Size  Location     Type
  3090 ;;  i               2    7[COMRAM] int 
  3091 ;;  pos_highest_    1    6[COMRAM] unsigned char 
  3092 ;;  highest_prio    1    5[COMRAM] unsigned char 
  3093 ;; Return value:  Size  Location     Type
  3094 ;;                  2    0[COMRAM] PTR struct tcb
  3095 ;; Registers used:
  3096 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3097 ;; Tracked objects:
  3098 ;;		On entry : 0/0
  3099 ;;		On exit  : 0/0
  3100 ;;		Unchanged: 0/0
  3101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3102 ;;      Params:         2       0       0       0       0       0       0       0       0
  3103 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3104 ;;      Temps:          3       0       0       0       0       0       0       0       0
  3105 ;;      Totals:         9       0       0       0       0       0       0       0       0
  3106 ;;Total ram usage:        9 bytes
  3107 ;; Hardware stack levels used: 1
  3108 ;; This function calls:
  3109 ;;		Nothing
  3110 ;; This function is called by:
  3111 ;;		i2_scheduler
  3112 ;; This function uses a non-reentrant model
  3113 ;;
  3114                           
  3115                           	psect	text17
  3116   000C4E                     __ptext17:
  3117                           	callstack 0
  3118   000C4E                     i2_priority_scheduler:
  3119                           	callstack 21
  3120   000C4E                     
  3121                           ;scheduler.c: 31:     uint8_t highest_priority = 0;
  3122   000C4E  6A24               	clrf	i2priority_scheduler@highest_priority^0,c
  3123                           
  3124                           ;scheduler.c: 32:     uint8_t pos_highest_priority_task = 0;
  3125   000C50  6A25               	clrf	i2priority_scheduler@pos_highest_priority_task^0,c
  3126   000C52                     
  3127                           ;scheduler.c: 34:     for (int i = 0; i < readyQueue.readyQueueSize; i++) {
  3128   000C52  0E00               	movlw	0
  3129   000C54  6E27               	movwf	(i2priority_scheduler@i+1)^0,c
  3130   000C56  0E00               	movlw	0
  3131   000C58  6E26               	movwf	i2priority_scheduler@i^0,c
  3132   000C5A  EF73  F006         	goto	i2l1358
  3133   000C5E                     i2l1348:
  3134                           
  3135                           ;scheduler.c: 35:         if (readyQueue.readyQueue[i].task_priority > highest_priority 
      +                          &&
  3136   000C5E  0E6A               	movlw	106
  3137   000C60  0226               	mulwf	i2priority_scheduler@i^0,c
  3138   000C62  CFF3 F021          	movff	prodl,??i2_priority_scheduler
  3139   000C66  CFF4 F022          	movff	prodh,??i2_priority_scheduler+1
  3140   000C6A  0227               	mulwf	(i2priority_scheduler@i+1)^0,c
  3141   000C6C  50F3               	movf	prodl,w,c
  3142   000C6E  2622               	addwf	(??i2_priority_scheduler+1)^0,f,c
  3143   000C70  0EEB               	movlw	low (_readyQueue+4)
  3144   000C72  2421               	addwf	??i2_priority_scheduler^0,w,c
  3145   000C74  6ED9               	movwf	fsr2l,c
  3146   000C76  0E00               	movlw	high (_readyQueue+4)
  3147   000C78  2022               	addwfc	(??i2_priority_scheduler+1)^0,w,c
  3148   000C7A  6EDA               	movwf	fsr2h,c
  3149   000C7C  50DE               	movf	postinc2,w,c
  3150   000C7E  5C24               	subwf	i2priority_scheduler@highest_priority^0,w,c
  3151   000C80  B0D8               	btfsc	status,0,c
  3152   000C82  EF45  F006         	goto	i2u49_41
  3153   000C86  EF47  F006         	goto	i2u49_40
  3154   000C8A                     i2u49_41:
  3155   000C8A  EF71  F006         	goto	i2l1356
  3156   000C8E                     i2u49_40:
  3157   000C8E  0E6A               	movlw	106
  3158   000C90  0226               	mulwf	i2priority_scheduler@i^0,c
  3159   000C92  CFF3 F021          	movff	prodl,??i2_priority_scheduler
  3160   000C96  CFF4 F022          	movff	prodh,??i2_priority_scheduler+1
  3161   000C9A  0227               	mulwf	(i2priority_scheduler@i+1)^0,c
  3162   000C9C  50F3               	movf	prodl,w,c
  3163   000C9E  2622               	addwf	(??i2_priority_scheduler+1)^0,f,c
  3164   000CA0  0EEA               	movlw	low (_readyQueue+3)
  3165   000CA2  2421               	addwf	??i2_priority_scheduler^0,w,c
  3166   000CA4  6ED9               	movwf	fsr2l,c
  3167   000CA6  0E00               	movlw	high (_readyQueue+3)
  3168   000CA8  2022               	addwfc	(??i2_priority_scheduler+1)^0,w,c
  3169   000CAA  6EDA               	movwf	fsr2h,c
  3170   000CAC  50DF               	movf	indf2,w,c
  3171   000CAE  A4D8               	btfss	status,2,c
  3172   000CB0  EF5C  F006         	goto	i2u50_41
  3173   000CB4  EF5E  F006         	goto	i2u50_40
  3174   000CB8                     i2u50_41:
  3175   000CB8  EF71  F006         	goto	i2l1356
  3176   000CBC                     i2u50_40:
  3177   000CBC                     
  3178                           ;scheduler.c: 36:             readyQueue.readyQueue[i].task_state == READY) {;scheduler.
      +                          c: 37:             highest_priority = readyQueue.readyQueue[i].task_priority;
  3179   000CBC  0E6A               	movlw	106
  3180   000CBE  0226               	mulwf	i2priority_scheduler@i^0,c
  3181   000CC0  CFF3 F021          	movff	prodl,??i2_priority_scheduler
  3182   000CC4  CFF4 F022          	movff	prodh,??i2_priority_scheduler+1
  3183   000CC8  0227               	mulwf	(i2priority_scheduler@i+1)^0,c
  3184   000CCA  50F3               	movf	prodl,w,c
  3185   000CCC  2622               	addwf	(??i2_priority_scheduler+1)^0,f,c
  3186   000CCE  0EEB               	movlw	low (_readyQueue+4)
  3187   000CD0  2421               	addwf	??i2_priority_scheduler^0,w,c
  3188   000CD2  6ED9               	movwf	fsr2l,c
  3189   000CD4  0E00               	movlw	high (_readyQueue+4)
  3190   000CD6  2022               	addwfc	(??i2_priority_scheduler+1)^0,w,c
  3191   000CD8  6EDA               	movwf	fsr2h,c
  3192   000CDA  50DF               	movf	indf2,w,c
  3193   000CDC  6E24               	movwf	i2priority_scheduler@highest_priority^0,c
  3194   000CDE                     
  3195                           ;scheduler.c: 38:             pos_highest_priority_task = i;
  3196   000CDE  C026  F025         	movff	i2priority_scheduler@i,i2priority_scheduler@pos_highest_priority_task
  3197   000CE2                     i2l1356:
  3198                           
  3199                           ;scheduler.c: 40:     }
  3200   000CE2  4A26               	infsnz	i2priority_scheduler@i^0,f,c
  3201   000CE4  2A27               	incf	(i2priority_scheduler@i+1)^0,f,c
  3202   000CE6                     i2l1358:
  3203   000CE6  EE22  F0F9         	lfsr	2,_readyQueue+530
  3204   000CEA  50DF               	movf	indf2,w,c
  3205   000CEC  6E21               	movwf	??i2_priority_scheduler^0,c
  3206   000CEE  6A22               	clrf	(??i2_priority_scheduler+1)^0,c
  3207   000CF0  5021               	movf	??i2_priority_scheduler^0,w,c
  3208   000CF2  5C26               	subwf	i2priority_scheduler@i^0,w,c
  3209   000CF4  5027               	movf	(i2priority_scheduler@i+1)^0,w,c
  3210   000CF6  0A80               	xorlw	128
  3211   000CF8  6E23               	movwf	(??i2_priority_scheduler+2)^0,c
  3212   000CFA  5022               	movf	(??i2_priority_scheduler+1)^0,w,c
  3213   000CFC  0A80               	xorlw	128
  3214   000CFE  5823               	subwfb	(??i2_priority_scheduler+2)^0,w,c
  3215   000D00  A0D8               	btfss	status,0,c
  3216   000D02  EF85  F006         	goto	i2u51_41
  3217   000D06  EF87  F006         	goto	i2u51_40
  3218   000D0A                     i2u51_41:
  3219   000D0A  EF2F  F006         	goto	i2l1348
  3220   000D0E                     i2u51_40:
  3221   000D0E                     
  3222                           ;scheduler.c: 42:     return &readyQueue.readyQueue[pos_highest_priority_task];
  3223   000D0E  5025               	movf	i2priority_scheduler@pos_highest_priority_task^0,w,c
  3224   000D10  0D6A               	mullw	106
  3225   000D12  0EE7               	movlw	low _readyQueue
  3226   000D14  24F3               	addwf	243,w,c
  3227   000D16  6E1F               	movwf	?i2_priority_scheduler^0,c
  3228   000D18  0E00               	movlw	high _readyQueue
  3229   000D1A  20F4               	addwfc	prodh,w,c
  3230   000D1C  6E20               	movwf	(?i2_priority_scheduler+1)^0,c
  3231   000D1E  0012               	return		;funcret
  3232   000D20                     __end_ofi2_priority_scheduler:
  3233                           	callstack 0
  3234                           
  3235 ;; *************** function _os_task_time_decrease *****************
  3236 ;; Defined at:
  3237 ;;		line 56 in file "kernel.c"
  3238 ;; Parameters:    Size  Location     Type
  3239 ;;		None
  3240 ;; Auto vars:     Size  Location     Type
  3241 ;;  i               1    1[COMRAM] unsigned char 
  3242 ;; Return value:  Size  Location     Type
  3243 ;;                  1    wreg      void 
  3244 ;; Registers used:
  3245 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3246 ;; Tracked objects:
  3247 ;;		On entry : 0/0
  3248 ;;		On exit  : 0/0
  3249 ;;		Unchanged: 0/0
  3250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3251 ;;      Params:         0       0       0       0       0       0       0       0       0
  3252 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3253 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3254 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3255 ;;Total ram usage:        2 bytes
  3256 ;; Hardware stack levels used: 1
  3257 ;; This function calls:
  3258 ;;		Nothing
  3259 ;; This function is called by:
  3260 ;;		_ISR_TIMER_0
  3261 ;; This function uses a non-reentrant model
  3262 ;;
  3263                           
  3264                           	psect	text18
  3265   000DC0                     __ptext18:
  3266                           	callstack 0
  3267   000DC0                     _os_task_time_decrease:
  3268                           	callstack 22
  3269   000DC0                     
  3270                           ;kernel.c: 58:     for (uint8_t i = 1; i < readyQueue.readyQueueSize; i++) {
  3271   000DC0  0E01               	movlw	1
  3272   000DC2  6E20               	movwf	os_task_time_decrease@i^0,c
  3273   000DC4  EF18  F007         	goto	i2l1052
  3274   000DC8                     i2l1044:
  3275                           
  3276                           ;kernel.c: 59:         if (readyQueue.readyQueue[i].task_state == WAITING) {
  3277   000DC8  5020               	movf	os_task_time_decrease@i^0,w,c
  3278   000DCA  0D6A               	mullw	106
  3279   000DCC  0EEA               	movlw	low (_readyQueue+3)
  3280   000DCE  24F3               	addwf	243,w,c
  3281   000DD0  6ED9               	movwf	fsr2l,c
  3282   000DD2  0E00               	movlw	high (_readyQueue+3)
  3283   000DD4  20F4               	addwfc	prodh,w,c
  3284   000DD6  6EDA               	movwf	fsr2h,c
  3285   000DD8  0E02               	movlw	2
  3286   000DDA  18DE               	xorwf	postinc2,w,c
  3287   000DDC  A4D8               	btfss	status,2,c
  3288   000DDE  EFF3  F006         	goto	i2u10_41
  3289   000DE2  EFF5  F006         	goto	i2u10_40
  3290   000DE6                     i2u10_41:
  3291   000DE6  EF17  F007         	goto	i2l1050
  3292   000DEA                     i2u10_40:
  3293   000DEA                     
  3294                           ;kernel.c: 60:             readyQueue.readyQueue[i].task_time_to_waiting--;
  3295   000DEA  5020               	movf	os_task_time_decrease@i^0,w,c
  3296   000DEC  0D6A               	mullw	106
  3297   000DEE  0EEC               	movlw	low (_readyQueue+5)
  3298   000DF0  24F3               	addwf	243,w,c
  3299   000DF2  6ED9               	movwf	fsr2l,c
  3300   000DF4  0E00               	movlw	high (_readyQueue+5)
  3301   000DF6  20F4               	addwfc	prodh,w,c
  3302   000DF8  6EDA               	movwf	fsr2h,c
  3303   000DFA  06DF               	decf	indf2,f,c
  3304                           
  3305                           ;kernel.c: 61:             if (readyQueue.readyQueue[i].task_time_to_waiting == 0) {
  3306   000DFC  5020               	movf	os_task_time_decrease@i^0,w,c
  3307   000DFE  0D6A               	mullw	106
  3308   000E00  0EEC               	movlw	low (_readyQueue+5)
  3309   000E02  24F3               	addwf	243,w,c
  3310   000E04  6ED9               	movwf	fsr2l,c
  3311   000E06  0E00               	movlw	high (_readyQueue+5)
  3312   000E08  20F4               	addwfc	prodh,w,c
  3313   000E0A  6EDA               	movwf	fsr2h,c
  3314   000E0C  50DF               	movf	indf2,w,c
  3315   000E0E  A4D8               	btfss	status,2,c
  3316   000E10  EF0C  F007         	goto	i2u11_41
  3317   000E14  EF0E  F007         	goto	i2u11_40
  3318   000E18                     i2u11_41:
  3319   000E18  EF17  F007         	goto	i2l1050
  3320   000E1C                     i2u11_40:
  3321   000E1C                     
  3322                           ;kernel.c: 63:                 readyQueue.readyQueue[i].task_state = READY;
  3323   000E1C  5020               	movf	os_task_time_decrease@i^0,w,c
  3324   000E1E  0D6A               	mullw	106
  3325   000E20  0EEA               	movlw	low (_readyQueue+3)
  3326   000E22  24F3               	addwf	243,w,c
  3327   000E24  6ED9               	movwf	fsr2l,c
  3328   000E26  0E00               	movlw	high (_readyQueue+3)
  3329   000E28  20F4               	addwfc	prodh,w,c
  3330   000E2A  6EDA               	movwf	fsr2h,c
  3331   000E2C  6ADF               	clrf	indf2,c
  3332   000E2E                     i2l1050:
  3333                           
  3334                           ;kernel.c: 66:     }
  3335   000E2E  2A20               	incf	os_task_time_decrease@i^0,f,c
  3336   000E30                     i2l1052:
  3337   000E30  EE22  F0F9         	lfsr	2,_readyQueue+530
  3338   000E34  50DE               	movf	postinc2,w,c
  3339   000E36  5C20               	subwf	os_task_time_decrease@i^0,w,c
  3340   000E38  A0D8               	btfss	status,0,c
  3341   000E3A  EF21  F007         	goto	i2u12_41
  3342   000E3E  EF23  F007         	goto	i2u12_40
  3343   000E42                     i2u12_41:
  3344   000E42  EFE4  F006         	goto	i2l1044
  3345   000E46                     i2u12_40:
  3346   000E46  0012               	return		;funcret
  3347   000E48                     __end_of_os_task_time_decrease:
  3348                           	callstack 0
  3349                           
  3350                           	psect	smallconst
  3351   000800                     __psmallconst:
  3352                           	callstack 0
  3353   000800  00                 	db	0
  3354   000801  00                 	db	0	; dummy byte at the end
  3355   000800                     __smallconst    set	__psmallconst
  3356   000800                     __mediumconst   set	__psmallconst
  3357   000000                     __activetblptr  equ	0
  3358                           
  3359                           	psect	rparam
  3360   000001                     ___rparam_used  equ	1
  3361   000000                     ___param_bank   equ	0
  3362   000000                     __Lparam        equ	__Lrparam
  3363   000000                     __Hparam        equ	__Hrparam
  3364                           
  3365                           	psect	temp
  3366   00003C                     btemp:
  3367                           	callstack 0
  3368   00003C                     	ds	1
  3369   00003C                     int$flags       set	btemp
  3370   00003D                     wtemp8          set	btemp+1
  3371   00003D                     ttemp5          set	btemp+1
  3372   000040                     ttemp6          set	btemp+4
  3373   000044                     ttemp7          set	btemp+8
  3374                           tosu	equ	0xFFF
  3375                           tosh	equ	0xFFE
  3376                           tosl	equ	0xFFD
  3377                           stkptr	equ	0xFFC
  3378                           pclatu	equ	0xFFB
  3379                           pclath	equ	0xFFA
  3380                           pcl	equ	0xFF9
  3381                           tblptru	equ	0xFF8
  3382                           tblptrh	equ	0xFF7
  3383                           tblptrl	equ	0xFF6
  3384                           tablat	equ	0xFF5
  3385                           prodh	equ	0xFF4
  3386                           prodl	equ	0xFF3
  3387                           indf0	equ	0xFEF
  3388                           postinc0	equ	0xFEE
  3389                           postdec0	equ	0xFED
  3390                           preinc0	equ	0xFEC
  3391                           plusw0	equ	0xFEB
  3392                           fsr0h	equ	0xFEA
  3393                           fsr0l	equ	0xFE9
  3394                           wreg	equ	0xFE8
  3395                           indf1	equ	0xFE7
  3396                           postinc1	equ	0xFE6
  3397                           postdec1	equ	0xFE5
  3398                           preinc1	equ	0xFE4
  3399                           plusw1	equ	0xFE3
  3400                           fsr1h	equ	0xFE2
  3401                           fsr1l	equ	0xFE1
  3402                           bsr	equ	0xFE0
  3403                           indf2	equ	0xFDF
  3404                           postinc2	equ	0xFDE
  3405                           postdec2	equ	0xFDD
  3406                           preinc2	equ	0xFDC
  3407                           plusw2	equ	0xFDB
  3408                           fsr2h	equ	0xFDA
  3409                           fsr2l	equ	0xFD9
  3410                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         563
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     29      59
    BANK0           160    135     135
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    mutex$waiting_tasks	PTR struct tcb[5] size(2) Largest target is 533
		 -> readyQueue(BIGRAM[533]), NULL(NULL[0]), 

    mutex$waiting_tasks$task_func	PTR FTN()void  size(2) Largest target is 1
		 -> motors_control(), os_idle_task(), sensors_reading(), 

    mutex_init@mutex	PTR struct . size(1) Largest target is 14
		 -> mutex(COMRAM[14]), 

    mutex_init@mutex$waiting_tasks	PTR struct tcb[5] size(2) Largest target is 533
		 -> readyQueue(BIGRAM[533]), NULL(NULL[0]), 

    mutex_lock@mutex	PTR struct . size(1) Largest target is 14
		 -> mutex(COMRAM[14]), 

    mutex_lock@mutex$waiting_tasks	PTR struct tcb[5] size(2) Largest target is 533
		 -> readyQueue(BIGRAM[533]), NULL(NULL[0]), 

    mutex_lock@mutex$waiting_tasks$task_func	PTR FTN()void  size(2) Largest target is 1
		 -> motors_control(), os_idle_task(), sensors_reading(), 

    mutex_unlock@mutex	PTR struct . size(1) Largest target is 14
		 -> mutex(COMRAM[14]), 

    mutex_unlock@mutex$waiting_tasks	PTR struct tcb[5] size(2) Largest target is 533
		 -> readyQueue(BIGRAM[533]), NULL(NULL[0]), 

    mutex_unlock@task	PTR struct tcb size(2) Largest target is 533
		 -> readyQueue(BIGRAM[533]), NULL(NULL[0]), 

    mutex_unlock@task$task_func	PTR FTN()void  size(2) Largest target is 1
		 -> motors_control(), os_idle_task(), sensors_reading(), 

    new_task$task_func	PTR FTN()void  size(2) Largest target is 1
		 -> motors_control(), os_idle_task(), sensors_reading(), 

    os_create_task@task_f	PTR FTN()void  size(2) Largest target is 1
		 -> motors_control(), os_idle_task(), sensors_reading(), 

    ?_priority_scheduler$task_func	PTR FTN()void  size(2) Largest target is 1
		 -> motors_control(), os_idle_task(), sensors_reading(), 

    ?_priority_scheduler$taskRunning	PTR struct tcb size(2) Largest target is 533
		 -> readyQueue(BIGRAM[533]), NULL(NULL[0]), 

    readyQueue$readyQueue$task_func	PTR FTN()void  size(2) Largest target is 1
		 -> motors_control(), os_idle_task(), sensors_reading(), 

    readyQueue$task_func	PTR FTN()void  size(2) Largest target is 1
		 -> motors_control(), os_idle_task(), sensors_reading(), 

    readyQueue$taskRunning	PTR struct tcb size(2) Largest target is 533
		 -> readyQueue(BIGRAM[533]), readyQueue$readyQueue(BIGRAM[530]), NULL(NULL[0]), 

    readyQueue$taskRunning$task_func	PTR FTN()void  size(2) Largest target is 1
		 -> motors_control(), os_idle_task(), sensors_reading(), 

    ?_rr_scheduler$task_func	PTR FTN()void  size(2) Largest target is 1
		 -> motors_control(), os_idle_task(), sensors_reading(), 

    ?_rr_scheduler$taskRunning	PTR struct tcb size(2) Largest target is 533
		 -> readyQueue(BIGRAM[533]), NULL(NULL[0]), 

    S100f_aptos$taskRunning	PTR struct tcb size(2) Largest target is 533
		 -> readyQueue(BIGRAM[533]), NULL(NULL[0]), 

    S29tcb$task_func	PTR FTN()void  size(2) Largest target is 1
		 -> motors_control(), os_idle_task(), sensors_reading(), 

    S40$waiting_tasks	PTR struct tcb[5] size(2) Largest target is 533
		 -> readyQueue(BIGRAM[533]), NULL(NULL[0]), 

    sp__priority_scheduler	PTR struct tcb size(2) Largest target is 533
		 -> readyQueue(BIGRAM[533]), readyQueue$readyQueue(BIGRAM[530]), 

    sp__rr_scheduler	PTR struct tcb size(2) Largest target is 533
		 -> readyQueue(BIGRAM[533]), readyQueue$readyQueue(BIGRAM[530]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _os_idle_task in COMRAM

    None.

Critical Paths under _os_idle_task in COMRAM

    None.

Critical Paths under _motors_control in COMRAM

    _scheduler->_priority_scheduler

Critical Paths under _sensors_reading in COMRAM

    _sensors_reading->_mutex_unlock
    _scheduler->_priority_scheduler

Critical Paths under _motors_control in COMRAM

    _scheduler->_priority_scheduler

Critical Paths under _sensors_reading in COMRAM

    _sensors_reading->_mutex_unlock
    _scheduler->_priority_scheduler

Critical Paths under _ISR_TIMER_0 in COMRAM

    i2_scheduler->i2_priority_scheduler

Critical Paths under _main in BANK0

    _main->_os_create_task
    _config_app->_mutex_init
    _os_config->_os_create_task

Critical Paths under _os_idle_task in BANK0

    None.

Critical Paths under _os_idle_task in BANK0

    None.

Critical Paths under _motors_control in BANK0

    _scheduler->_priority_scheduler

Critical Paths under _sensors_reading in BANK0

    _sensors_reading->_mutex_lock
    _scheduler->_priority_scheduler

Critical Paths under _motors_control in BANK0

    _scheduler->_priority_scheduler

Critical Paths under _sensors_reading in BANK0

    _sensors_reading->_mutex_lock
    _scheduler->_priority_scheduler

Critical Paths under _ISR_TIMER_0 in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _os_idle_task in BANK1

    None.

Critical Paths under _os_idle_task in BANK1

    None.

Critical Paths under _motors_control in BANK1

    None.

Critical Paths under _sensors_reading in BANK1

    None.

Critical Paths under _motors_control in BANK1

    None.

Critical Paths under _sensors_reading in BANK1

    None.

Critical Paths under _ISR_TIMER_0 in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _os_idle_task in BANK2

    None.

Critical Paths under _os_idle_task in BANK2

    None.

Critical Paths under _motors_control in BANK2

    None.

Critical Paths under _sensors_reading in BANK2

    None.

Critical Paths under _motors_control in BANK2

    None.

Critical Paths under _sensors_reading in BANK2

    None.

Critical Paths under _ISR_TIMER_0 in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _os_idle_task in BANK3

    None.

Critical Paths under _os_idle_task in BANK3

    None.

Critical Paths under _motors_control in BANK3

    None.

Critical Paths under _sensors_reading in BANK3

    None.

Critical Paths under _motors_control in BANK3

    None.

Critical Paths under _sensors_reading in BANK3

    None.

Critical Paths under _ISR_TIMER_0 in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _os_idle_task in BANK4

    None.

Critical Paths under _os_idle_task in BANK4

    None.

Critical Paths under _motors_control in BANK4

    None.

Critical Paths under _sensors_reading in BANK4

    None.

Critical Paths under _motors_control in BANK4

    None.

Critical Paths under _sensors_reading in BANK4

    None.

Critical Paths under _ISR_TIMER_0 in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _os_idle_task in BANK5

    None.

Critical Paths under _os_idle_task in BANK5

    None.

Critical Paths under _motors_control in BANK5

    None.

Critical Paths under _sensors_reading in BANK5

    None.

Critical Paths under _motors_control in BANK5

    None.

Critical Paths under _sensors_reading in BANK5

    None.

Critical Paths under _ISR_TIMER_0 in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _os_idle_task in BANK6

    None.

Critical Paths under _os_idle_task in BANK6

    None.

Critical Paths under _motors_control in BANK6

    None.

Critical Paths under _sensors_reading in BANK6

    None.

Critical Paths under _motors_control in BANK6

    None.

Critical Paths under _sensors_reading in BANK6

    None.

Critical Paths under _ISR_TIMER_0 in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _os_idle_task in BANK7

    None.

Critical Paths under _os_idle_task in BANK7

    None.

Critical Paths under _motors_control in BANK7

    None.

Critical Paths under _sensors_reading in BANK7

    None.

Critical Paths under _motors_control in BANK7

    None.

Critical Paths under _sensors_reading in BANK7

    None.

Critical Paths under _ISR_TIMER_0 in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     607
                          _os_config
                     _os_create_task
                           _os_start
 ---------------------------------------------------------------------------------
 (1) _os_start                                             0     0      0      67
                    _conf_interrupts
                       _conf_timer_0
                         _config_app
 ---------------------------------------------------------------------------------
 (2) _config_app                                           0     0      0      67
                         _mutex_init
 ---------------------------------------------------------------------------------
 (3) _mutex_init                                           1     0      1      67
                                             24 BANK0      1     0      1
 ---------------------------------------------------------------------------------
 (2) _conf_timer_0                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _conf_interrupts                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _os_config                                            0     0      0     270
                     _os_create_task
 ---------------------------------------------------------------------------------
 (1) _os_create_task                                     111   108      3     270
                                             24 BANK0    111   108      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _os_idle_task                                         1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _os_idle_task                                         1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _motors_control                                       0     0      0    1356
                         _mutex_lock
                       _mutex_unlock
 ---------------------------------------------------------------------------------
 (5) _mutex_unlock                                         8     7      1     576
                                             22 COMRAM     7     7      0
                                             18 BANK0      1     0      1
 ---------------------------------------------------------------------------------
 (5) _mutex_lock                                           4     2      2     780
                                             20 BANK0      4     2      2
                          _scheduler
 ---------------------------------------------------------------------------------
 (6) _scheduler                                            0     0      0     330
                 _priority_scheduler
 ---------------------------------------------------------------------------------
 (7) _priority_scheduler                                   9     7      2     330
                                             22 COMRAM     7     7      0
                                             18 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _sensors_reading                                      0     0      0    1356
                         _mutex_lock
                       _mutex_unlock
 ---------------------------------------------------------------------------------
 (5) _mutex_unlock                                         8     7      1     576
                                             22 COMRAM     7     7      0
                                             18 BANK0      1     0      1
 ---------------------------------------------------------------------------------
 (5) _mutex_lock                                           4     2      2     780
                                             20 BANK0      4     2      2
                          _scheduler
 ---------------------------------------------------------------------------------
 (6) _scheduler                                            0     0      0     330
                 _priority_scheduler
 ---------------------------------------------------------------------------------
 (7) _priority_scheduler                                   9     7      2     330
                                             22 COMRAM     7     7      0
                                             18 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _motors_control                                       0     0      0    1356
                         _mutex_lock
                       _mutex_unlock
 ---------------------------------------------------------------------------------
 (5) _mutex_unlock                                         8     7      1     576
                                             22 COMRAM     7     7      0
                                             18 BANK0      1     0      1
 ---------------------------------------------------------------------------------
 (5) _mutex_lock                                           4     2      2     780
                                             20 BANK0      4     2      2
                          _scheduler
 ---------------------------------------------------------------------------------
 (6) _scheduler                                            0     0      0     330
                 _priority_scheduler
 ---------------------------------------------------------------------------------
 (7) _priority_scheduler                                   9     7      2     330
                                             22 COMRAM     7     7      0
                                             18 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _sensors_reading                                      0     0      0    1356
                         _mutex_lock
                       _mutex_unlock
 ---------------------------------------------------------------------------------
 (5) _mutex_unlock                                         8     7      1     576
                                             22 COMRAM     7     7      0
                                             18 BANK0      1     0      1
 ---------------------------------------------------------------------------------
 (5) _mutex_lock                                           4     2      2     780
                                             20 BANK0      4     2      2
                          _scheduler
 ---------------------------------------------------------------------------------
 (6) _scheduler                                            0     0      0     330
                 _priority_scheduler
 ---------------------------------------------------------------------------------
 (7) _priority_scheduler                                   9     7      2     330
                                             22 COMRAM     7     7      0
                                             18 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _ISR_TIMER_0                                         13    13      0     235
                                              9 COMRAM    13    13      0
              _os_task_time_decrease
                        i2_scheduler
 ---------------------------------------------------------------------------------
 (9) i2_scheduler                                          0     0      0     160
               i2_priority_scheduler
 ---------------------------------------------------------------------------------
 (10) i2_priority_scheduler                                9     7      2     160
                                              0 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 (9) _os_task_time_decrease                                2     2      0      75
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _os_config
     _os_create_task
   _os_create_task
   _os_start
     _conf_interrupts
     _conf_timer_0
     _config_app
       _mutex_init

 _os_idle_task (ROOT)

 _os_idle_task (ROOT)

 _motors_control (ROOT)
   _mutex_lock
     _scheduler
       _priority_scheduler
   _mutex_unlock

 _sensors_reading (ROOT)
   _mutex_lock
     _scheduler
       _priority_scheduler
   _mutex_unlock

 _motors_control (ROOT)
   _mutex_lock
     _scheduler
       _priority_scheduler
   _mutex_unlock

 _sensors_reading (ROOT)
   _mutex_lock
     _scheduler
       _priority_scheduler
   _mutex_unlock

 _ISR_TIMER_0 (ROOT)
   _os_task_time_decrease
   i2_scheduler
     i2_priority_scheduler

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            2047      0     533     26.0%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256      0       0      0.0%
BITBANK0           160      0       0      0.0%
BANK0              160    135     135     84.4%
BITCOMRAM           94      0       0      0.0%
COMRAM              94     29      59     62.8%
BITBIGSFRlh         91      0       0      0.0%
BITBIGSFRlll        35      0       0      0.0%
BITBIGSFRh          23      0       0      0.0%
BITBIGSFRllh         8      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0     727      0.0%


Microchip Technology PIC18 Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Mon Oct 20 20:35:00 2025

                          __end_ofi2_scheduler 102E                                             l17 0EC6  
                                           l18 0EC6                                             l45 0FA4  
                                           l48 100E                                             l82 0FFE  
                                           l94 0F28                                             l87 0EFC  
                                          l117 0E94                                            l213 0FE6  
                                          l216 1030                                            l242 0FCA  
                                          _BSR 0FE0                  __end_of_os_task_time_decrease 0E48  
                                          u481 0E82                                            _TOS 0FFD  
                                          prod 0FF3                                            wreg 0FE8  
                           _priority_scheduler 0B7A                                           l1102 0ECE  
                                         l1104 0ED0                                           l2010 0F1A  
                                         l2012 0F28                                           l2004 0E96  
                                         l2014 0F46                                           l1310 0E58  
                                         l2006 0EC2                                           l2008 0EFC  
                                         l1320 0E66                                           l1312 0E5C  
                                         l1322 0E68                                           l1314 0E60  
                                         l1306 0E4C                                           l1330 0FF4  
                                         l1324 0E8A                                           l1316 0E62  
                                         l1308 0E50                                           l1340 0FE4  
                                         l1332 0FCC                                           l1318 0E64  
                                         l1326 102E                                           l1334 0FD0  
                                         l1336 0FE0                                           l1280 0FA6  
                                         l1328 0FE8                                           l1338 0FE2  
                                         l1282 0FB2                                           l1370 1004  
                                         l1364 0F7E                                           l1284 0FBE  
                                         l1372 1008                                           l1366 0F90  
                                         l1374 100C                                           l1368 1000  
                                         i2l69 0E46                                           _TMR0 0FD6  
                                         _WREG 0FE8                                           _main 0E96  
                          ?_priority_scheduler 0072                                           fsr1h 0FE2  
                                         fsr2h 0FDA                                           indf1 0FE7  
                                         indf2 0FDF                                           fsr1l 0FE1  
                                         fsr2l 0FD9                                 ??_conf_timer_0 0078  
                                         btemp 003C                                           prodh 0FF4  
                                         prodl 0FF3                                           start 000E  
                             ??_motors_control 0035                                   ___param_bank 0000  
                                        ?_main 001F                           ??_priority_scheduler 0035  
                                        i1l250 0B78                                          i1l246 0DBE  
                                        i1l185 0C4C                                          i1l188 101E  
                                        i2l232 09D6                                          i2l235 0A70  
                                        i2l185 0D1E                                          i2l188 102C  
                                        u17_20 0EE0                                          u17_21 0EDA  
                                        u17_26 0EE2                                          _mutex 0011  
                                        plusw1 0FE3                                          plusw2 0FDB  
                                        ttemp5 003D                                          ttemp6 0040  
                                        ttemp7 0044                                          status 0FD8  
                                        wtemp8 003D                                    i2_scheduler 1020  
  priority_scheduler@pos_highest_priority_task 0039  i2priority_scheduler@pos_highest_priority_task 0025  
                              __initialization 0F54                                   ?_ISR_TIMER_0 001F  
                                 __end_of_main 0ECE                              ??_sensors_reading 003C  
                                       ??_main 00E7                                  __activetblptr 0000  
                                       i1l2000 0DB6                                         i1l1820 0B12  
                                       i1l1812 0AB6                                         i1l1822 0B1E  
                                       i1l1814 0AC0                                         i1l1824 0B46  
                                       i1l1816 0ACC                                         i1l1808 0A8C  
                                       i2l1050 0E2E                                         i2l1042 0DC0  
                                       i1l1770 0BBA                                         i1l1826 0B4A  
                                       i1l1818 0AE6                                         i2l1044 0DC8  
                                       i2l1052 0E30                                         i1l1780 0C3A  
                                       i1l1772 0BE8                                         i1l1764 0B7A  
                                       i2l1046 0DEA                                         i1l1774 0C0A  
                                       i1l1766 0B7E                                         i2l1048 0E1C  
                                       i1l1776 0C0E                                         i1l1768 0B8A  
                                       i1l1784 1010                                         u131_20 0F1A  
                                       u131_21 0F16                                         i1l1778 0C12  
                                       i2l1350 0C8E                                         i1l1990 0D80  
                                       i1l1982 0D20                                         i2l1360 0D0E  
                                       i2l1352 0CBC                                         i2l1344 0C4E  
                                       u132_20 0F46                                         i1l1992 0D84  
                                       i1l1984 0D3A                                         u132_21 0F42  
                                       i2l1354 0CDE                                         i2l1346 0C52  
                                       i2l1418 1020                                         i1l1986 0D60  
                                       i2l1356 0CE2                                         i2l1348 0C5E  
                                       i2l1540 081C                                         i1l1988 0D6C  
                                       i1l1996 0D92                                         i2l1358 0CE6  
                                       i2l1550 08A4                                         i2l1542 082C  
                                       i1l1998 0DA0                                         i2l1560 092E  
                                       i2l1552 08F4                                         i2l1544 082E  
                                       i2l1570 09D8                                         i2l1562 094E  
                                       i2l1554 0908                                         i2l1546 0832  
                                       i2l1572 09EA                                         i2l1564 098C  
                                       i2l1556 0918                                         i2l1548 0852  
                                       i2l1574 0A3A                                         i2l1566 09AE  
                                       i2l1558 092A                                         i2l1576 0A5A  
                                       i2l1568 09B0                                         i2l1578 0A6E  
                                       _STATUS 0FD8                                         _STKPTR 0FFC  
                                mutex_unlock@i 003A                                         clear_0 0F5C  
                                       clear_1 0F6E                                         isa$std 0001  
                         __end_of_conf_timer_0 0FE8                               __end_of_os_start 1010  
                                 __mediumconst 0800                          i2priority_scheduler@i 0026  
                                   __accesstop 0060                        __end_of__initialization 0F74  
                                ___rparam_used 0001                   __end_ofi2_priority_scheduler 0D20  
                               _os_create_task 0E48                                 __pcstackCOMRAM 001F  
                             os_create_task@id 007C                         __end_of_os_create_task 0E96  
                                ?_os_idle_task 001F                          _os_task_time_decrease 0DC0  
                                   _config_app 0FE8                                        i2u10_40 0DEA  
                                      i2u10_41 0DE6                                        i2u11_40 0E1C  
                                      i2u11_41 0E18                                        i2u12_40 0E46  
                                      i2u12_41 0E42                                        i2u50_40 0CBC  
                                      i2u50_41 0CB8                                        i2u51_40 0D0E  
                                      i2u51_41 0D0A                                        i2u49_40 0C8E  
                                      i2u73_40 082C                                        i2u49_41 0C8A  
                                      i2u73_41 0828                                        i2u74_40 0852  
                                      i2u74_41 084E                                        i2u75_40 0918  
                                      i2u75_41 0914                                        i2u76_40 094E  
                                      i2u76_41 094A                                        i2u77_40 09AE  
                                      i2u77_41 09AA                                        i2u78_40 0A5A  
                                      i2u78_41 0A56                                _sensors_reading 0F28  
                                 ?i2_scheduler 001F                                ?_os_create_task 0078  
                                      __Hparam 0000                              ??_conf_interrupts 0078  
                                      __Lparam 0000                                      ?_os_start 001F  
                                 __psmallconst 0800                                 ??_os_idle_task 001F  
                                      __pcinit 0F54                                        __ramtop 0800  
                                      __ptext0 0E96                                        __ptext1 1000  
                                      __ptext2 0FE8                                        __ptext3 0FA6  
                                      __ptext4 0FCC                                        __ptext5 102E  
                                      __ptext6 0F7E                                        __ptext7 0E48  
                                      __ptext8 0ECE                                        __ptext9 0EFC  
                                    _T0CONbits 0FD5                              mutex_unlock@mutex 0072  
                                   _readyQueue 00E7                            os_create_task@prior 007A  
                         i2_priority_scheduler 0C4E                            priority_scheduler@i 003A  
                            __end_of_scheduler 1020                                 __pintcode_body 0802  
                         end_of_initialization 0F74                              __end_of_os_config 0FA6  
                                      int_func 0802                                   _conf_timer_0 0FCC  
                       os_create_task@new_task 007D                                     ??_os_start 0079  
                                      postdec1 0FE5                                        postdec2 0FDD  
                                      postinc0 0FEE                                        postinc1 0FE6  
                                      postinc2 0FDE                                      _PORTDbits 0F83  
                       ?_os_task_time_decrease 001F                                     _mutex_init 0FA6  
                                   _mutex_lock 0D20                                    ?_config_app 001F  
                                    _TRISDbits 0F95                        __end_of_sensors_reading 0F54  
                        ?i2_priority_scheduler 001F                                  ?_mutex_unlock 0072  
                          start_initialization 0F54                                 ??_mutex_unlock 0035  
                         __end_of_os_idle_task 0EFC                                    __pbssBIGRAM 00E7  
                                  ?_mutex_init 0078                                    ?_mutex_lock 0074  
                                  __pbssCOMRAM 0001                         ??i2_priority_scheduler 0021  
                                __pcstackBANK0 0060                               ?_sensors_reading 001F  
                              _conf_interrupts 102E                               ??_os_create_task 007B  
                                ??_ISR_TIMER_0 0028                                      __pintcode 0008  
                               _motors_control 0EFC                                    __smallconst 0800  
                             mutex_unlock@task 0038                                      _scheduler 1010  
                                     _LATDbits 0F8C                                      _os_config 0F7E  
                                     i1u103_20 0BBA                                       i1u103_21 0BB6  
                                     i1u104_20 0BE8                                       i1u104_21 0BE4  
                                     i1u105_20 0C3A                                       i1u105_21 0C36  
                                     i1u130_20 0D3A                                       i1u130_21 0D36  
                                     i1u107_20 0AB2                                       i1u107_21 0AAE  
                                     i1u108_20 0AE6                                       i1u108_21 0AE2  
                                     i1u109_20 0B78                                       i1u109_21 0B74  
                       os_task_time_decrease@i 0020                                mutex_init@mutex 0078  
                   __end_of_priority_scheduler 0C4E                         __end_of_motors_control 0F28  
                      ??_os_task_time_decrease 001F                                mutex_lock@mutex 0074  
                         __end_of_mutex_unlock 0B7A                            __end_of_ISR_TIMER_0 0A8C  
                      __end_of_conf_interrupts 1032                                   ??_config_app 0079  
                                   ?_scheduler 001F                                     ?_os_config 001F  
                                     __Hrparam 0000                                       __Lrparam 0000  
                           __end_of_config_app 1000                                ?_motors_control 001F  
                                 _os_idle_task 0ECE                                       __ptext10 0A8C  
                                     __ptext11 0D20                                       __ptext12 1010  
                                     __ptext13 0B7A                                       __ptext14 0F28  
                                     __ptext16 1020                                       __ptext17 0C4E  
                                     __ptext18 0DC0                           os_create_task@task_f 0078  
                                     _os_start 1000                                       isa$xinst 0000  
                                  _ISR_TIMER_0 0008                                       int$flags 003C  
                             ?_conf_interrupts 001F                                   ??_mutex_init 0079  
                                 ??_mutex_lock 0076                                     _INTCONbits 0FF2  
                                     intlevel1 0000                                       intlevel2 0000  
                                ??i2_scheduler 0028                                    ??_scheduler 003C  
                                  ??_os_config 00E7                             __end_of_mutex_init 0FCC  
                           __end_of_mutex_lock 0DC0                                    _motors_data 0001  
                                 _mutex_unlock 0A8C                                  ?_conf_timer_0 001F  
           priority_scheduler@highest_priority 0038           i2priority_scheduler@highest_priority 0024  
