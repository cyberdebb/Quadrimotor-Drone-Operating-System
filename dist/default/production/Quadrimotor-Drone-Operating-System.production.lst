

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Mon Oct 20 01:39:32 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1
    22                           	psect	intcode,global,reloc=2,class=CODE,space=0,delta=1
    23                           	psect	intcode_body,global,reloc=2,class=CODE,space=0,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1,group=1
    28                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1
    29                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
    30                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    31                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    32                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    33   000000                     
    34                           ; Generated 17/01/2025 GMT
    35                           ; 
    36                           ; Copyright Â© 2025, Microchip Technology Inc. and its subsidiaries ("Microchip")
    37                           ; All rights reserved.
    38                           ; 
    39                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    40                           ; 
    41                           ; Redistribution and use in source and binary forms, with or without modification, are
    42                           ; permitted provided that the following conditions are met:
    43                           ; 
    44                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    45                           ;        conditions and the following disclaimer.
    46                           ; 
    47                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    48                           ;        of conditions and the following disclaimer in the documentation and/or other
    49                           ;        materials provided with the distribution. Publication is not required when
    50                           ;        this file is used in an embedded application.
    51                           ; 
    52                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    53                           ;        software without specific prior written permission.
    54                           ; 
    55                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    56                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    57                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    58                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    59                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    60                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    61                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    62                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    63                           ; 
    64                           ; 
    65                           ; Code-generator required, PIC18F4550 Definitions
    66                           ; 
    67                           ; SFR Addresses
    68   000FE0                     bsr             equ	4064
    69   000FE9                     fsr0            equ	4073
    70   000FEA                     fsr0h           equ	4074
    71   000FE9                     fsr0l           equ	4073
    72   000FE1                     fsr1            equ	4065
    73   000FE2                     fsr1h           equ	4066
    74   000FE1                     fsr1l           equ	4065
    75   000FD9                     fsr2            equ	4057
    76   000FDA                     fsr2h           equ	4058
    77   000FD9                     fsr2l           equ	4057
    78   000FEF                     indf0           equ	4079
    79   000FE7                     indf1           equ	4071
    80   000FDF                     indf2           equ	4063
    81   000FF2                     intcon          equ	4082
    82   000000                     nvmcon          equ	0
    83   000FF9                     pcl             equ	4089
    84   000FFA                     pclath          equ	4090
    85   000FFB                     pclatu          equ	4091
    86   000FEB                     plusw0          equ	4075
    87   000FE3                     plusw1          equ	4067
    88   000FDB                     plusw2          equ	4059
    89   000FED                     postdec0        equ	4077
    90   000FE5                     postdec1        equ	4069
    91   000FDD                     postdec2        equ	4061
    92   000FEE                     postinc0        equ	4078
    93   000FE6                     postinc1        equ	4070
    94   000FDE                     postinc2        equ	4062
    95   000FEC                     preinc0         equ	4076
    96   000FE4                     preinc1         equ	4068
    97   000FDC                     preinc2         equ	4060
    98   000FF3                     prod            equ	4083
    99   000FF4                     prodh           equ	4084
   100   000FF3                     prodl           equ	4083
   101   000FD8                     status          equ	4056
   102   000FF5                     tablat          equ	4085
   103   000FF6                     tblptr          equ	4086
   104   000FF7                     tblptrh         equ	4087
   105   000FF6                     tblptrl         equ	4086
   106   000FF8                     tblptru         equ	4088
   107   000FFD                     tosl            equ	4093
   108   000FE8                     wreg            equ	4072
   109   000F62                     SPPDATA         equ	3938	;# 
   110   000F63                     SPPCFG          equ	3939	;# 
   111   000F64                     SPPEPS          equ	3940	;# 
   112   000F65                     SPPCON          equ	3941	;# 
   113   000F66                     UFRM            equ	3942	;# 
   114   000F66                     UFRML           equ	3942	;# 
   115   000F67                     UFRMH           equ	3943	;# 
   116   000F68                     UIR             equ	3944	;# 
   117   000F69                     UIE             equ	3945	;# 
   118   000F6A                     UEIR            equ	3946	;# 
   119   000F6B                     UEIE            equ	3947	;# 
   120   000F6C                     USTAT           equ	3948	;# 
   121   000F6D                     UCON            equ	3949	;# 
   122   000F6E                     UADDR           equ	3950	;# 
   123   000F6F                     UCFG            equ	3951	;# 
   124   000F70                     UEP0            equ	3952	;# 
   125   000F71                     UEP1            equ	3953	;# 
   126   000F72                     UEP2            equ	3954	;# 
   127   000F73                     UEP3            equ	3955	;# 
   128   000F74                     UEP4            equ	3956	;# 
   129   000F75                     UEP5            equ	3957	;# 
   130   000F76                     UEP6            equ	3958	;# 
   131   000F77                     UEP7            equ	3959	;# 
   132   000F78                     UEP8            equ	3960	;# 
   133   000F79                     UEP9            equ	3961	;# 
   134   000F7A                     UEP10           equ	3962	;# 
   135   000F7B                     UEP11           equ	3963	;# 
   136   000F7C                     UEP12           equ	3964	;# 
   137   000F7D                     UEP13           equ	3965	;# 
   138   000F7E                     UEP14           equ	3966	;# 
   139   000F7F                     UEP15           equ	3967	;# 
   140   000F80                     PORTA           equ	3968	;# 
   141   000F81                     PORTB           equ	3969	;# 
   142   000F82                     PORTC           equ	3970	;# 
   143   000F83                     PORTD           equ	3971	;# 
   144   000F84                     PORTE           equ	3972	;# 
   145   000F89                     LATA            equ	3977	;# 
   146   000F8A                     LATB            equ	3978	;# 
   147   000F8B                     LATC            equ	3979	;# 
   148   000F8C                     LATD            equ	3980	;# 
   149   000F8D                     LATE            equ	3981	;# 
   150   000F92                     TRISA           equ	3986	;# 
   151   000F92                     DDRA            equ	3986	;# 
   152   000F93                     TRISB           equ	3987	;# 
   153   000F93                     DDRB            equ	3987	;# 
   154   000F94                     TRISC           equ	3988	;# 
   155   000F94                     DDRC            equ	3988	;# 
   156   000F95                     TRISD           equ	3989	;# 
   157   000F95                     DDRD            equ	3989	;# 
   158   000F96                     TRISE           equ	3990	;# 
   159   000F96                     DDRE            equ	3990	;# 
   160   000F9B                     OSCTUNE         equ	3995	;# 
   161   000F9D                     PIE1            equ	3997	;# 
   162   000F9E                     PIR1            equ	3998	;# 
   163   000F9F                     IPR1            equ	3999	;# 
   164   000FA0                     PIE2            equ	4000	;# 
   165   000FA1                     PIR2            equ	4001	;# 
   166   000FA2                     IPR2            equ	4002	;# 
   167   000FA6                     EECON1          equ	4006	;# 
   168   000FA7                     EECON2          equ	4007	;# 
   169   000FA8                     EEDATA          equ	4008	;# 
   170   000FA9                     EEADR           equ	4009	;# 
   171   000FAB                     RCSTA           equ	4011	;# 
   172   000FAB                     RCSTA1          equ	4011	;# 
   173   000FAC                     TXSTA           equ	4012	;# 
   174   000FAC                     TXSTA1          equ	4012	;# 
   175   000FAD                     TXREG           equ	4013	;# 
   176   000FAD                     TXREG1          equ	4013	;# 
   177   000FAE                     RCREG           equ	4014	;# 
   178   000FAE                     RCREG1          equ	4014	;# 
   179   000FAF                     SPBRG           equ	4015	;# 
   180   000FAF                     SPBRG1          equ	4015	;# 
   181   000FB0                     SPBRGH          equ	4016	;# 
   182   000FB1                     T3CON           equ	4017	;# 
   183   000FB2                     TMR3            equ	4018	;# 
   184   000FB2                     TMR3L           equ	4018	;# 
   185   000FB3                     TMR3H           equ	4019	;# 
   186   000FB4                     CMCON           equ	4020	;# 
   187   000FB5                     CVRCON          equ	4021	;# 
   188   000FB6                     ECCP1AS         equ	4022	;# 
   189   000FB6                     CCP1AS          equ	4022	;# 
   190   000FB7                     ECCP1DEL        equ	4023	;# 
   191   000FB7                     CCP1DEL         equ	4023	;# 
   192   000FB8                     BAUDCON         equ	4024	;# 
   193   000FB8                     BAUDCTL         equ	4024	;# 
   194   000FBA                     CCP2CON         equ	4026	;# 
   195   000FBB                     CCPR2           equ	4027	;# 
   196   000FBB                     CCPR2L          equ	4027	;# 
   197   000FBC                     CCPR2H          equ	4028	;# 
   198   000FBD                     CCP1CON         equ	4029	;# 
   199   000FBD                     ECCP1CON        equ	4029	;# 
   200   000FBE                     CCPR1           equ	4030	;# 
   201   000FBE                     CCPR1L          equ	4030	;# 
   202   000FBF                     CCPR1H          equ	4031	;# 
   203   000FC0                     ADCON2          equ	4032	;# 
   204   000FC1                     ADCON1          equ	4033	;# 
   205   000FC2                     ADCON0          equ	4034	;# 
   206   000FC3                     ADRES           equ	4035	;# 
   207   000FC3                     ADRESL          equ	4035	;# 
   208   000FC4                     ADRESH          equ	4036	;# 
   209   000FC5                     SSPCON2         equ	4037	;# 
   210   000FC6                     SSPCON1         equ	4038	;# 
   211   000FC7                     SSPSTAT         equ	4039	;# 
   212   000FC8                     SSPADD          equ	4040	;# 
   213   000FC9                     SSPBUF          equ	4041	;# 
   214   000FCA                     T2CON           equ	4042	;# 
   215   000FCB                     PR2             equ	4043	;# 
   216   000FCB                     MEMCON          equ	4043	;# 
   217   000FCC                     TMR2            equ	4044	;# 
   218   000FCD                     T1CON           equ	4045	;# 
   219   000FCE                     TMR1            equ	4046	;# 
   220   000FCE                     TMR1L           equ	4046	;# 
   221   000FCF                     TMR1H           equ	4047	;# 
   222   000FD0                     RCON            equ	4048	;# 
   223   000FD1                     WDTCON          equ	4049	;# 
   224   000FD2                     HLVDCON         equ	4050	;# 
   225   000FD2                     LVDCON          equ	4050	;# 
   226   000FD3                     OSCCON          equ	4051	;# 
   227   000FD5                     T0CON           equ	4053	;# 
   228   000FD6                     TMR0            equ	4054	;# 
   229   000FD6                     TMR0L           equ	4054	;# 
   230   000FD7                     TMR0H           equ	4055	;# 
   231   000FD8                     STATUS          equ	4056	;# 
   232   000FD9                     FSR2            equ	4057	;# 
   233   000FD9                     FSR2L           equ	4057	;# 
   234   000FDA                     FSR2H           equ	4058	;# 
   235   000FDB                     PLUSW2          equ	4059	;# 
   236   000FDC                     PREINC2         equ	4060	;# 
   237   000FDD                     POSTDEC2        equ	4061	;# 
   238   000FDE                     POSTINC2        equ	4062	;# 
   239   000FDF                     INDF2           equ	4063	;# 
   240   000FE0                     BSR             equ	4064	;# 
   241   000FE1                     FSR1            equ	4065	;# 
   242   000FE1                     FSR1L           equ	4065	;# 
   243   000FE2                     FSR1H           equ	4066	;# 
   244   000FE3                     PLUSW1          equ	4067	;# 
   245   000FE4                     PREINC1         equ	4068	;# 
   246   000FE5                     POSTDEC1        equ	4069	;# 
   247   000FE6                     POSTINC1        equ	4070	;# 
   248   000FE7                     INDF1           equ	4071	;# 
   249   000FE8                     WREG            equ	4072	;# 
   250   000FE9                     FSR0            equ	4073	;# 
   251   000FE9                     FSR0L           equ	4073	;# 
   252   000FEA                     FSR0H           equ	4074	;# 
   253   000FEB                     PLUSW0          equ	4075	;# 
   254   000FEC                     PREINC0         equ	4076	;# 
   255   000FED                     POSTDEC0        equ	4077	;# 
   256   000FEE                     POSTINC0        equ	4078	;# 
   257   000FEF                     INDF0           equ	4079	;# 
   258   000FF0                     INTCON3         equ	4080	;# 
   259   000FF1                     INTCON2         equ	4081	;# 
   260   000FF2                     INTCON          equ	4082	;# 
   261   000FF3                     PROD            equ	4083	;# 
   262   000FF3                     PRODL           equ	4083	;# 
   263   000FF4                     PRODH           equ	4084	;# 
   264   000FF5                     TABLAT          equ	4085	;# 
   265   000FF6                     TBLPTR          equ	4086	;# 
   266   000FF6                     TBLPTRL         equ	4086	;# 
   267   000FF7                     TBLPTRH         equ	4087	;# 
   268   000FF8                     TBLPTRU         equ	4088	;# 
   269   000FF9                     PCLAT           equ	4089	;# 
   270   000FF9                     PC              equ	4089	;# 
   271   000FF9                     PCL             equ	4089	;# 
   272   000FFA                     PCLATH          equ	4090	;# 
   273   000FFB                     PCLATU          equ	4091	;# 
   274   000FFC                     STKPTR          equ	4092	;# 
   275   000FFD                     TOS             equ	4093	;# 
   276   000FFD                     TOSL            equ	4093	;# 
   277   000FFE                     TOSH            equ	4094	;# 
   278   000FFF                     TOSU            equ	4095	;# 
   279   000F62                     SPPDATA         equ	3938	;# 
   280   000F63                     SPPCFG          equ	3939	;# 
   281   000F64                     SPPEPS          equ	3940	;# 
   282   000F65                     SPPCON          equ	3941	;# 
   283   000F66                     UFRM            equ	3942	;# 
   284   000F66                     UFRML           equ	3942	;# 
   285   000F67                     UFRMH           equ	3943	;# 
   286   000F68                     UIR             equ	3944	;# 
   287   000F69                     UIE             equ	3945	;# 
   288   000F6A                     UEIR            equ	3946	;# 
   289   000F6B                     UEIE            equ	3947	;# 
   290   000F6C                     USTAT           equ	3948	;# 
   291   000F6D                     UCON            equ	3949	;# 
   292   000F6E                     UADDR           equ	3950	;# 
   293   000F6F                     UCFG            equ	3951	;# 
   294   000F70                     UEP0            equ	3952	;# 
   295   000F71                     UEP1            equ	3953	;# 
   296   000F72                     UEP2            equ	3954	;# 
   297   000F73                     UEP3            equ	3955	;# 
   298   000F74                     UEP4            equ	3956	;# 
   299   000F75                     UEP5            equ	3957	;# 
   300   000F76                     UEP6            equ	3958	;# 
   301   000F77                     UEP7            equ	3959	;# 
   302   000F78                     UEP8            equ	3960	;# 
   303   000F79                     UEP9            equ	3961	;# 
   304   000F7A                     UEP10           equ	3962	;# 
   305   000F7B                     UEP11           equ	3963	;# 
   306   000F7C                     UEP12           equ	3964	;# 
   307   000F7D                     UEP13           equ	3965	;# 
   308   000F7E                     UEP14           equ	3966	;# 
   309   000F7F                     UEP15           equ	3967	;# 
   310   000F80                     PORTA           equ	3968	;# 
   311   000F81                     PORTB           equ	3969	;# 
   312   000F82                     PORTC           equ	3970	;# 
   313   000F83                     PORTD           equ	3971	;# 
   314   000F84                     PORTE           equ	3972	;# 
   315   000F89                     LATA            equ	3977	;# 
   316   000F8A                     LATB            equ	3978	;# 
   317   000F8B                     LATC            equ	3979	;# 
   318   000F8C                     LATD            equ	3980	;# 
   319   000F8D                     LATE            equ	3981	;# 
   320   000F92                     TRISA           equ	3986	;# 
   321   000F92                     DDRA            equ	3986	;# 
   322   000F93                     TRISB           equ	3987	;# 
   323   000F93                     DDRB            equ	3987	;# 
   324   000F94                     TRISC           equ	3988	;# 
   325   000F94                     DDRC            equ	3988	;# 
   326   000F95                     TRISD           equ	3989	;# 
   327   000F95                     DDRD            equ	3989	;# 
   328   000F96                     TRISE           equ	3990	;# 
   329   000F96                     DDRE            equ	3990	;# 
   330   000F9B                     OSCTUNE         equ	3995	;# 
   331   000F9D                     PIE1            equ	3997	;# 
   332   000F9E                     PIR1            equ	3998	;# 
   333   000F9F                     IPR1            equ	3999	;# 
   334   000FA0                     PIE2            equ	4000	;# 
   335   000FA1                     PIR2            equ	4001	;# 
   336   000FA2                     IPR2            equ	4002	;# 
   337   000FA6                     EECON1          equ	4006	;# 
   338   000FA7                     EECON2          equ	4007	;# 
   339   000FA8                     EEDATA          equ	4008	;# 
   340   000FA9                     EEADR           equ	4009	;# 
   341   000FAB                     RCSTA           equ	4011	;# 
   342   000FAB                     RCSTA1          equ	4011	;# 
   343   000FAC                     TXSTA           equ	4012	;# 
   344   000FAC                     TXSTA1          equ	4012	;# 
   345   000FAD                     TXREG           equ	4013	;# 
   346   000FAD                     TXREG1          equ	4013	;# 
   347   000FAE                     RCREG           equ	4014	;# 
   348   000FAE                     RCREG1          equ	4014	;# 
   349   000FAF                     SPBRG           equ	4015	;# 
   350   000FAF                     SPBRG1          equ	4015	;# 
   351   000FB0                     SPBRGH          equ	4016	;# 
   352   000FB1                     T3CON           equ	4017	;# 
   353   000FB2                     TMR3            equ	4018	;# 
   354   000FB2                     TMR3L           equ	4018	;# 
   355   000FB3                     TMR3H           equ	4019	;# 
   356   000FB4                     CMCON           equ	4020	;# 
   357   000FB5                     CVRCON          equ	4021	;# 
   358   000FB6                     ECCP1AS         equ	4022	;# 
   359   000FB6                     CCP1AS          equ	4022	;# 
   360   000FB7                     ECCP1DEL        equ	4023	;# 
   361   000FB7                     CCP1DEL         equ	4023	;# 
   362   000FB8                     BAUDCON         equ	4024	;# 
   363   000FB8                     BAUDCTL         equ	4024	;# 
   364   000FBA                     CCP2CON         equ	4026	;# 
   365   000FBB                     CCPR2           equ	4027	;# 
   366   000FBB                     CCPR2L          equ	4027	;# 
   367   000FBC                     CCPR2H          equ	4028	;# 
   368   000FBD                     CCP1CON         equ	4029	;# 
   369   000FBD                     ECCP1CON        equ	4029	;# 
   370   000FBE                     CCPR1           equ	4030	;# 
   371   000FBE                     CCPR1L          equ	4030	;# 
   372   000FBF                     CCPR1H          equ	4031	;# 
   373   000FC0                     ADCON2          equ	4032	;# 
   374   000FC1                     ADCON1          equ	4033	;# 
   375   000FC2                     ADCON0          equ	4034	;# 
   376   000FC3                     ADRES           equ	4035	;# 
   377   000FC3                     ADRESL          equ	4035	;# 
   378   000FC4                     ADRESH          equ	4036	;# 
   379   000FC5                     SSPCON2         equ	4037	;# 
   380   000FC6                     SSPCON1         equ	4038	;# 
   381   000FC7                     SSPSTAT         equ	4039	;# 
   382   000FC8                     SSPADD          equ	4040	;# 
   383   000FC9                     SSPBUF          equ	4041	;# 
   384   000FCA                     T2CON           equ	4042	;# 
   385   000FCB                     PR2             equ	4043	;# 
   386   000FCB                     MEMCON          equ	4043	;# 
   387   000FCC                     TMR2            equ	4044	;# 
   388   000FCD                     T1CON           equ	4045	;# 
   389   000FCE                     TMR1            equ	4046	;# 
   390   000FCE                     TMR1L           equ	4046	;# 
   391   000FCF                     TMR1H           equ	4047	;# 
   392   000FD0                     RCON            equ	4048	;# 
   393   000FD1                     WDTCON          equ	4049	;# 
   394   000FD2                     HLVDCON         equ	4050	;# 
   395   000FD2                     LVDCON          equ	4050	;# 
   396   000FD3                     OSCCON          equ	4051	;# 
   397   000FD5                     T0CON           equ	4053	;# 
   398   000FD6                     TMR0            equ	4054	;# 
   399   000FD6                     TMR0L           equ	4054	;# 
   400   000FD7                     TMR0H           equ	4055	;# 
   401   000FD8                     STATUS          equ	4056	;# 
   402   000FD9                     FSR2            equ	4057	;# 
   403   000FD9                     FSR2L           equ	4057	;# 
   404   000FDA                     FSR2H           equ	4058	;# 
   405   000FDB                     PLUSW2          equ	4059	;# 
   406   000FDC                     PREINC2         equ	4060	;# 
   407   000FDD                     POSTDEC2        equ	4061	;# 
   408   000FDE                     POSTINC2        equ	4062	;# 
   409   000FDF                     INDF2           equ	4063	;# 
   410   000FE0                     BSR             equ	4064	;# 
   411   000FE1                     FSR1            equ	4065	;# 
   412   000FE1                     FSR1L           equ	4065	;# 
   413   000FE2                     FSR1H           equ	4066	;# 
   414   000FE3                     PLUSW1          equ	4067	;# 
   415   000FE4                     PREINC1         equ	4068	;# 
   416   000FE5                     POSTDEC1        equ	4069	;# 
   417   000FE6                     POSTINC1        equ	4070	;# 
   418   000FE7                     INDF1           equ	4071	;# 
   419   000FE8                     WREG            equ	4072	;# 
   420   000FE9                     FSR0            equ	4073	;# 
   421   000FE9                     FSR0L           equ	4073	;# 
   422   000FEA                     FSR0H           equ	4074	;# 
   423   000FEB                     PLUSW0          equ	4075	;# 
   424   000FEC                     PREINC0         equ	4076	;# 
   425   000FED                     POSTDEC0        equ	4077	;# 
   426   000FEE                     POSTINC0        equ	4078	;# 
   427   000FEF                     INDF0           equ	4079	;# 
   428   000FF0                     INTCON3         equ	4080	;# 
   429   000FF1                     INTCON2         equ	4081	;# 
   430   000FF2                     INTCON          equ	4082	;# 
   431   000FF3                     PROD            equ	4083	;# 
   432   000FF3                     PRODL           equ	4083	;# 
   433   000FF4                     PRODH           equ	4084	;# 
   434   000FF5                     TABLAT          equ	4085	;# 
   435   000FF6                     TBLPTR          equ	4086	;# 
   436   000FF6                     TBLPTRL         equ	4086	;# 
   437   000FF7                     TBLPTRH         equ	4087	;# 
   438   000FF8                     TBLPTRU         equ	4088	;# 
   439   000FF9                     PCLAT           equ	4089	;# 
   440   000FF9                     PC              equ	4089	;# 
   441   000FF9                     PCL             equ	4089	;# 
   442   000FFA                     PCLATH          equ	4090	;# 
   443   000FFB                     PCLATU          equ	4091	;# 
   444   000FFC                     STKPTR          equ	4092	;# 
   445   000FFD                     TOS             equ	4093	;# 
   446   000FFD                     TOSL            equ	4093	;# 
   447   000FFE                     TOSH            equ	4094	;# 
   448   000FFF                     TOSU            equ	4095	;# 
   449   000F62                     SPPDATA         equ	3938	;# 
   450   000F63                     SPPCFG          equ	3939	;# 
   451   000F64                     SPPEPS          equ	3940	;# 
   452   000F65                     SPPCON          equ	3941	;# 
   453   000F66                     UFRM            equ	3942	;# 
   454   000F66                     UFRML           equ	3942	;# 
   455   000F67                     UFRMH           equ	3943	;# 
   456   000F68                     UIR             equ	3944	;# 
   457   000F69                     UIE             equ	3945	;# 
   458   000F6A                     UEIR            equ	3946	;# 
   459   000F6B                     UEIE            equ	3947	;# 
   460   000F6C                     USTAT           equ	3948	;# 
   461   000F6D                     UCON            equ	3949	;# 
   462   000F6E                     UADDR           equ	3950	;# 
   463   000F6F                     UCFG            equ	3951	;# 
   464   000F70                     UEP0            equ	3952	;# 
   465   000F71                     UEP1            equ	3953	;# 
   466   000F72                     UEP2            equ	3954	;# 
   467   000F73                     UEP3            equ	3955	;# 
   468   000F74                     UEP4            equ	3956	;# 
   469   000F75                     UEP5            equ	3957	;# 
   470   000F76                     UEP6            equ	3958	;# 
   471   000F77                     UEP7            equ	3959	;# 
   472   000F78                     UEP8            equ	3960	;# 
   473   000F79                     UEP9            equ	3961	;# 
   474   000F7A                     UEP10           equ	3962	;# 
   475   000F7B                     UEP11           equ	3963	;# 
   476   000F7C                     UEP12           equ	3964	;# 
   477   000F7D                     UEP13           equ	3965	;# 
   478   000F7E                     UEP14           equ	3966	;# 
   479   000F7F                     UEP15           equ	3967	;# 
   480   000F80                     PORTA           equ	3968	;# 
   481   000F81                     PORTB           equ	3969	;# 
   482   000F82                     PORTC           equ	3970	;# 
   483   000F83                     PORTD           equ	3971	;# 
   484   000F84                     PORTE           equ	3972	;# 
   485   000F89                     LATA            equ	3977	;# 
   486   000F8A                     LATB            equ	3978	;# 
   487   000F8B                     LATC            equ	3979	;# 
   488   000F8C                     LATD            equ	3980	;# 
   489   000F8D                     LATE            equ	3981	;# 
   490   000F92                     TRISA           equ	3986	;# 
   491   000F92                     DDRA            equ	3986	;# 
   492   000F93                     TRISB           equ	3987	;# 
   493   000F93                     DDRB            equ	3987	;# 
   494   000F94                     TRISC           equ	3988	;# 
   495   000F94                     DDRC            equ	3988	;# 
   496   000F95                     TRISD           equ	3989	;# 
   497   000F95                     DDRD            equ	3989	;# 
   498   000F96                     TRISE           equ	3990	;# 
   499   000F96                     DDRE            equ	3990	;# 
   500   000F9B                     OSCTUNE         equ	3995	;# 
   501   000F9D                     PIE1            equ	3997	;# 
   502   000F9E                     PIR1            equ	3998	;# 
   503   000F9F                     IPR1            equ	3999	;# 
   504   000FA0                     PIE2            equ	4000	;# 
   505   000FA1                     PIR2            equ	4001	;# 
   506   000FA2                     IPR2            equ	4002	;# 
   507   000FA6                     EECON1          equ	4006	;# 
   508   000FA7                     EECON2          equ	4007	;# 
   509   000FA8                     EEDATA          equ	4008	;# 
   510   000FA9                     EEADR           equ	4009	;# 
   511   000FAB                     RCSTA           equ	4011	;# 
   512   000FAB                     RCSTA1          equ	4011	;# 
   513   000FAC                     TXSTA           equ	4012	;# 
   514   000FAC                     TXSTA1          equ	4012	;# 
   515   000FAD                     TXREG           equ	4013	;# 
   516   000FAD                     TXREG1          equ	4013	;# 
   517   000FAE                     RCREG           equ	4014	;# 
   518   000FAE                     RCREG1          equ	4014	;# 
   519   000FAF                     SPBRG           equ	4015	;# 
   520   000FAF                     SPBRG1          equ	4015	;# 
   521   000FB0                     SPBRGH          equ	4016	;# 
   522   000FB1                     T3CON           equ	4017	;# 
   523   000FB2                     TMR3            equ	4018	;# 
   524   000FB2                     TMR3L           equ	4018	;# 
   525   000FB3                     TMR3H           equ	4019	;# 
   526   000FB4                     CMCON           equ	4020	;# 
   527   000FB5                     CVRCON          equ	4021	;# 
   528   000FB6                     ECCP1AS         equ	4022	;# 
   529   000FB6                     CCP1AS          equ	4022	;# 
   530   000FB7                     ECCP1DEL        equ	4023	;# 
   531   000FB7                     CCP1DEL         equ	4023	;# 
   532   000FB8                     BAUDCON         equ	4024	;# 
   533   000FB8                     BAUDCTL         equ	4024	;# 
   534   000FBA                     CCP2CON         equ	4026	;# 
   535   000FBB                     CCPR2           equ	4027	;# 
   536   000FBB                     CCPR2L          equ	4027	;# 
   537   000FBC                     CCPR2H          equ	4028	;# 
   538   000FBD                     CCP1CON         equ	4029	;# 
   539   000FBD                     ECCP1CON        equ	4029	;# 
   540   000FBE                     CCPR1           equ	4030	;# 
   541   000FBE                     CCPR1L          equ	4030	;# 
   542   000FBF                     CCPR1H          equ	4031	;# 
   543   000FC0                     ADCON2          equ	4032	;# 
   544   000FC1                     ADCON1          equ	4033	;# 
   545   000FC2                     ADCON0          equ	4034	;# 
   546   000FC3                     ADRES           equ	4035	;# 
   547   000FC3                     ADRESL          equ	4035	;# 
   548   000FC4                     ADRESH          equ	4036	;# 
   549   000FC5                     SSPCON2         equ	4037	;# 
   550   000FC6                     SSPCON1         equ	4038	;# 
   551   000FC7                     SSPSTAT         equ	4039	;# 
   552   000FC8                     SSPADD          equ	4040	;# 
   553   000FC9                     SSPBUF          equ	4041	;# 
   554   000FCA                     T2CON           equ	4042	;# 
   555   000FCB                     PR2             equ	4043	;# 
   556   000FCB                     MEMCON          equ	4043	;# 
   557   000FCC                     TMR2            equ	4044	;# 
   558   000FCD                     T1CON           equ	4045	;# 
   559   000FCE                     TMR1            equ	4046	;# 
   560   000FCE                     TMR1L           equ	4046	;# 
   561   000FCF                     TMR1H           equ	4047	;# 
   562   000FD0                     RCON            equ	4048	;# 
   563   000FD1                     WDTCON          equ	4049	;# 
   564   000FD2                     HLVDCON         equ	4050	;# 
   565   000FD2                     LVDCON          equ	4050	;# 
   566   000FD3                     OSCCON          equ	4051	;# 
   567   000FD5                     T0CON           equ	4053	;# 
   568   000FD6                     TMR0            equ	4054	;# 
   569   000FD6                     TMR0L           equ	4054	;# 
   570   000FD7                     TMR0H           equ	4055	;# 
   571   000FD8                     STATUS          equ	4056	;# 
   572   000FD9                     FSR2            equ	4057	;# 
   573   000FD9                     FSR2L           equ	4057	;# 
   574   000FDA                     FSR2H           equ	4058	;# 
   575   000FDB                     PLUSW2          equ	4059	;# 
   576   000FDC                     PREINC2         equ	4060	;# 
   577   000FDD                     POSTDEC2        equ	4061	;# 
   578   000FDE                     POSTINC2        equ	4062	;# 
   579   000FDF                     INDF2           equ	4063	;# 
   580   000FE0                     BSR             equ	4064	;# 
   581   000FE1                     FSR1            equ	4065	;# 
   582   000FE1                     FSR1L           equ	4065	;# 
   583   000FE2                     FSR1H           equ	4066	;# 
   584   000FE3                     PLUSW1          equ	4067	;# 
   585   000FE4                     PREINC1         equ	4068	;# 
   586   000FE5                     POSTDEC1        equ	4069	;# 
   587   000FE6                     POSTINC1        equ	4070	;# 
   588   000FE7                     INDF1           equ	4071	;# 
   589   000FE8                     WREG            equ	4072	;# 
   590   000FE9                     FSR0            equ	4073	;# 
   591   000FE9                     FSR0L           equ	4073	;# 
   592   000FEA                     FSR0H           equ	4074	;# 
   593   000FEB                     PLUSW0          equ	4075	;# 
   594   000FEC                     PREINC0         equ	4076	;# 
   595   000FED                     POSTDEC0        equ	4077	;# 
   596   000FEE                     POSTINC0        equ	4078	;# 
   597   000FEF                     INDF0           equ	4079	;# 
   598   000FF0                     INTCON3         equ	4080	;# 
   599   000FF1                     INTCON2         equ	4081	;# 
   600   000FF2                     INTCON          equ	4082	;# 
   601   000FF3                     PROD            equ	4083	;# 
   602   000FF3                     PRODL           equ	4083	;# 
   603   000FF4                     PRODH           equ	4084	;# 
   604   000FF5                     TABLAT          equ	4085	;# 
   605   000FF6                     TBLPTR          equ	4086	;# 
   606   000FF6                     TBLPTRL         equ	4086	;# 
   607   000FF7                     TBLPTRH         equ	4087	;# 
   608   000FF8                     TBLPTRU         equ	4088	;# 
   609   000FF9                     PCLAT           equ	4089	;# 
   610   000FF9                     PC              equ	4089	;# 
   611   000FF9                     PCL             equ	4089	;# 
   612   000FFA                     PCLATH          equ	4090	;# 
   613   000FFB                     PCLATU          equ	4091	;# 
   614   000FFC                     STKPTR          equ	4092	;# 
   615   000FFD                     TOS             equ	4093	;# 
   616   000FFD                     TOSL            equ	4093	;# 
   617   000FFE                     TOSH            equ	4094	;# 
   618   000FFF                     TOSU            equ	4095	;# 
   619   000F62                     SPPDATA         equ	3938	;# 
   620   000F63                     SPPCFG          equ	3939	;# 
   621   000F64                     SPPEPS          equ	3940	;# 
   622   000F65                     SPPCON          equ	3941	;# 
   623   000F66                     UFRM            equ	3942	;# 
   624   000F66                     UFRML           equ	3942	;# 
   625   000F67                     UFRMH           equ	3943	;# 
   626   000F68                     UIR             equ	3944	;# 
   627   000F69                     UIE             equ	3945	;# 
   628   000F6A                     UEIR            equ	3946	;# 
   629   000F6B                     UEIE            equ	3947	;# 
   630   000F6C                     USTAT           equ	3948	;# 
   631   000F6D                     UCON            equ	3949	;# 
   632   000F6E                     UADDR           equ	3950	;# 
   633   000F6F                     UCFG            equ	3951	;# 
   634   000F70                     UEP0            equ	3952	;# 
   635   000F71                     UEP1            equ	3953	;# 
   636   000F72                     UEP2            equ	3954	;# 
   637   000F73                     UEP3            equ	3955	;# 
   638   000F74                     UEP4            equ	3956	;# 
   639   000F75                     UEP5            equ	3957	;# 
   640   000F76                     UEP6            equ	3958	;# 
   641   000F77                     UEP7            equ	3959	;# 
   642   000F78                     UEP8            equ	3960	;# 
   643   000F79                     UEP9            equ	3961	;# 
   644   000F7A                     UEP10           equ	3962	;# 
   645   000F7B                     UEP11           equ	3963	;# 
   646   000F7C                     UEP12           equ	3964	;# 
   647   000F7D                     UEP13           equ	3965	;# 
   648   000F7E                     UEP14           equ	3966	;# 
   649   000F7F                     UEP15           equ	3967	;# 
   650   000F80                     PORTA           equ	3968	;# 
   651   000F81                     PORTB           equ	3969	;# 
   652   000F82                     PORTC           equ	3970	;# 
   653   000F83                     PORTD           equ	3971	;# 
   654   000F84                     PORTE           equ	3972	;# 
   655   000F89                     LATA            equ	3977	;# 
   656   000F8A                     LATB            equ	3978	;# 
   657   000F8B                     LATC            equ	3979	;# 
   658   000F8C                     LATD            equ	3980	;# 
   659   000F8D                     LATE            equ	3981	;# 
   660   000F92                     TRISA           equ	3986	;# 
   661   000F92                     DDRA            equ	3986	;# 
   662   000F93                     TRISB           equ	3987	;# 
   663   000F93                     DDRB            equ	3987	;# 
   664   000F94                     TRISC           equ	3988	;# 
   665   000F94                     DDRC            equ	3988	;# 
   666   000F95                     TRISD           equ	3989	;# 
   667   000F95                     DDRD            equ	3989	;# 
   668   000F96                     TRISE           equ	3990	;# 
   669   000F96                     DDRE            equ	3990	;# 
   670   000F9B                     OSCTUNE         equ	3995	;# 
   671   000F9D                     PIE1            equ	3997	;# 
   672   000F9E                     PIR1            equ	3998	;# 
   673   000F9F                     IPR1            equ	3999	;# 
   674   000FA0                     PIE2            equ	4000	;# 
   675   000FA1                     PIR2            equ	4001	;# 
   676   000FA2                     IPR2            equ	4002	;# 
   677   000FA6                     EECON1          equ	4006	;# 
   678   000FA7                     EECON2          equ	4007	;# 
   679   000FA8                     EEDATA          equ	4008	;# 
   680   000FA9                     EEADR           equ	4009	;# 
   681   000FAB                     RCSTA           equ	4011	;# 
   682   000FAB                     RCSTA1          equ	4011	;# 
   683   000FAC                     TXSTA           equ	4012	;# 
   684   000FAC                     TXSTA1          equ	4012	;# 
   685   000FAD                     TXREG           equ	4013	;# 
   686   000FAD                     TXREG1          equ	4013	;# 
   687   000FAE                     RCREG           equ	4014	;# 
   688   000FAE                     RCREG1          equ	4014	;# 
   689   000FAF                     SPBRG           equ	4015	;# 
   690   000FAF                     SPBRG1          equ	4015	;# 
   691   000FB0                     SPBRGH          equ	4016	;# 
   692   000FB1                     T3CON           equ	4017	;# 
   693   000FB2                     TMR3            equ	4018	;# 
   694   000FB2                     TMR3L           equ	4018	;# 
   695   000FB3                     TMR3H           equ	4019	;# 
   696   000FB4                     CMCON           equ	4020	;# 
   697   000FB5                     CVRCON          equ	4021	;# 
   698   000FB6                     ECCP1AS         equ	4022	;# 
   699   000FB6                     CCP1AS          equ	4022	;# 
   700   000FB7                     ECCP1DEL        equ	4023	;# 
   701   000FB7                     CCP1DEL         equ	4023	;# 
   702   000FB8                     BAUDCON         equ	4024	;# 
   703   000FB8                     BAUDCTL         equ	4024	;# 
   704   000FBA                     CCP2CON         equ	4026	;# 
   705   000FBB                     CCPR2           equ	4027	;# 
   706   000FBB                     CCPR2L          equ	4027	;# 
   707   000FBC                     CCPR2H          equ	4028	;# 
   708   000FBD                     CCP1CON         equ	4029	;# 
   709   000FBD                     ECCP1CON        equ	4029	;# 
   710   000FBE                     CCPR1           equ	4030	;# 
   711   000FBE                     CCPR1L          equ	4030	;# 
   712   000FBF                     CCPR1H          equ	4031	;# 
   713   000FC0                     ADCON2          equ	4032	;# 
   714   000FC1                     ADCON1          equ	4033	;# 
   715   000FC2                     ADCON0          equ	4034	;# 
   716   000FC3                     ADRES           equ	4035	;# 
   717   000FC3                     ADRESL          equ	4035	;# 
   718   000FC4                     ADRESH          equ	4036	;# 
   719   000FC5                     SSPCON2         equ	4037	;# 
   720   000FC6                     SSPCON1         equ	4038	;# 
   721   000FC7                     SSPSTAT         equ	4039	;# 
   722   000FC8                     SSPADD          equ	4040	;# 
   723   000FC9                     SSPBUF          equ	4041	;# 
   724   000FCA                     T2CON           equ	4042	;# 
   725   000FCB                     PR2             equ	4043	;# 
   726   000FCB                     MEMCON          equ	4043	;# 
   727   000FCC                     TMR2            equ	4044	;# 
   728   000FCD                     T1CON           equ	4045	;# 
   729   000FCE                     TMR1            equ	4046	;# 
   730   000FCE                     TMR1L           equ	4046	;# 
   731   000FCF                     TMR1H           equ	4047	;# 
   732   000FD0                     RCON            equ	4048	;# 
   733   000FD1                     WDTCON          equ	4049	;# 
   734   000FD2                     HLVDCON         equ	4050	;# 
   735   000FD2                     LVDCON          equ	4050	;# 
   736   000FD3                     OSCCON          equ	4051	;# 
   737   000FD5                     T0CON           equ	4053	;# 
   738   000FD6                     TMR0            equ	4054	;# 
   739   000FD6                     TMR0L           equ	4054	;# 
   740   000FD7                     TMR0H           equ	4055	;# 
   741   000FD8                     STATUS          equ	4056	;# 
   742   000FD9                     FSR2            equ	4057	;# 
   743   000FD9                     FSR2L           equ	4057	;# 
   744   000FDA                     FSR2H           equ	4058	;# 
   745   000FDB                     PLUSW2          equ	4059	;# 
   746   000FDC                     PREINC2         equ	4060	;# 
   747   000FDD                     POSTDEC2        equ	4061	;# 
   748   000FDE                     POSTINC2        equ	4062	;# 
   749   000FDF                     INDF2           equ	4063	;# 
   750   000FE0                     BSR             equ	4064	;# 
   751   000FE1                     FSR1            equ	4065	;# 
   752   000FE1                     FSR1L           equ	4065	;# 
   753   000FE2                     FSR1H           equ	4066	;# 
   754   000FE3                     PLUSW1          equ	4067	;# 
   755   000FE4                     PREINC1         equ	4068	;# 
   756   000FE5                     POSTDEC1        equ	4069	;# 
   757   000FE6                     POSTINC1        equ	4070	;# 
   758   000FE7                     INDF1           equ	4071	;# 
   759   000FE8                     WREG            equ	4072	;# 
   760   000FE9                     FSR0            equ	4073	;# 
   761   000FE9                     FSR0L           equ	4073	;# 
   762   000FEA                     FSR0H           equ	4074	;# 
   763   000FEB                     PLUSW0          equ	4075	;# 
   764   000FEC                     PREINC0         equ	4076	;# 
   765   000FED                     POSTDEC0        equ	4077	;# 
   766   000FEE                     POSTINC0        equ	4078	;# 
   767   000FEF                     INDF0           equ	4079	;# 
   768   000FF0                     INTCON3         equ	4080	;# 
   769   000FF1                     INTCON2         equ	4081	;# 
   770   000FF2                     INTCON          equ	4082	;# 
   771   000FF3                     PROD            equ	4083	;# 
   772   000FF3                     PRODL           equ	4083	;# 
   773   000FF4                     PRODH           equ	4084	;# 
   774   000FF5                     TABLAT          equ	4085	;# 
   775   000FF6                     TBLPTR          equ	4086	;# 
   776   000FF6                     TBLPTRL         equ	4086	;# 
   777   000FF7                     TBLPTRH         equ	4087	;# 
   778   000FF8                     TBLPTRU         equ	4088	;# 
   779   000FF9                     PCLAT           equ	4089	;# 
   780   000FF9                     PC              equ	4089	;# 
   781   000FF9                     PCL             equ	4089	;# 
   782   000FFA                     PCLATH          equ	4090	;# 
   783   000FFB                     PCLATU          equ	4091	;# 
   784   000FFC                     STKPTR          equ	4092	;# 
   785   000FFD                     TOS             equ	4093	;# 
   786   000FFD                     TOSL            equ	4093	;# 
   787   000FFE                     TOSH            equ	4094	;# 
   788   000FFF                     TOSU            equ	4095	;# 
   789   000F62                     SPPDATA         equ	3938	;# 
   790   000F63                     SPPCFG          equ	3939	;# 
   791   000F64                     SPPEPS          equ	3940	;# 
   792   000F65                     SPPCON          equ	3941	;# 
   793   000F66                     UFRM            equ	3942	;# 
   794   000F66                     UFRML           equ	3942	;# 
   795   000F67                     UFRMH           equ	3943	;# 
   796   000F68                     UIR             equ	3944	;# 
   797   000F69                     UIE             equ	3945	;# 
   798   000F6A                     UEIR            equ	3946	;# 
   799   000F6B                     UEIE            equ	3947	;# 
   800   000F6C                     USTAT           equ	3948	;# 
   801   000F6D                     UCON            equ	3949	;# 
   802   000F6E                     UADDR           equ	3950	;# 
   803   000F6F                     UCFG            equ	3951	;# 
   804   000F70                     UEP0            equ	3952	;# 
   805   000F71                     UEP1            equ	3953	;# 
   806   000F72                     UEP2            equ	3954	;# 
   807   000F73                     UEP3            equ	3955	;# 
   808   000F74                     UEP4            equ	3956	;# 
   809   000F75                     UEP5            equ	3957	;# 
   810   000F76                     UEP6            equ	3958	;# 
   811   000F77                     UEP7            equ	3959	;# 
   812   000F78                     UEP8            equ	3960	;# 
   813   000F79                     UEP9            equ	3961	;# 
   814   000F7A                     UEP10           equ	3962	;# 
   815   000F7B                     UEP11           equ	3963	;# 
   816   000F7C                     UEP12           equ	3964	;# 
   817   000F7D                     UEP13           equ	3965	;# 
   818   000F7E                     UEP14           equ	3966	;# 
   819   000F7F                     UEP15           equ	3967	;# 
   820   000F80                     PORTA           equ	3968	;# 
   821   000F81                     PORTB           equ	3969	;# 
   822   000F82                     PORTC           equ	3970	;# 
   823   000F83                     PORTD           equ	3971	;# 
   824   000F84                     PORTE           equ	3972	;# 
   825   000F89                     LATA            equ	3977	;# 
   826   000F8A                     LATB            equ	3978	;# 
   827   000F8B                     LATC            equ	3979	;# 
   828   000F8C                     LATD            equ	3980	;# 
   829   000F8D                     LATE            equ	3981	;# 
   830   000F92                     TRISA           equ	3986	;# 
   831   000F92                     DDRA            equ	3986	;# 
   832   000F93                     TRISB           equ	3987	;# 
   833   000F93                     DDRB            equ	3987	;# 
   834   000F94                     TRISC           equ	3988	;# 
   835   000F94                     DDRC            equ	3988	;# 
   836   000F95                     TRISD           equ	3989	;# 
   837   000F95                     DDRD            equ	3989	;# 
   838   000F96                     TRISE           equ	3990	;# 
   839   000F96                     DDRE            equ	3990	;# 
   840   000F9B                     OSCTUNE         equ	3995	;# 
   841   000F9D                     PIE1            equ	3997	;# 
   842   000F9E                     PIR1            equ	3998	;# 
   843   000F9F                     IPR1            equ	3999	;# 
   844   000FA0                     PIE2            equ	4000	;# 
   845   000FA1                     PIR2            equ	4001	;# 
   846   000FA2                     IPR2            equ	4002	;# 
   847   000FA6                     EECON1          equ	4006	;# 
   848   000FA7                     EECON2          equ	4007	;# 
   849   000FA8                     EEDATA          equ	4008	;# 
   850   000FA9                     EEADR           equ	4009	;# 
   851   000FAB                     RCSTA           equ	4011	;# 
   852   000FAB                     RCSTA1          equ	4011	;# 
   853   000FAC                     TXSTA           equ	4012	;# 
   854   000FAC                     TXSTA1          equ	4012	;# 
   855   000FAD                     TXREG           equ	4013	;# 
   856   000FAD                     TXREG1          equ	4013	;# 
   857   000FAE                     RCREG           equ	4014	;# 
   858   000FAE                     RCREG1          equ	4014	;# 
   859   000FAF                     SPBRG           equ	4015	;# 
   860   000FAF                     SPBRG1          equ	4015	;# 
   861   000FB0                     SPBRGH          equ	4016	;# 
   862   000FB1                     T3CON           equ	4017	;# 
   863   000FB2                     TMR3            equ	4018	;# 
   864   000FB2                     TMR3L           equ	4018	;# 
   865   000FB3                     TMR3H           equ	4019	;# 
   866   000FB4                     CMCON           equ	4020	;# 
   867   000FB5                     CVRCON          equ	4021	;# 
   868   000FB6                     ECCP1AS         equ	4022	;# 
   869   000FB6                     CCP1AS          equ	4022	;# 
   870   000FB7                     ECCP1DEL        equ	4023	;# 
   871   000FB7                     CCP1DEL         equ	4023	;# 
   872   000FB8                     BAUDCON         equ	4024	;# 
   873   000FB8                     BAUDCTL         equ	4024	;# 
   874   000FBA                     CCP2CON         equ	4026	;# 
   875   000FBB                     CCPR2           equ	4027	;# 
   876   000FBB                     CCPR2L          equ	4027	;# 
   877   000FBC                     CCPR2H          equ	4028	;# 
   878   000FBD                     CCP1CON         equ	4029	;# 
   879   000FBD                     ECCP1CON        equ	4029	;# 
   880   000FBE                     CCPR1           equ	4030	;# 
   881   000FBE                     CCPR1L          equ	4030	;# 
   882   000FBF                     CCPR1H          equ	4031	;# 
   883   000FC0                     ADCON2          equ	4032	;# 
   884   000FC1                     ADCON1          equ	4033	;# 
   885   000FC2                     ADCON0          equ	4034	;# 
   886   000FC3                     ADRES           equ	4035	;# 
   887   000FC3                     ADRESL          equ	4035	;# 
   888   000FC4                     ADRESH          equ	4036	;# 
   889   000FC5                     SSPCON2         equ	4037	;# 
   890   000FC6                     SSPCON1         equ	4038	;# 
   891   000FC7                     SSPSTAT         equ	4039	;# 
   892   000FC8                     SSPADD          equ	4040	;# 
   893   000FC9                     SSPBUF          equ	4041	;# 
   894   000FCA                     T2CON           equ	4042	;# 
   895   000FCB                     PR2             equ	4043	;# 
   896   000FCB                     MEMCON          equ	4043	;# 
   897   000FCC                     TMR2            equ	4044	;# 
   898   000FCD                     T1CON           equ	4045	;# 
   899   000FCE                     TMR1            equ	4046	;# 
   900   000FCE                     TMR1L           equ	4046	;# 
   901   000FCF                     TMR1H           equ	4047	;# 
   902   000FD0                     RCON            equ	4048	;# 
   903   000FD1                     WDTCON          equ	4049	;# 
   904   000FD2                     HLVDCON         equ	4050	;# 
   905   000FD2                     LVDCON          equ	4050	;# 
   906   000FD3                     OSCCON          equ	4051	;# 
   907   000FD5                     T0CON           equ	4053	;# 
   908   000FD6                     TMR0            equ	4054	;# 
   909   000FD6                     TMR0L           equ	4054	;# 
   910   000FD7                     TMR0H           equ	4055	;# 
   911   000FD8                     STATUS          equ	4056	;# 
   912   000FD9                     FSR2            equ	4057	;# 
   913   000FD9                     FSR2L           equ	4057	;# 
   914   000FDA                     FSR2H           equ	4058	;# 
   915   000FDB                     PLUSW2          equ	4059	;# 
   916   000FDC                     PREINC2         equ	4060	;# 
   917   000FDD                     POSTDEC2        equ	4061	;# 
   918   000FDE                     POSTINC2        equ	4062	;# 
   919   000FDF                     INDF2           equ	4063	;# 
   920   000FE0                     BSR             equ	4064	;# 
   921   000FE1                     FSR1            equ	4065	;# 
   922   000FE1                     FSR1L           equ	4065	;# 
   923   000FE2                     FSR1H           equ	4066	;# 
   924   000FE3                     PLUSW1          equ	4067	;# 
   925   000FE4                     PREINC1         equ	4068	;# 
   926   000FE5                     POSTDEC1        equ	4069	;# 
   927   000FE6                     POSTINC1        equ	4070	;# 
   928   000FE7                     INDF1           equ	4071	;# 
   929   000FE8                     WREG            equ	4072	;# 
   930   000FE9                     FSR0            equ	4073	;# 
   931   000FE9                     FSR0L           equ	4073	;# 
   932   000FEA                     FSR0H           equ	4074	;# 
   933   000FEB                     PLUSW0          equ	4075	;# 
   934   000FEC                     PREINC0         equ	4076	;# 
   935   000FED                     POSTDEC0        equ	4077	;# 
   936   000FEE                     POSTINC0        equ	4078	;# 
   937   000FEF                     INDF0           equ	4079	;# 
   938   000FF0                     INTCON3         equ	4080	;# 
   939   000FF1                     INTCON2         equ	4081	;# 
   940   000FF2                     INTCON          equ	4082	;# 
   941   000FF3                     PROD            equ	4083	;# 
   942   000FF3                     PRODL           equ	4083	;# 
   943   000FF4                     PRODH           equ	4084	;# 
   944   000FF5                     TABLAT          equ	4085	;# 
   945   000FF6                     TBLPTR          equ	4086	;# 
   946   000FF6                     TBLPTRL         equ	4086	;# 
   947   000FF7                     TBLPTRH         equ	4087	;# 
   948   000FF8                     TBLPTRU         equ	4088	;# 
   949   000FF9                     PCLAT           equ	4089	;# 
   950   000FF9                     PC              equ	4089	;# 
   951   000FF9                     PCL             equ	4089	;# 
   952   000FFA                     PCLATH          equ	4090	;# 
   953   000FFB                     PCLATU          equ	4091	;# 
   954   000FFC                     STKPTR          equ	4092	;# 
   955   000FFD                     TOS             equ	4093	;# 
   956   000FFD                     TOSL            equ	4093	;# 
   957   000FFE                     TOSH            equ	4094	;# 
   958   000FFF                     TOSU            equ	4095	;# 
   959   000F62                     SPPDATA         equ	3938	;# 
   960   000F63                     SPPCFG          equ	3939	;# 
   961   000F64                     SPPEPS          equ	3940	;# 
   962   000F65                     SPPCON          equ	3941	;# 
   963   000F66                     UFRM            equ	3942	;# 
   964   000F66                     UFRML           equ	3942	;# 
   965   000F67                     UFRMH           equ	3943	;# 
   966   000F68                     UIR             equ	3944	;# 
   967   000F69                     UIE             equ	3945	;# 
   968   000F6A                     UEIR            equ	3946	;# 
   969   000F6B                     UEIE            equ	3947	;# 
   970   000F6C                     USTAT           equ	3948	;# 
   971   000F6D                     UCON            equ	3949	;# 
   972   000F6E                     UADDR           equ	3950	;# 
   973   000F6F                     UCFG            equ	3951	;# 
   974   000F70                     UEP0            equ	3952	;# 
   975   000F71                     UEP1            equ	3953	;# 
   976   000F72                     UEP2            equ	3954	;# 
   977   000F73                     UEP3            equ	3955	;# 
   978   000F74                     UEP4            equ	3956	;# 
   979   000F75                     UEP5            equ	3957	;# 
   980   000F76                     UEP6            equ	3958	;# 
   981   000F77                     UEP7            equ	3959	;# 
   982   000F78                     UEP8            equ	3960	;# 
   983   000F79                     UEP9            equ	3961	;# 
   984   000F7A                     UEP10           equ	3962	;# 
   985   000F7B                     UEP11           equ	3963	;# 
   986   000F7C                     UEP12           equ	3964	;# 
   987   000F7D                     UEP13           equ	3965	;# 
   988   000F7E                     UEP14           equ	3966	;# 
   989   000F7F                     UEP15           equ	3967	;# 
   990   000F80                     PORTA           equ	3968	;# 
   991   000F81                     PORTB           equ	3969	;# 
   992   000F82                     PORTC           equ	3970	;# 
   993   000F83                     PORTD           equ	3971	;# 
   994   000F84                     PORTE           equ	3972	;# 
   995   000F89                     LATA            equ	3977	;# 
   996   000F8A                     LATB            equ	3978	;# 
   997   000F8B                     LATC            equ	3979	;# 
   998   000F8C                     LATD            equ	3980	;# 
   999   000F8D                     LATE            equ	3981	;# 
  1000   000F92                     TRISA           equ	3986	;# 
  1001   000F92                     DDRA            equ	3986	;# 
  1002   000F93                     TRISB           equ	3987	;# 
  1003   000F93                     DDRB            equ	3987	;# 
  1004   000F94                     TRISC           equ	3988	;# 
  1005   000F94                     DDRC            equ	3988	;# 
  1006   000F95                     TRISD           equ	3989	;# 
  1007   000F95                     DDRD            equ	3989	;# 
  1008   000F96                     TRISE           equ	3990	;# 
  1009   000F96                     DDRE            equ	3990	;# 
  1010   000F9B                     OSCTUNE         equ	3995	;# 
  1011   000F9D                     PIE1            equ	3997	;# 
  1012   000F9E                     PIR1            equ	3998	;# 
  1013   000F9F                     IPR1            equ	3999	;# 
  1014   000FA0                     PIE2            equ	4000	;# 
  1015   000FA1                     PIR2            equ	4001	;# 
  1016   000FA2                     IPR2            equ	4002	;# 
  1017   000FA6                     EECON1          equ	4006	;# 
  1018   000FA7                     EECON2          equ	4007	;# 
  1019   000FA8                     EEDATA          equ	4008	;# 
  1020   000FA9                     EEADR           equ	4009	;# 
  1021   000FAB                     RCSTA           equ	4011	;# 
  1022   000FAB                     RCSTA1          equ	4011	;# 
  1023   000FAC                     TXSTA           equ	4012	;# 
  1024   000FAC                     TXSTA1          equ	4012	;# 
  1025   000FAD                     TXREG           equ	4013	;# 
  1026   000FAD                     TXREG1          equ	4013	;# 
  1027   000FAE                     RCREG           equ	4014	;# 
  1028   000FAE                     RCREG1          equ	4014	;# 
  1029   000FAF                     SPBRG           equ	4015	;# 
  1030   000FAF                     SPBRG1          equ	4015	;# 
  1031   000FB0                     SPBRGH          equ	4016	;# 
  1032   000FB1                     T3CON           equ	4017	;# 
  1033   000FB2                     TMR3            equ	4018	;# 
  1034   000FB2                     TMR3L           equ	4018	;# 
  1035   000FB3                     TMR3H           equ	4019	;# 
  1036   000FB4                     CMCON           equ	4020	;# 
  1037   000FB5                     CVRCON          equ	4021	;# 
  1038   000FB6                     ECCP1AS         equ	4022	;# 
  1039   000FB6                     CCP1AS          equ	4022	;# 
  1040   000FB7                     ECCP1DEL        equ	4023	;# 
  1041   000FB7                     CCP1DEL         equ	4023	;# 
  1042   000FB8                     BAUDCON         equ	4024	;# 
  1043   000FB8                     BAUDCTL         equ	4024	;# 
  1044   000FBA                     CCP2CON         equ	4026	;# 
  1045   000FBB                     CCPR2           equ	4027	;# 
  1046   000FBB                     CCPR2L          equ	4027	;# 
  1047   000FBC                     CCPR2H          equ	4028	;# 
  1048   000FBD                     CCP1CON         equ	4029	;# 
  1049   000FBD                     ECCP1CON        equ	4029	;# 
  1050   000FBE                     CCPR1           equ	4030	;# 
  1051   000FBE                     CCPR1L          equ	4030	;# 
  1052   000FBF                     CCPR1H          equ	4031	;# 
  1053   000FC0                     ADCON2          equ	4032	;# 
  1054   000FC1                     ADCON1          equ	4033	;# 
  1055   000FC2                     ADCON0          equ	4034	;# 
  1056   000FC3                     ADRES           equ	4035	;# 
  1057   000FC3                     ADRESL          equ	4035	;# 
  1058   000FC4                     ADRESH          equ	4036	;# 
  1059   000FC5                     SSPCON2         equ	4037	;# 
  1060   000FC6                     SSPCON1         equ	4038	;# 
  1061   000FC7                     SSPSTAT         equ	4039	;# 
  1062   000FC8                     SSPADD          equ	4040	;# 
  1063   000FC9                     SSPBUF          equ	4041	;# 
  1064   000FCA                     T2CON           equ	4042	;# 
  1065   000FCB                     PR2             equ	4043	;# 
  1066   000FCB                     MEMCON          equ	4043	;# 
  1067   000FCC                     TMR2            equ	4044	;# 
  1068   000FCD                     T1CON           equ	4045	;# 
  1069   000FCE                     TMR1            equ	4046	;# 
  1070   000FCE                     TMR1L           equ	4046	;# 
  1071   000FCF                     TMR1H           equ	4047	;# 
  1072   000FD0                     RCON            equ	4048	;# 
  1073   000FD1                     WDTCON          equ	4049	;# 
  1074   000FD2                     HLVDCON         equ	4050	;# 
  1075   000FD2                     LVDCON          equ	4050	;# 
  1076   000FD3                     OSCCON          equ	4051	;# 
  1077   000FD5                     T0CON           equ	4053	;# 
  1078   000FD6                     TMR0            equ	4054	;# 
  1079   000FD6                     TMR0L           equ	4054	;# 
  1080   000FD7                     TMR0H           equ	4055	;# 
  1081   000FD8                     STATUS          equ	4056	;# 
  1082   000FD9                     FSR2            equ	4057	;# 
  1083   000FD9                     FSR2L           equ	4057	;# 
  1084   000FDA                     FSR2H           equ	4058	;# 
  1085   000FDB                     PLUSW2          equ	4059	;# 
  1086   000FDC                     PREINC2         equ	4060	;# 
  1087   000FDD                     POSTDEC2        equ	4061	;# 
  1088   000FDE                     POSTINC2        equ	4062	;# 
  1089   000FDF                     INDF2           equ	4063	;# 
  1090   000FE0                     BSR             equ	4064	;# 
  1091   000FE1                     FSR1            equ	4065	;# 
  1092   000FE1                     FSR1L           equ	4065	;# 
  1093   000FE2                     FSR1H           equ	4066	;# 
  1094   000FE3                     PLUSW1          equ	4067	;# 
  1095   000FE4                     PREINC1         equ	4068	;# 
  1096   000FE5                     POSTDEC1        equ	4069	;# 
  1097   000FE6                     POSTINC1        equ	4070	;# 
  1098   000FE7                     INDF1           equ	4071	;# 
  1099   000FE8                     WREG            equ	4072	;# 
  1100   000FE9                     FSR0            equ	4073	;# 
  1101   000FE9                     FSR0L           equ	4073	;# 
  1102   000FEA                     FSR0H           equ	4074	;# 
  1103   000FEB                     PLUSW0          equ	4075	;# 
  1104   000FEC                     PREINC0         equ	4076	;# 
  1105   000FED                     POSTDEC0        equ	4077	;# 
  1106   000FEE                     POSTINC0        equ	4078	;# 
  1107   000FEF                     INDF0           equ	4079	;# 
  1108   000FF0                     INTCON3         equ	4080	;# 
  1109   000FF1                     INTCON2         equ	4081	;# 
  1110   000FF2                     INTCON          equ	4082	;# 
  1111   000FF3                     PROD            equ	4083	;# 
  1112   000FF3                     PRODL           equ	4083	;# 
  1113   000FF4                     PRODH           equ	4084	;# 
  1114   000FF5                     TABLAT          equ	4085	;# 
  1115   000FF6                     TBLPTR          equ	4086	;# 
  1116   000FF6                     TBLPTRL         equ	4086	;# 
  1117   000FF7                     TBLPTRH         equ	4087	;# 
  1118   000FF8                     TBLPTRU         equ	4088	;# 
  1119   000FF9                     PCLAT           equ	4089	;# 
  1120   000FF9                     PC              equ	4089	;# 
  1121   000FF9                     PCL             equ	4089	;# 
  1122   000FFA                     PCLATH          equ	4090	;# 
  1123   000FFB                     PCLATU          equ	4091	;# 
  1124   000FFC                     STKPTR          equ	4092	;# 
  1125   000FFD                     TOS             equ	4093	;# 
  1126   000FFD                     TOSL            equ	4093	;# 
  1127   000FFE                     TOSH            equ	4094	;# 
  1128   000FFF                     TOSU            equ	4095	;# 
  1129   000F62                     SPPDATA         equ	3938	;# 
  1130   000F63                     SPPCFG          equ	3939	;# 
  1131   000F64                     SPPEPS          equ	3940	;# 
  1132   000F65                     SPPCON          equ	3941	;# 
  1133   000F66                     UFRM            equ	3942	;# 
  1134   000F66                     UFRML           equ	3942	;# 
  1135   000F67                     UFRMH           equ	3943	;# 
  1136   000F68                     UIR             equ	3944	;# 
  1137   000F69                     UIE             equ	3945	;# 
  1138   000F6A                     UEIR            equ	3946	;# 
  1139   000F6B                     UEIE            equ	3947	;# 
  1140   000F6C                     USTAT           equ	3948	;# 
  1141   000F6D                     UCON            equ	3949	;# 
  1142   000F6E                     UADDR           equ	3950	;# 
  1143   000F6F                     UCFG            equ	3951	;# 
  1144   000F70                     UEP0            equ	3952	;# 
  1145   000F71                     UEP1            equ	3953	;# 
  1146   000F72                     UEP2            equ	3954	;# 
  1147   000F73                     UEP3            equ	3955	;# 
  1148   000F74                     UEP4            equ	3956	;# 
  1149   000F75                     UEP5            equ	3957	;# 
  1150   000F76                     UEP6            equ	3958	;# 
  1151   000F77                     UEP7            equ	3959	;# 
  1152   000F78                     UEP8            equ	3960	;# 
  1153   000F79                     UEP9            equ	3961	;# 
  1154   000F7A                     UEP10           equ	3962	;# 
  1155   000F7B                     UEP11           equ	3963	;# 
  1156   000F7C                     UEP12           equ	3964	;# 
  1157   000F7D                     UEP13           equ	3965	;# 
  1158   000F7E                     UEP14           equ	3966	;# 
  1159   000F7F                     UEP15           equ	3967	;# 
  1160   000F80                     PORTA           equ	3968	;# 
  1161   000F81                     PORTB           equ	3969	;# 
  1162   000F82                     PORTC           equ	3970	;# 
  1163   000F83                     PORTD           equ	3971	;# 
  1164   000F84                     PORTE           equ	3972	;# 
  1165   000F89                     LATA            equ	3977	;# 
  1166   000F8A                     LATB            equ	3978	;# 
  1167   000F8B                     LATC            equ	3979	;# 
  1168   000F8C                     LATD            equ	3980	;# 
  1169   000F8D                     LATE            equ	3981	;# 
  1170   000F92                     TRISA           equ	3986	;# 
  1171   000F92                     DDRA            equ	3986	;# 
  1172   000F93                     TRISB           equ	3987	;# 
  1173   000F93                     DDRB            equ	3987	;# 
  1174   000F94                     TRISC           equ	3988	;# 
  1175   000F94                     DDRC            equ	3988	;# 
  1176   000F95                     TRISD           equ	3989	;# 
  1177   000F95                     DDRD            equ	3989	;# 
  1178   000F96                     TRISE           equ	3990	;# 
  1179   000F96                     DDRE            equ	3990	;# 
  1180   000F9B                     OSCTUNE         equ	3995	;# 
  1181   000F9D                     PIE1            equ	3997	;# 
  1182   000F9E                     PIR1            equ	3998	;# 
  1183   000F9F                     IPR1            equ	3999	;# 
  1184   000FA0                     PIE2            equ	4000	;# 
  1185   000FA1                     PIR2            equ	4001	;# 
  1186   000FA2                     IPR2            equ	4002	;# 
  1187   000FA6                     EECON1          equ	4006	;# 
  1188   000FA7                     EECON2          equ	4007	;# 
  1189   000FA8                     EEDATA          equ	4008	;# 
  1190   000FA9                     EEADR           equ	4009	;# 
  1191   000FAB                     RCSTA           equ	4011	;# 
  1192   000FAB                     RCSTA1          equ	4011	;# 
  1193   000FAC                     TXSTA           equ	4012	;# 
  1194   000FAC                     TXSTA1          equ	4012	;# 
  1195   000FAD                     TXREG           equ	4013	;# 
  1196   000FAD                     TXREG1          equ	4013	;# 
  1197   000FAE                     RCREG           equ	4014	;# 
  1198   000FAE                     RCREG1          equ	4014	;# 
  1199   000FAF                     SPBRG           equ	4015	;# 
  1200   000FAF                     SPBRG1          equ	4015	;# 
  1201   000FB0                     SPBRGH          equ	4016	;# 
  1202   000FB1                     T3CON           equ	4017	;# 
  1203   000FB2                     TMR3            equ	4018	;# 
  1204   000FB2                     TMR3L           equ	4018	;# 
  1205   000FB3                     TMR3H           equ	4019	;# 
  1206   000FB4                     CMCON           equ	4020	;# 
  1207   000FB5                     CVRCON          equ	4021	;# 
  1208   000FB6                     ECCP1AS         equ	4022	;# 
  1209   000FB6                     CCP1AS          equ	4022	;# 
  1210   000FB7                     ECCP1DEL        equ	4023	;# 
  1211   000FB7                     CCP1DEL         equ	4023	;# 
  1212   000FB8                     BAUDCON         equ	4024	;# 
  1213   000FB8                     BAUDCTL         equ	4024	;# 
  1214   000FBA                     CCP2CON         equ	4026	;# 
  1215   000FBB                     CCPR2           equ	4027	;# 
  1216   000FBB                     CCPR2L          equ	4027	;# 
  1217   000FBC                     CCPR2H          equ	4028	;# 
  1218   000FBD                     CCP1CON         equ	4029	;# 
  1219   000FBD                     ECCP1CON        equ	4029	;# 
  1220   000FBE                     CCPR1           equ	4030	;# 
  1221   000FBE                     CCPR1L          equ	4030	;# 
  1222   000FBF                     CCPR1H          equ	4031	;# 
  1223   000FC0                     ADCON2          equ	4032	;# 
  1224   000FC1                     ADCON1          equ	4033	;# 
  1225   000FC2                     ADCON0          equ	4034	;# 
  1226   000FC3                     ADRES           equ	4035	;# 
  1227   000FC3                     ADRESL          equ	4035	;# 
  1228   000FC4                     ADRESH          equ	4036	;# 
  1229   000FC5                     SSPCON2         equ	4037	;# 
  1230   000FC6                     SSPCON1         equ	4038	;# 
  1231   000FC7                     SSPSTAT         equ	4039	;# 
  1232   000FC8                     SSPADD          equ	4040	;# 
  1233   000FC9                     SSPBUF          equ	4041	;# 
  1234   000FCA                     T2CON           equ	4042	;# 
  1235   000FCB                     PR2             equ	4043	;# 
  1236   000FCB                     MEMCON          equ	4043	;# 
  1237   000FCC                     TMR2            equ	4044	;# 
  1238   000FCD                     T1CON           equ	4045	;# 
  1239   000FCE                     TMR1            equ	4046	;# 
  1240   000FCE                     TMR1L           equ	4046	;# 
  1241   000FCF                     TMR1H           equ	4047	;# 
  1242   000FD0                     RCON            equ	4048	;# 
  1243   000FD1                     WDTCON          equ	4049	;# 
  1244   000FD2                     HLVDCON         equ	4050	;# 
  1245   000FD2                     LVDCON          equ	4050	;# 
  1246   000FD3                     OSCCON          equ	4051	;# 
  1247   000FD5                     T0CON           equ	4053	;# 
  1248   000FD6                     TMR0            equ	4054	;# 
  1249   000FD6                     TMR0L           equ	4054	;# 
  1250   000FD7                     TMR0H           equ	4055	;# 
  1251   000FD8                     STATUS          equ	4056	;# 
  1252   000FD9                     FSR2            equ	4057	;# 
  1253   000FD9                     FSR2L           equ	4057	;# 
  1254   000FDA                     FSR2H           equ	4058	;# 
  1255   000FDB                     PLUSW2          equ	4059	;# 
  1256   000FDC                     PREINC2         equ	4060	;# 
  1257   000FDD                     POSTDEC2        equ	4061	;# 
  1258   000FDE                     POSTINC2        equ	4062	;# 
  1259   000FDF                     INDF2           equ	4063	;# 
  1260   000FE0                     BSR             equ	4064	;# 
  1261   000FE1                     FSR1            equ	4065	;# 
  1262   000FE1                     FSR1L           equ	4065	;# 
  1263   000FE2                     FSR1H           equ	4066	;# 
  1264   000FE3                     PLUSW1          equ	4067	;# 
  1265   000FE4                     PREINC1         equ	4068	;# 
  1266   000FE5                     POSTDEC1        equ	4069	;# 
  1267   000FE6                     POSTINC1        equ	4070	;# 
  1268   000FE7                     INDF1           equ	4071	;# 
  1269   000FE8                     WREG            equ	4072	;# 
  1270   000FE9                     FSR0            equ	4073	;# 
  1271   000FE9                     FSR0L           equ	4073	;# 
  1272   000FEA                     FSR0H           equ	4074	;# 
  1273   000FEB                     PLUSW0          equ	4075	;# 
  1274   000FEC                     PREINC0         equ	4076	;# 
  1275   000FED                     POSTDEC0        equ	4077	;# 
  1276   000FEE                     POSTINC0        equ	4078	;# 
  1277   000FEF                     INDF0           equ	4079	;# 
  1278   000FF0                     INTCON3         equ	4080	;# 
  1279   000FF1                     INTCON2         equ	4081	;# 
  1280   000FF2                     INTCON          equ	4082	;# 
  1281   000FF3                     PROD            equ	4083	;# 
  1282   000FF3                     PRODL           equ	4083	;# 
  1283   000FF4                     PRODH           equ	4084	;# 
  1284   000FF5                     TABLAT          equ	4085	;# 
  1285   000FF6                     TBLPTR          equ	4086	;# 
  1286   000FF6                     TBLPTRL         equ	4086	;# 
  1287   000FF7                     TBLPTRH         equ	4087	;# 
  1288   000FF8                     TBLPTRU         equ	4088	;# 
  1289   000FF9                     PCLAT           equ	4089	;# 
  1290   000FF9                     PC              equ	4089	;# 
  1291   000FF9                     PCL             equ	4089	;# 
  1292   000FFA                     PCLATH          equ	4090	;# 
  1293   000FFB                     PCLATU          equ	4091	;# 
  1294   000FFC                     STKPTR          equ	4092	;# 
  1295   000FFD                     TOS             equ	4093	;# 
  1296   000FFD                     TOSL            equ	4093	;# 
  1297   000FFE                     TOSH            equ	4094	;# 
  1298   000FFF                     TOSU            equ	4095	;# 
  1299   000FFD                     _TOS            set	4093
  1300   000FD6                     _TMR0           set	4054
  1301   000FD5                     _T0CONbits      set	4053
  1302   000FFC                     _STKPTR         set	4092
  1303   000FE8                     _WREG           set	4072
  1304   000FD8                     _STATUS         set	4056
  1305   000FE0                     _BSR            set	4064
  1306   000F83                     _PORTDbits      set	3971
  1307   000F8C                     _LATDbits       set	3980
  1308   000F95                     _TRISDbits      set	3989
  1309   000FF2                     _INTCONbits     set	4082
  1310                           
  1311                           ; #config settings
  1312                           
  1313                           	psect	cinit
  1314   000DEE                     __pcinit:
  1315                           	callstack 0
  1316   000DEE                     start_initialization:
  1317                           	callstack 0
  1318   000DEE                     __initialization:
  1319                           	callstack 0
  1320                           
  1321                           ; Clear objects allocated to BIGRAM (533 bytes)
  1322   000DEE  EE00  F0CB         	lfsr	0,__pbssBIGRAM
  1323   000DF2  EE12 F015          	lfsr	1,533
  1324   000DF6                     clear_0:
  1325   000DF6  6AEE               	clrf	postinc0,c
  1326   000DF8  50E5               	movf	postdec1,w,c
  1327   000DFA  50E1               	movf	fsr1l,w,c
  1328   000DFC  E1FC               	bnz	clear_0
  1329   000DFE  50E2               	movf	fsr1h,w,c
  1330   000E00  E1FA               	bnz	clear_0
  1331                           
  1332                           ; Clear objects allocated to COMRAM (2 bytes)
  1333   000E02  6A1B               	clrf	(__pbssCOMRAM+1)& (0+255),c
  1334   000E04  6A1A               	clrf	__pbssCOMRAM& (0+255),c
  1335   000E06                     end_of_initialization:
  1336                           	callstack 0
  1337   000E06                     __end_of__initialization:
  1338                           	callstack 0
  1339   000E06  901C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1340   000E08  921C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1341   000E0A  0100               	movlb	0
  1342   000E0C  EF9F  F006         	goto	_main	;jump to C main() function
  1343                           
  1344                           	psect	bssCOMRAM
  1345   00001A                     __pbssCOMRAM:
  1346                           	callstack 0
  1347   00001A                     _x:
  1348                           	callstack 0
  1349   00001A                     	ds	2
  1350                           
  1351                           	psect	bssBIGRAM
  1352   0000CB                     __pbssBIGRAM:
  1353                           	callstack 0
  1354   0000CB                     _readyQueue:
  1355                           	callstack 0
  1356   0000CB                     	ds	533
  1357                           
  1358                           	psect	cstackBANK0
  1359   000060                     __pcstackBANK0:
  1360                           	callstack 0
  1361   000060                     os_create_task@id:
  1362                           	callstack 0
  1363                           
  1364                           ; 1 bytes @ 0x0
  1365   000060                     	ds	1
  1366   000061                     os_create_task@new_task:
  1367                           	callstack 0
  1368                           
  1369                           ; 106 bytes @ 0x1
  1370   000061                     	ds	106
  1371                           
  1372                           	psect	cstackCOMRAM
  1373   000001                     __pcstackCOMRAM:
  1374                           	callstack 0
  1375   000001                     ?___awmod:
  1376                           	callstack 0
  1377   000001                     os_task_pos@task:
  1378                           	callstack 0
  1379   000001                     ___awmod@dividend:
  1380                           	callstack 0
  1381   000001                     ??_os_idle_task:
  1382   000001                     
  1383                           ; 1 bytes @ 0x0
  1384   000001                     	ds	1
  1385   000002                     os_task_time_decrease@i:
  1386                           	callstack 0
  1387                           
  1388                           ; 1 bytes @ 0x1
  1389   000002                     	ds	1
  1390   000003                     ___awmod@divisor:
  1391                           	callstack 0
  1392   000003                     
  1393                           ; 1 bytes @ 0x2
  1394   000003                     	ds	2
  1395   000005                     os_task_pos@i:
  1396                           	callstack 0
  1397   000005                     ___awmod@counter:
  1398                           	callstack 0
  1399   000005                     
  1400                           ; 1 bytes @ 0x4
  1401   000005                     	ds	1
  1402   000006                     ___awmod@sign:
  1403                           	callstack 0
  1404                           
  1405                           ; 1 bytes @ 0x5
  1406   000006                     	ds	1
  1407   000007                     ?_rr_scheduler:
  1408                           	callstack 0
  1409                           
  1410                           ; 2 bytes @ 0x6
  1411   000007                     	ds	2
  1412   000009                     ??_rr_scheduler:
  1413                           
  1414                           ; 1 bytes @ 0x8
  1415   000009                     	ds	2
  1416   00000B                     rr_scheduler@idle_selected:
  1417                           	callstack 0
  1418   00000B                     mutex_lock@m:
  1419                           	callstack 0
  1420   00000B                     mutex_unlock@m:
  1421                           	callstack 0
  1422   00000B                     
  1423                           ; 1 bytes @ 0xA
  1424   00000B                     	ds	1
  1425   00000C                     rr_scheduler@pos_task_running:
  1426                           	callstack 0
  1427   00000C                     
  1428                           ; 1 bytes @ 0xB
  1429   00000C                     	ds	1
  1430   00000D                     ??_ISR_TIMER_0:
  1431                           
  1432                           ; 1 bytes @ 0xC
  1433   00000D                     	ds	1
  1434   00000E                     os_create_task@task_f:
  1435                           	callstack 0
  1436   00000E                     
  1437                           ; 1 bytes @ 0xD
  1438   00000E                     	ds	2
  1439   000010                     os_create_task@prior:
  1440                           	callstack 0
  1441                           
  1442                           ; 1 bytes @ 0xF
  1443   000010                     	ds	1
  1444   000011                     ??_os_create_task:
  1445                           
  1446                           ; 1 bytes @ 0x10
  1447   000011                     	ds	1
  1448   000012                     
  1449                           ; 1 bytes @ 0x11
  1450   000012                     	ds	8
  1451                           
  1452 ;;
  1453 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1454 ;;
  1455 ;; *************** function _main *****************
  1456 ;; Defined at:
  1457 ;;		line 7 in file "main.c"
  1458 ;; Parameters:    Size  Location     Type
  1459 ;;		None
  1460 ;; Auto vars:     Size  Location     Type
  1461 ;;		None
  1462 ;; Return value:  Size  Location     Type
  1463 ;;                  2   16[None  ] int 
  1464 ;; Registers used:
  1465 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1466 ;; Tracked objects:
  1467 ;;		On entry : 0/0
  1468 ;;		On exit  : 0/0
  1469 ;;		Unchanged: 0/0
  1470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1471 ;;      Params:         0       0       0       0       0       0       0       0       0
  1472 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1473 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1474 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1475 ;;Total ram usage:        0 bytes
  1476 ;; Hardware stack levels required when called: 8
  1477 ;; This function calls:
  1478 ;;		_os_config
  1479 ;;		_os_create_task
  1480 ;;		_os_start
  1481 ;; This function is called by:
  1482 ;;		Startup code after reset
  1483 ;; This function uses a non-reentrant model
  1484 ;;
  1485                           
  1486                           	psect	text0
  1487   000D3E                     __ptext0:
  1488                           	callstack 0
  1489   000D3E                     _main:
  1490                           	callstack 23
  1491   000D3E                     
  1492                           ;main.c: 9:     os_config();
  1493   000D3E  ECE4  F006         	call	_os_config	;wreg free
  1494                           
  1495                           ;main.c: 12:     os_create_task(100, motors_control, 5);
  1496   000D42  0E4A               	movlw	low _motors_control
  1497   000D44  6E0E               	movwf	os_create_task@task_f^0,c
  1498   000D46  0E0E               	movlw	high _motors_control
  1499   000D48  6E0F               	movwf	(os_create_task@task_f+1)^0,c
  1500   000D4A  0E05               	movlw	5
  1501   000D4C  6E10               	movwf	os_create_task@prior^0,c
  1502   000D4E  0E64               	movlw	100
  1503   000D50  EC78  F006         	call	_os_create_task
  1504                           
  1505                           ;main.c: 13:     os_create_task(101, sensors_reading, 5);
  1506   000D54  0E58               	movlw	low _sensors_reading
  1507   000D56  6E0E               	movwf	os_create_task@task_f^0,c
  1508   000D58  0E0E               	movlw	high _sensors_reading
  1509   000D5A  6E0F               	movwf	(os_create_task@task_f+1)^0,c
  1510   000D5C  0E05               	movlw	5
  1511   000D5E  6E10               	movwf	os_create_task@prior^0,c
  1512   000D60  0E65               	movlw	101
  1513   000D62  EC78  F006         	call	_os_create_task
  1514   000D66                     
  1515                           ;main.c: 15:     os_start();
  1516   000D66  EC16  F007         	call	_os_start	;wreg free
  1517   000D6A                     l17:
  1518   000D6A  EFB5  F006         	goto	l17
  1519   000D6E  EF07  F000         	goto	start
  1520   000D72                     __end_of_main:
  1521                           	callstack 0
  1522                           
  1523 ;; *************** function _os_start *****************
  1524 ;; Defined at:
  1525 ;;		line 22 in file "kernel.c"
  1526 ;; Parameters:    Size  Location     Type
  1527 ;;		None
  1528 ;; Auto vars:     Size  Location     Type
  1529 ;;		None
  1530 ;; Return value:  Size  Location     Type
  1531 ;;                  1    wreg      void 
  1532 ;; Registers used:
  1533 ;;		wreg, status,2, cstack
  1534 ;; Tracked objects:
  1535 ;;		On entry : 0/0
  1536 ;;		On exit  : 0/0
  1537 ;;		Unchanged: 0/0
  1538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1539 ;;      Params:         0       0       0       0       0       0       0       0       0
  1540 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1541 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1542 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1543 ;;Total ram usage:        0 bytes
  1544 ;; Hardware stack levels used: 1
  1545 ;; Hardware stack levels required when called: 7
  1546 ;; This function calls:
  1547 ;;		_conf_interrupts
  1548 ;;		_conf_timer_0
  1549 ;;		_config_app
  1550 ;; This function is called by:
  1551 ;;		_main
  1552 ;; This function uses a non-reentrant model
  1553 ;;
  1554                           
  1555                           	psect	text1
  1556   000E2C                     __ptext1:
  1557                           	callstack 0
  1558   000E2C                     _os_start:
  1559                           	callstack 23
  1560   000E2C                     
  1561                           ;kernel.c: 25:     conf_interrupts();
  1562   000E2C  EC40  F007         	call	_conf_interrupts	;wreg free
  1563                           
  1564                           ;kernel.c: 28:     config_app();
  1565   000E30  EC1E  F007         	call	_config_app	;wreg free
  1566   000E34                     
  1567                           ;kernel.c: 30:     conf_timer_0();
  1568   000E34  EC08  F007         	call	_conf_timer_0	;wreg free
  1569   000E38                     
  1570                           ;kernel.c: 33:     (INTCONbits.GIE = 1);
  1571   000E38  8EF2               	bsf	242,7,c	;volatile
  1572   000E3A  0012               	return		;funcret
  1573   000E3C                     __end_of_os_start:
  1574                           	callstack 0
  1575                           
  1576 ;; *************** function _config_app *****************
  1577 ;; Defined at:
  1578 ;;		line 6 in file "user_app.c"
  1579 ;; Parameters:    Size  Location     Type
  1580 ;;		None
  1581 ;; Auto vars:     Size  Location     Type
  1582 ;;		None
  1583 ;; Return value:  Size  Location     Type
  1584 ;;                  1    wreg      void 
  1585 ;; Registers used:
  1586 ;;		None
  1587 ;; Tracked objects:
  1588 ;;		On entry : 0/0
  1589 ;;		On exit  : 0/0
  1590 ;;		Unchanged: 0/0
  1591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1592 ;;      Params:         0       0       0       0       0       0       0       0       0
  1593 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1594 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1595 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1596 ;;Total ram usage:        0 bytes
  1597 ;; Hardware stack levels used: 1
  1598 ;; Hardware stack levels required when called: 6
  1599 ;; This function calls:
  1600 ;;		Nothing
  1601 ;; This function is called by:
  1602 ;;		_os_start
  1603 ;; This function uses a non-reentrant model
  1604 ;;
  1605                           
  1606                           	psect	text2
  1607   000E3C                     __ptext2:
  1608                           	callstack 0
  1609   000E3C                     _config_app:
  1610                           	callstack 23
  1611   000E3C                     
  1612                           ;user_app.c: 7:     TRISDbits.RD0 = 0;
  1613   000E3C  9095               	bcf	149,0,c	;volatile
  1614                           
  1615                           ;user_app.c: 8:     TRISDbits.RD1 = 0;
  1616   000E3E  9295               	bcf	149,1,c	;volatile
  1617                           
  1618                           ;user_app.c: 9:     TRISDbits.RD2 = 0;
  1619   000E40  9495               	bcf	149,2,c	;volatile
  1620                           
  1621                           ;user_app.c: 10:     TRISDbits.RD3 = 0;
  1622   000E42  9695               	bcf	149,3,c	;volatile
  1623                           
  1624                           ;user_app.c: 11:     TRISDbits.RD4 = 1;
  1625   000E44  8895               	bsf	149,4,c	;volatile
  1626                           
  1627                           ;user_app.c: 12:     TRISDbits.RD5 = 1;
  1628   000E46  8A95               	bsf	149,5,c	;# 
  1629   000E48  0012               	return		;funcret
  1630   000E4A                     __end_of_config_app:
  1631                           	callstack 0
  1632                           
  1633 ;; *************** function _conf_timer_0 *****************
  1634 ;; Defined at:
  1635 ;;		line 7 in file "hardware.c"
  1636 ;; Parameters:    Size  Location     Type
  1637 ;;		None
  1638 ;; Auto vars:     Size  Location     Type
  1639 ;;		None
  1640 ;; Return value:  Size  Location     Type
  1641 ;;                  1    wreg      void 
  1642 ;; Registers used:
  1643 ;;		wreg, status,2
  1644 ;; Tracked objects:
  1645 ;;		On entry : 0/0
  1646 ;;		On exit  : 0/0
  1647 ;;		Unchanged: 0/0
  1648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1649 ;;      Params:         0       0       0       0       0       0       0       0       0
  1650 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1651 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1652 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1653 ;;Total ram usage:        0 bytes
  1654 ;; Hardware stack levels used: 1
  1655 ;; Hardware stack levels required when called: 6
  1656 ;; This function calls:
  1657 ;;		Nothing
  1658 ;; This function is called by:
  1659 ;;		_os_start
  1660 ;; This function uses a non-reentrant model
  1661 ;;
  1662                           
  1663                           	psect	text3
  1664   000E10                     __ptext3:
  1665                           	callstack 0
  1666   000E10                     _conf_timer_0:
  1667                           	callstack 23
  1668   000E10                     
  1669                           ;hardware.c: 10:     T0CONbits.T0CS = 0;
  1670   000E10  9AD5               	bcf	213,5,c	;volatile
  1671                           
  1672                           ;hardware.c: 11:     T0CONbits.PSA = 0;
  1673   000E12  96D5               	bcf	213,3,c	;volatile
  1674   000E14                     
  1675                           ;hardware.c: 12:     T0CONbits.T0PS = 0b110;
  1676   000E14  50D5               	movf	213,w,c	;volatile
  1677   000E16  0BF8               	andlw	-8
  1678   000E18  0906               	iorlw	6
  1679   000E1A  6ED5               	movwf	213,c	;volatile
  1680                           
  1681                           ;hardware.c: 13:     TMR0 = 128;
  1682   000E1C  0E00               	movlw	0
  1683   000E1E  6ED7               	movwf	215,c	;volatile
  1684   000E20  0E80               	movlw	128
  1685   000E22  6ED6               	movwf	214,c	;volatile
  1686   000E24                     
  1687                           ;hardware.c: 14:     INTCONbits.TMR0IE = 1;
  1688   000E24  8AF2               	bsf	242,5,c	;volatile
  1689   000E26                     
  1690                           ;hardware.c: 15:     INTCONbits.TMR0IF = 0;
  1691   000E26  94F2               	bcf	242,2,c	;volatile
  1692   000E28                     
  1693                           ;hardware.c: 16:     T0CONbits.TMR0ON = 1;
  1694   000E28  8ED5               	bsf	213,7,c	;volatile
  1695   000E2A  0012               	return		;funcret
  1696   000E2C                     __end_of_conf_timer_0:
  1697                           	callstack 0
  1698                           
  1699 ;; *************** function _conf_interrupts *****************
  1700 ;; Defined at:
  1701 ;;		line 19 in file "hardware.c"
  1702 ;; Parameters:    Size  Location     Type
  1703 ;;		None
  1704 ;; Auto vars:     Size  Location     Type
  1705 ;;		None
  1706 ;; Return value:  Size  Location     Type
  1707 ;;                  1    wreg      void 
  1708 ;; Registers used:
  1709 ;;		None
  1710 ;; Tracked objects:
  1711 ;;		On entry : 0/0
  1712 ;;		On exit  : 0/0
  1713 ;;		Unchanged: 0/0
  1714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1715 ;;      Params:         0       0       0       0       0       0       0       0       0
  1716 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1717 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1718 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1719 ;;Total ram usage:        0 bytes
  1720 ;; Hardware stack levels used: 1
  1721 ;; Hardware stack levels required when called: 6
  1722 ;; This function calls:
  1723 ;;		Nothing
  1724 ;; This function is called by:
  1725 ;;		_os_start
  1726 ;; This function uses a non-reentrant model
  1727 ;;
  1728                           
  1729                           	psect	text4
  1730   000E80                     __ptext4:
  1731                           	callstack 0
  1732   000E80                     _conf_interrupts:
  1733                           	callstack 23
  1734   000E80                     
  1735                           ;hardware.c: 21:     INTCONbits.PEIE = 1;
  1736   000E80  8CF2               	bsf	242,6,c	;volatile
  1737   000E82  0012               	return		;funcret
  1738   000E84                     __end_of_conf_interrupts:
  1739                           	callstack 0
  1740                           
  1741 ;; *************** function _os_config *****************
  1742 ;; Defined at:
  1743 ;;		line 11 in file "kernel.c"
  1744 ;; Parameters:    Size  Location     Type
  1745 ;;		None
  1746 ;; Auto vars:     Size  Location     Type
  1747 ;;		None
  1748 ;; Return value:  Size  Location     Type
  1749 ;;                  1    wreg      void 
  1750 ;; Registers used:
  1751 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1752 ;; Tracked objects:
  1753 ;;		On entry : 0/0
  1754 ;;		On exit  : 0/0
  1755 ;;		Unchanged: 0/0
  1756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1757 ;;      Params:         0       0       0       0       0       0       0       0       0
  1758 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1759 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1760 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1761 ;;Total ram usage:        0 bytes
  1762 ;; Hardware stack levels used: 1
  1763 ;; Hardware stack levels required when called: 7
  1764 ;; This function calls:
  1765 ;;		_os_create_task
  1766 ;; This function is called by:
  1767 ;;		_main
  1768 ;; This function uses a non-reentrant model
  1769 ;;
  1770                           
  1771                           	psect	text5
  1772   000DC8                     __ptext5:
  1773                           	callstack 0
  1774   000DC8                     _os_config:
  1775                           	callstack 23
  1776   000DC8                     
  1777                           ;kernel.c: 13:     readyQueue.readyQueueSize = 0;
  1778   000DC8  0E00               	movlw	0
  1779   000DCA  CFE8 F2DD          	movff	wreg,_readyQueue+530
  1780                           
  1781                           ;kernel.c: 14:     readyQueue.taskRunning = 0;
  1782   000DCE  0E00               	movlw	0
  1783   000DD0  CFE8 F2DE          	movff	wreg,_readyQueue+531
  1784   000DD4  0E00               	movlw	0
  1785   000DD6  CFE8 F2DF          	movff	wreg,_readyQueue+532
  1786   000DDA                     
  1787                           ;kernel.c: 17:     os_create_task(0, os_idle_task, 1);
  1788   000DDA  0E72               	movlw	low _os_idle_task
  1789   000DDC  6E0E               	movwf	os_create_task@task_f^0,c
  1790   000DDE  0E0D               	movlw	high _os_idle_task
  1791   000DE0  6E0F               	movwf	(os_create_task@task_f+1)^0,c
  1792   000DE2  0E01               	movlw	1
  1793   000DE4  6E10               	movwf	os_create_task@prior^0,c
  1794   000DE6  0E00               	movlw	0
  1795   000DE8  EC78  F006         	call	_os_create_task	;# 
  1796   000DEC  0012               	return		;funcret
  1797   000DEE                     __end_of_os_config:
  1798                           	callstack 0
  1799                           
  1800 ;; *************** function _os_create_task *****************
  1801 ;; Defined at:
  1802 ;;		line 9 in file "syscall.c"
  1803 ;; Parameters:    Size  Location     Type
  1804 ;;  id              1    wreg     unsigned char 
  1805 ;;  task_f          2   13[COMRAM] PTR FTN()void 
  1806 ;;		 -> os_idle_task(1), sensors_reading(1), motors_control(1), 
  1807 ;;  prior           1   15[COMRAM] unsigned char 
  1808 ;; Auto vars:     Size  Location     Type
  1809 ;;  id              1    0[BANK0 ] unsigned char 
  1810 ;;  new_task      106    1[BANK0 ] struct tcb
  1811 ;; Return value:  Size  Location     Type
  1812 ;;                  1    wreg      void 
  1813 ;; Registers used:
  1814 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1815 ;; Tracked objects:
  1816 ;;		On entry : 0/0
  1817 ;;		On exit  : 0/0
  1818 ;;		Unchanged: 0/0
  1819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1820 ;;      Params:         3       0       0       0       0       0       0       0       0
  1821 ;;      Locals:         0     107       0       0       0       0       0       0       0
  1822 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1823 ;;      Totals:         4     107       0       0       0       0       0       0       0
  1824 ;;Total ram usage:      111 bytes
  1825 ;; Hardware stack levels used: 1
  1826 ;; Hardware stack levels required when called: 6
  1827 ;; This function calls:
  1828 ;;		Nothing
  1829 ;; This function is called by:
  1830 ;;		_main
  1831 ;;		_os_config
  1832 ;; This function uses a non-reentrant model
  1833 ;;
  1834                           
  1835                           	psect	text6
  1836   000CF0                     __ptext6:
  1837                           	callstack 0
  1838   000CF0                     _os_create_task:
  1839                           	callstack 24
  1840                           
  1841                           ;incstack = 0
  1842                           ;os_create_task@id stored from wreg
  1843   000CF0  0100               	movlb	0	; () banked
  1844   000CF2  6F60               	movwf	os_create_task@id& (0+255),b
  1845   000CF4                     
  1846                           ;syscall.c: 9: void os_create_task(uint8_t id, f_ptr task_f, uint8_t prior);syscall.c: 1
      +                          0: {;syscall.c: 11:     tcb_t new_task;;syscall.c: 13:     new_task.task_id = id;
  1847   000CF4  C060  F061         	movff	os_create_task@id,os_create_task@new_task
  1848   000CF8                     
  1849                           ;syscall.c: 14:     new_task.task_func = task_f;
  1850   000CF8  C00E  F062         	movff	os_create_task@task_f,os_create_task@new_task+1
  1851   000CFC  C00F  F063         	movff	os_create_task@task_f+1,os_create_task@new_task+2
  1852   000D00                     
  1853                           ;syscall.c: 15:     new_task.task_priority = prior;
  1854   000D00  C010  F065         	movff	os_create_task@prior,os_create_task@new_task+4
  1855   000D04                     
  1856                           ;syscall.c: 16:     new_task.task_state = READY;
  1857   000D04  0100               	movlb	0	; () banked
  1858   000D06  6B64               	clrf	(os_create_task@new_task+3)& (0+255),b
  1859   000D08                     
  1860                           ; BSR set to: 0
  1861                           ;syscall.c: 18:     new_task.BSR_reg = 0;
  1862   000D08  6B67               	clrf	(os_create_task@new_task+6)& (0+255),b
  1863   000D0A                     
  1864                           ; BSR set to: 0
  1865                           ;syscall.c: 19:     new_task.STATUS_reg = 0;
  1866   000D0A  6B69               	clrf	(os_create_task@new_task+8)& (0+255),b
  1867   000D0C                     
  1868                           ; BSR set to: 0
  1869                           ;syscall.c: 20:     new_task.WORK_reg = 0;
  1870   000D0C  6B68               	clrf	(os_create_task@new_task+7)& (0+255),b
  1871   000D0E                     
  1872                           ; BSR set to: 0
  1873                           ;syscall.c: 21:     new_task.task_sp = 0;
  1874   000D0E  6BCA               	clrf	(os_create_task@new_task+105)& (0+255),b
  1875   000D10                     
  1876                           ; BSR set to: 0
  1877                           ;syscall.c: 24:     readyQueue.readyQueue[readyQueue.readyQueueSize++] = new_task;
  1878   000D10  EE20  F061         	lfsr	2,os_create_task@new_task
  1879   000D14  C2DD  F011         	movff	_readyQueue+530,??_os_create_task
  1880   000D18  5011               	movf	??_os_create_task^0,w,c
  1881   000D1A  0D6A               	mullw	106
  1882   000D1C  0ECB               	movlw	low _readyQueue
  1883   000D1E  24F3               	addwf	243,w,c
  1884   000D20  6EE1               	movwf	fsr1l,c
  1885   000D22  0E00               	movlw	high _readyQueue
  1886   000D24  20F4               	addwfc	prodh,w,c
  1887   000D26  6EE2               	movwf	fsr1h,c
  1888   000D28  0E69               	movlw	105
  1889   000D2A                     u481:
  1890   000D2A  CFDB FFE3          	movff	plusw2,plusw1
  1891   000D2E  06E8               	decf	wreg,f,c
  1892   000D30  E2FC               	bc	u481
  1893   000D32                     
  1894                           ; BSR set to: 0
  1895   000D32  C2DD  FFE8         	movff	_readyQueue+530,wreg
  1896   000D36  0F01               	addlw	1
  1897   000D38  CFE8 F2DD          	movff	wreg,_readyQueue+530
  1898   000D3C                     
  1899                           ; BSR set to: 0
  1900   000D3C  0012               	return		;funcret
  1901   000D3E                     __end_of_os_create_task:
  1902                           	callstack 0
  1903                           
  1904 ;; *************** function _os_idle_task *****************
  1905 ;; Defined at:
  1906 ;;		line 37 in file "kernel.c"
  1907 ;; Parameters:    Size  Location     Type
  1908 ;;		None
  1909 ;; Auto vars:     Size  Location     Type
  1910 ;;		None
  1911 ;; Return value:  Size  Location     Type
  1912 ;;                  1    wreg      void 
  1913 ;; Registers used:
  1914 ;;		wreg, status,2, status,0
  1915 ;; Tracked objects:
  1916 ;;		On entry : 0/0
  1917 ;;		On exit  : 0/0
  1918 ;;		Unchanged: 0/0
  1919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1920 ;;      Params:         0       0       0       0       0       0       0       0       0
  1921 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1922 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1923 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1924 ;;Total ram usage:        1 bytes
  1925 ;; Hardware stack levels used: 1
  1926 ;; Hardware stack levels required when called: 4
  1927 ;; This function calls:
  1928 ;;		Nothing
  1929 ;; This function is called by:
  1930 ;;		_os_config
  1931 ;;		_rr_scheduler
  1932 ;; This function uses a non-reentrant model
  1933 ;;
  1934                           
  1935                           	psect	text7
  1936   000D72                     __ptext7:
  1937                           	callstack 0
  1938   000D72                     _os_idle_task:
  1939                           	callstack 24
  1940   000D72                     
  1941                           ;kernel.c: 39:     TRISDbits.RD3 = 0;
  1942   000D72  9695               	bcf	149,3,c	;volatile
  1943   000D74                     l1054:
  1944                           
  1945                           ;kernel.c: 43:         LATDbits.LD3 = ~PORTDbits.RD3;
  1946   000D74  B683               	btfsc	131,3,c	;volatile
  1947   000D76  EFBF  F006         	goto	u18_21
  1948   000D7A  EFC2  F006         	goto	u18_20
  1949   000D7E                     u18_21:
  1950   000D7E  0E01               	movlw	1
  1951   000D80  EFC3  F006         	goto	u18_26
  1952   000D84                     u18_20:
  1953   000D84  0E00               	movlw	0
  1954   000D86                     u18_26:
  1955   000D86  0AFF               	xorlw	255
  1956   000D88  6E01               	movwf	??_os_idle_task^0,c
  1957   000D8A  4601               	rlncf	??_os_idle_task^0,f,c
  1958   000D8C  4601               	rlncf	??_os_idle_task^0,f,c
  1959   000D8E  4601               	rlncf	??_os_idle_task^0,f,c
  1960   000D90  508C               	movf	140,w,c	;volatile
  1961   000D92  1801               	xorwf	??_os_idle_task^0,w,c
  1962   000D94  0BF7               	andlw	-9
  1963   000D96  1801               	xorwf	??_os_idle_task^0,w,c
  1964   000D98  6E8C               	movwf	140,c	;volatile
  1965   000D9A  EFBA  F006         	goto	l1054
  1966   000D9E  0012               	return		;funcret
  1967   000DA0                     __end_of_os_idle_task:
  1968                           	callstack 0
  1969                           
  1970 ;; *************** function _motors_control *****************
  1971 ;; Defined at:
  1972 ;;		line 17 in file "user_app.c"
  1973 ;; Parameters:    Size  Location     Type
  1974 ;;		None
  1975 ;; Auto vars:     Size  Location     Type
  1976 ;;		None
  1977 ;; Return value:  Size  Location     Type
  1978 ;;                  1    wreg      void 
  1979 ;; Registers used:
  1980 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1981 ;; Tracked objects:
  1982 ;;		On entry : 0/0
  1983 ;;		On exit  : 0/0
  1984 ;;		Unchanged: 0/0
  1985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1986 ;;      Params:         0       0       0       0       0       0       0       0       0
  1987 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1988 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1989 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1990 ;;Total ram usage:        0 bytes
  1991 ;; Hardware stack levels used: 1
  1992 ;; Hardware stack levels required when called: 5
  1993 ;; This function calls:
  1994 ;;		_mutex_lock
  1995 ;;		_mutex_unlock
  1996 ;; This function is called by:
  1997 ;;		_main
  1998 ;; This function uses a non-reentrant model
  1999 ;;
  2000                           
  2001                           	psect	text8
  2002   000E4A                     __ptext8:
  2003                           	callstack 0
  2004   000E4A                     _motors_control:
  2005                           	callstack 23
  2006   000E4A                     
  2007                           ;user_app.c: 18:     mutex_lock(&x);
  2008   000E4A  0E1A               	movlw	low _x
  2009   000E4C  6E0B               	movwf	mutex_lock@m^0,c
  2010   000E4E  ECD0  F006         	call	_mutex_lock	;wreg free
  2011   000E52                     l83:
  2012   000E52  EF29  F007         	goto	l83
  2013   000E56  0012               	return		;funcret
  2014   000E58                     __end_of_motors_control:
  2015                           	callstack 0
  2016                           
  2017 ;; *************** function _mutex_unlock *****************
  2018 ;; Defined at:
  2019 ;;		line 10 in file "mutex.c"
  2020 ;; Parameters:    Size  Location     Type
  2021 ;;  m               1   10[COMRAM] PTR struct .
  2022 ;;		 -> x(2), 
  2023 ;; Auto vars:     Size  Location     Type
  2024 ;;		None
  2025 ;; Return value:  Size  Location     Type
  2026 ;;                  1    wreg      void 
  2027 ;; Registers used:
  2028 ;;		wreg, fsr2l, fsr2h, status,2
  2029 ;; Tracked objects:
  2030 ;;		On entry : 0/0
  2031 ;;		On exit  : 0/0
  2032 ;;		Unchanged: 0/0
  2033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2034 ;;      Params:         1       0       0       0       0       0       0       0       0
  2035 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2036 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2037 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2038 ;;Total ram usage:        1 bytes
  2039 ;; Hardware stack levels used: 1
  2040 ;; Hardware stack levels required when called: 4
  2041 ;; This function calls:
  2042 ;;		Nothing
  2043 ;; This function is called by:
  2044 ;;		_motors_control
  2045 ;;		_sensors_reading
  2046 ;; This function uses a non-reentrant model
  2047 ;;
  2048                           
  2049                           	psect	text9
  2050   000E74                     __ptext9:
  2051                           	callstack 0
  2052   000E74                     _mutex_unlock:
  2053                           	callstack 23
  2054   000E74                     
  2055                           ;mutex.c: 11:     m->locked = 0;
  2056   000E74  500B               	movf	mutex_unlock@m^0,w,c
  2057   000E76  6ED9               	movwf	fsr2l,c
  2058   000E78  6ADA               	clrf	fsr2h,c
  2059   000E7A  6ADE               	clrf	postinc2,c
  2060   000E7C  6ADD               	clrf	postdec2,c
  2061   000E7E  0012               	return		;funcret
  2062   000E80                     __end_of_mutex_unlock:
  2063                           	callstack 0
  2064                           
  2065 ;; *************** function _mutex_lock *****************
  2066 ;; Defined at:
  2067 ;;		line 4 in file "mutex.c"
  2068 ;; Parameters:    Size  Location     Type
  2069 ;;  m               1   10[COMRAM] PTR struct .
  2070 ;;		 -> x(2), 
  2071 ;; Auto vars:     Size  Location     Type
  2072 ;;		None
  2073 ;; Return value:  Size  Location     Type
  2074 ;;                  1    wreg      void 
  2075 ;; Registers used:
  2076 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2077 ;; Tracked objects:
  2078 ;;		On entry : 0/0
  2079 ;;		On exit  : 0/0
  2080 ;;		Unchanged: 0/0
  2081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2082 ;;      Params:         1       0       0       0       0       0       0       0       0
  2083 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2084 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2085 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2086 ;;Total ram usage:        3 bytes
  2087 ;; Hardware stack levels used: 1
  2088 ;; Hardware stack levels required when called: 4
  2089 ;; This function calls:
  2090 ;;		Nothing
  2091 ;; This function is called by:
  2092 ;;		_motors_control
  2093 ;;		_sensors_reading
  2094 ;; This function uses a non-reentrant model
  2095 ;;
  2096                           
  2097                           	psect	text10
  2098   000DA0                     __ptext10:
  2099                           	callstack 0
  2100   000DA0                     _mutex_lock:
  2101                           	callstack 23
  2102   000DA0                     
  2103                           ;mutex.c: 5:     if (m->locked == 0) {
  2104   000DA0  500B               	movf	mutex_lock@m^0,w,c
  2105   000DA2  6ED9               	movwf	fsr2l,c
  2106   000DA4  6ADA               	clrf	fsr2h,c
  2107   000DA6  50DE               	movf	postinc2,w,c
  2108   000DA8  10DE               	iorwf	postinc2,w,c
  2109   000DAA  A4D8               	btfss	status,2,c
  2110   000DAC  EFDA  F006         	goto	i1u53_21
  2111   000DB0  EFDC  F006         	goto	i1u53_20
  2112   000DB4                     i1u53_21:
  2113   000DB4  EFE3  F006         	goto	i1l229
  2114   000DB8                     i1u53_20:
  2115   000DB8                     
  2116                           ;mutex.c: 6:         m->locked = 1;
  2117   000DB8  500B               	movf	mutex_lock@m^0,w,c
  2118   000DBA  6ED9               	movwf	fsr2l,c
  2119   000DBC  6ADA               	clrf	fsr2h,c
  2120   000DBE  0E01               	movlw	1
  2121   000DC0  6EDE               	movwf	postinc2,c
  2122   000DC2  0E00               	movlw	0
  2123   000DC4  6EDD               	movwf	postdec2,c
  2124   000DC6                     i1l229:
  2125   000DC6  0012               	return		;funcret
  2126   000DC8                     __end_of_mutex_lock:
  2127                           	callstack 0
  2128                           
  2129 ;; *************** function _sensors_reading *****************
  2130 ;; Defined at:
  2131 ;;		line 25 in file "user_app.c"
  2132 ;; Parameters:    Size  Location     Type
  2133 ;;		None
  2134 ;; Auto vars:     Size  Location     Type
  2135 ;;		None
  2136 ;; Return value:  Size  Location     Type
  2137 ;;                  1    wreg      void 
  2138 ;; Registers used:
  2139 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2140 ;; Tracked objects:
  2141 ;;		On entry : 0/0
  2142 ;;		On exit  : 0/0
  2143 ;;		Unchanged: 0/0
  2144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2145 ;;      Params:         0       0       0       0       0       0       0       0       0
  2146 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2147 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2148 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2149 ;;Total ram usage:        0 bytes
  2150 ;; Hardware stack levels used: 1
  2151 ;; Hardware stack levels required when called: 5
  2152 ;; This function calls:
  2153 ;;		_mutex_lock
  2154 ;;		_mutex_unlock
  2155 ;; This function is called by:
  2156 ;;		_main
  2157 ;; This function uses a non-reentrant model
  2158 ;;
  2159                           
  2160                           	psect	text11
  2161   000E58                     __ptext11:
  2162                           	callstack 0
  2163   000E58                     _sensors_reading:
  2164                           	callstack 23
  2165   000E58                     
  2166                           ;user_app.c: 26:     mutex_lock(&x);
  2167   000E58  0E1A               	movlw	low _x
  2168   000E5A  6E0B               	movwf	mutex_lock@m^0,c
  2169   000E5C  ECD0  F006         	call	_mutex_lock	;wreg free
  2170   000E60                     l89:
  2171   000E60  EF30  F007         	goto	l89
  2172   000E64  0012               	return		;funcret
  2173   000E66                     __end_of_sensors_reading:
  2174                           	callstack 0
  2175                           
  2176 ;; *************** function _ISR_TIMER_0 *****************
  2177 ;; Defined at:
  2178 ;;		line 25 in file "hardware.c"
  2179 ;; Parameters:    Size  Location     Type
  2180 ;;		None
  2181 ;; Auto vars:     Size  Location     Type
  2182 ;;		None
  2183 ;; Return value:  Size  Location     Type
  2184 ;;                  1    wreg      void 
  2185 ;; Registers used:
  2186 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2187 ;; Tracked objects:
  2188 ;;		On entry : 0/0
  2189 ;;		On exit  : 0/0
  2190 ;;		Unchanged: 0/0
  2191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2192 ;;      Params:         0       0       0       0       0       0       0       0       0
  2193 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2194 ;;      Temps:         13       0       0       0       0       0       0       0       0
  2195 ;;      Totals:        13       0       0       0       0       0       0       0       0
  2196 ;;Total ram usage:       13 bytes
  2197 ;; Hardware stack levels used: 1
  2198 ;; Hardware stack levels required when called: 3
  2199 ;; This function calls:
  2200 ;;		_os_task_time_decrease
  2201 ;;		_scheduler
  2202 ;; This function is called by:
  2203 ;;		Interrupt level 2
  2204 ;; This function uses a non-reentrant model
  2205 ;;
  2206                           
  2207                           	psect	intcode
  2208   000008                     __pintcode:
  2209                           	callstack 0
  2210   000008                     _ISR_TIMER_0:
  2211                           	callstack 23
  2212                           
  2213                           ;incstack = 0
  2214   000008  821C               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  2215   00000A  ED01  F004         	call	int_func,f	;refresh shadow registers
  2216                           
  2217                           	psect	intcode_body
  2218   000802                     __pintcode_body:
  2219                           	callstack 23
  2220   000802                     int_func:
  2221                           	callstack 23
  2222   000802  0006               	pop		; remove dummy address from shadow register refresh
  2223   000804  CFE1 F014          	movff	fsr1l,??_ISR_TIMER_0+7
  2224   000808  CFE2 F015          	movff	fsr1h,??_ISR_TIMER_0+8
  2225   00080C  CFD9 F016          	movff	fsr2l,??_ISR_TIMER_0+9
  2226   000810  CFDA F017          	movff	fsr2h,??_ISR_TIMER_0+10
  2227   000814  CFF3 F018          	movff	prodl,??_ISR_TIMER_0+11
  2228   000818  CFF4 F019          	movff	prodh,??_ISR_TIMER_0+12
  2229   00081C                     
  2230                           ;hardware.c: 27:     (INTCONbits.GIE = 0);
  2231   00081C  9EF2               	bcf	242,7,c	;volatile
  2232                           
  2233                           ;hardware.c: 29:     if (INTCONbits.TMR0IF == 1) {
  2234   00081E  A4F2               	btfss	242,2,c	;volatile
  2235   000820  EF14  F004         	goto	i2u69_41
  2236   000824  EF16  F004         	goto	i2u69_40
  2237   000828                     i2u69_41:
  2238   000828  EF37  F005         	goto	i2l1482
  2239   00082C                     i2u69_40:
  2240   00082C                     
  2241                           ;hardware.c: 30:         INTCONbits.TMR0IF = 0;
  2242   00082C  94F2               	bcf	242,2,c	;volatile
  2243   00082E                     
  2244                           ;hardware.c: 33:         os_task_time_decrease();
  2245   00082E  EC0C  F006         	call	_os_task_time_decrease	;wreg free
  2246   000832  EE22  F0DE         	lfsr	2,_readyQueue+531
  2247   000836  EE10 F003          	lfsr	1,3
  2248   00083A  50DE               	movf	postinc2,w,c
  2249   00083C  26E1               	addwf	fsr1l,f,c
  2250   00083E  50DD               	movf	postdec2,w,c
  2251   000840  22E2               	addwfc	fsr1h,f,c
  2252   000842  04E6               	decf	postinc1,w,c
  2253   000844  A4D8               	btfss	status,2,c
  2254   000846  EF27  F004         	goto	i2u70_41
  2255   00084A  EF29  F004         	goto	i2u70_40
  2256   00084E                     i2u70_41:
  2257   00084E  EF95  F004         	goto	i2l1462
  2258   000852                     i2u70_40:
  2259   000852  EE22  F0DE         	lfsr	2,_readyQueue+531
  2260   000856  EE10 F006          	lfsr	1,6
  2261   00085A  50DE               	movf	postinc2,w,c
  2262   00085C  26E1               	addwf	fsr1l,f,c
  2263   00085E  50DD               	movf	postdec2,w,c
  2264   000860  22E2               	addwfc	fsr1h,f,c
  2265   000862  CFE0 FFE7          	movff	bsr,indf1	;volatile
  2266   000866  EE22  F0DE         	lfsr	2,_readyQueue+531
  2267   00086A  EE10 F008          	lfsr	1,8
  2268   00086E  50DE               	movf	postinc2,w,c
  2269   000870  26E1               	addwf	fsr1l,f,c
  2270   000872  50DD               	movf	postdec2,w,c
  2271   000874  22E2               	addwfc	fsr1h,f,c
  2272   000876  CFD8 FFE7          	movff	status,indf1	;volatile
  2273   00087A  EE22  F0DE         	lfsr	2,_readyQueue+531
  2274   00087E  EE10 F007          	lfsr	1,7
  2275   000882  50DE               	movf	postinc2,w,c
  2276   000884  26E1               	addwf	fsr1l,f,c
  2277   000886  50DD               	movf	postdec2,w,c
  2278   000888  22E2               	addwfc	fsr1h,f,c
  2279   00088A  CFE8 FFE7          	movff	wreg,indf1	;volatile
  2280   00088E  EE22  F0DE         	lfsr	2,_readyQueue+531
  2281   000892  EE10 F069          	lfsr	1,105
  2282   000896  50DE               	movf	postinc2,w,c
  2283   000898  26E1               	addwf	fsr1l,f,c
  2284   00089A  50DD               	movf	postdec2,w,c
  2285   00089C  22E2               	addwfc	fsr1h,f,c
  2286   00089E  6AE7               	clrf	indf1,c
  2287   0008A0  EF84  F004         	goto	i2l1458
  2288   0008A4                     i2l1454:
  2289   0008A4  EE22  F0DE         	lfsr	2,_readyQueue+531
  2290   0008A8  EE10 F069          	lfsr	1,105
  2291   0008AC  50DE               	movf	postinc2,w,c
  2292   0008AE  26E1               	addwf	fsr1l,f,c
  2293   0008B0  50DD               	movf	postdec2,w,c
  2294   0008B2  22E2               	addwfc	fsr1h,f,c
  2295   0008B4  50E7               	movf	indf1,w,c
  2296   0008B6  6E0D               	movwf	??_ISR_TIMER_0^0,c
  2297   0008B8  500D               	movf	??_ISR_TIMER_0^0,w,c
  2298   0008BA  0D03               	mullw	3
  2299   0008BC  CFF3 F00E          	movff	prodl,??_ISR_TIMER_0+1
  2300   0008C0  CFF4 F00F          	movff	prodh,??_ISR_TIMER_0+2
  2301   0008C4  EE22  F0DE         	lfsr	2,_readyQueue+531
  2302   0008C8  CFDE F010          	movff	postinc2,??_ISR_TIMER_0+3
  2303   0008CC  CFDD F011          	movff	postdec2,??_ISR_TIMER_0+4
  2304   0008D0  500E               	movf	(??_ISR_TIMER_0+1)^0,w,c
  2305   0008D2  2410               	addwf	(??_ISR_TIMER_0+3)^0,w,c
  2306   0008D4  6E12               	movwf	(??_ISR_TIMER_0+5)^0,c
  2307   0008D6  500F               	movf	(??_ISR_TIMER_0+2)^0,w,c
  2308   0008D8  2011               	addwfc	(??_ISR_TIMER_0+4)^0,w,c
  2309   0008DA  6E13               	movwf	(??_ISR_TIMER_0+6)^0,c
  2310   0008DC  0E09               	movlw	9
  2311   0008DE  2412               	addwf	(??_ISR_TIMER_0+5)^0,w,c
  2312   0008E0  6ED9               	movwf	fsr2l,c
  2313   0008E2  0E00               	movlw	0
  2314   0008E4  2013               	addwfc	(??_ISR_TIMER_0+6)^0,w,c
  2315   0008E6  6EDA               	movwf	fsr2h,c
  2316   0008E8  CFFD FFDE          	movff	tosl,postinc2	;volatile
  2317   0008EC  CFFE FFDE          	movff	tosh,postinc2	;volatile
  2318   0008F0  CFFF FFDE          	movff	tosu,postinc2	;volatile
  2319   0008F4  EE22  F0DE         	lfsr	2,_readyQueue+531
  2320   0008F8  EE10 F069          	lfsr	1,105
  2321   0008FC  50DE               	movf	postinc2,w,c
  2322   0008FE  26E1               	addwf	fsr1l,f,c
  2323   000900  50DD               	movf	postdec2,w,c
  2324   000902  22E2               	addwfc	fsr1h,f,c
  2325   000904  2AE7               	incf	indf1,f,c
  2326   000906  0006               	pop		;# 
  2327   000908                     i2l1458:
  2328   000908  50FC               	movf	252,w,c	;volatile
  2329   00090A  A4D8               	btfss	status,2,c
  2330   00090C  EF8A  F004         	goto	i2u71_41
  2331   000910  EF8C  F004         	goto	i2u71_40
  2332   000914                     i2u71_41:
  2333   000914  EF52  F004         	goto	i2l1454
  2334   000918                     i2u71_40:
  2335   000918  EE22  F0DE         	lfsr	2,_readyQueue+531
  2336   00091C  EE10 F003          	lfsr	1,3
  2337   000920  50DE               	movf	postinc2,w,c
  2338   000922  26E1               	addwf	fsr1l,f,c
  2339   000924  50DD               	movf	postdec2,w,c
  2340   000926  22E2               	addwfc	fsr1h,f,c
  2341   000928  6AE7               	clrf	indf1,c
  2342   00092A                     i2l1462:
  2343                           
  2344                           ;hardware.c: 36:         scheduler();
  2345   00092A  EC33  F007         	call	_scheduler	;wreg free
  2346   00092E  EE22  F0DE         	lfsr	2,_readyQueue+531
  2347   000932  EE10 F003          	lfsr	1,3
  2348   000936  50DE               	movf	postinc2,w,c
  2349   000938  26E1               	addwf	fsr1l,f,c
  2350   00093A  50DD               	movf	postdec2,w,c
  2351   00093C  22E2               	addwfc	fsr1h,f,c
  2352   00093E  50E7               	movf	indf1,w,c
  2353   000940  A4D8               	btfss	status,2,c
  2354   000942  EFA5  F004         	goto	i2u72_41
  2355   000946  EFA7  F004         	goto	i2u72_40
  2356   00094A                     i2u72_41:
  2357   00094A  EF37  F005         	goto	i2l1482
  2358   00094E                     i2u72_40:
  2359   00094E  EE22  F0DE         	lfsr	2,_readyQueue+531
  2360   000952  EE10 F006          	lfsr	1,6
  2361   000956  50DE               	movf	postinc2,w,c
  2362   000958  26E1               	addwf	fsr1l,f,c
  2363   00095A  50DD               	movf	postdec2,w,c
  2364   00095C  22E2               	addwfc	fsr1h,f,c
  2365   00095E  50E7               	movf	indf1,w,c
  2366   000960  6EE0               	movwf	224,c	;volatile
  2367   000962  EE22  F0DE         	lfsr	2,_readyQueue+531
  2368   000966  EE10 F008          	lfsr	1,8
  2369   00096A  50DE               	movf	postinc2,w,c
  2370   00096C  26E1               	addwf	fsr1l,f,c
  2371   00096E  50DD               	movf	postdec2,w,c
  2372   000970  22E2               	addwfc	fsr1h,f,c
  2373   000972  50E7               	movf	indf1,w,c
  2374   000974  6ED8               	movwf	216,c	;volatile
  2375   000976  EE22  F0DE         	lfsr	2,_readyQueue+531
  2376   00097A  EE10 F007          	lfsr	1,7
  2377   00097E  50DE               	movf	postinc2,w,c
  2378   000980  26E1               	addwf	fsr1l,f,c
  2379   000982  50DD               	movf	postdec2,w,c
  2380   000984  22E2               	addwfc	fsr1h,f,c
  2381   000986  50E7               	movf	indf1,w,c
  2382   000988  6E0D               	movwf	??_ISR_TIMER_0^0,c
  2383   00098A  500D               	movf	??_ISR_TIMER_0^0,w,c
  2384   00098C  6AFC               	clrf	252,c	;volatile
  2385   00098E  EE22  F0DE         	lfsr	2,_readyQueue+531
  2386   000992  EE10 F069          	lfsr	1,105
  2387   000996  50DE               	movf	postinc2,w,c
  2388   000998  26E1               	addwf	fsr1l,f,c
  2389   00099A  50DD               	movf	postdec2,w,c
  2390   00099C  22E2               	addwfc	fsr1h,f,c
  2391   00099E  50E7               	movf	indf1,w,c
  2392   0009A0  A4D8               	btfss	status,2,c
  2393   0009A2  EFD5  F004         	goto	i2u73_41
  2394   0009A6  EFD7  F004         	goto	i2u73_40
  2395   0009AA                     i2u73_41:
  2396   0009AA  EFEB  F004         	goto	i2l222
  2397   0009AE                     i2u73_40:
  2398   0009AE  0005               	push		;# 
  2399   0009B0  EE22  F0DE         	lfsr	2,_readyQueue+531
  2400   0009B4  EE10 F001          	lfsr	1,1
  2401   0009B8  50DE               	movf	postinc2,w,c
  2402   0009BA  26E1               	addwf	fsr1l,f,c
  2403   0009BC  50DD               	movf	postdec2,w,c
  2404   0009BE  22E2               	addwfc	fsr1h,f,c
  2405   0009C0  CFE6 F00D          	movff	postinc1,??_ISR_TIMER_0
  2406   0009C4  CFE5 F00E          	movff	postdec1,??_ISR_TIMER_0+1
  2407   0009C8  C00D  FFFD         	movff	??_ISR_TIMER_0,tosl	;volatile
  2408   0009CC  C00E  FFFE         	movff	??_ISR_TIMER_0+1,tosh	;volatile
  2409   0009D0  6AFF               	clrf	255,c	;volatile
  2410   0009D2  EF2D  F005         	goto	i2l1480
  2411   0009D6                     i2l222:
  2412   0009D6  0005               	push		;# 
  2413   0009D8  EE22  F0DE         	lfsr	2,_readyQueue+531
  2414   0009DC  EE10 F069          	lfsr	1,105
  2415   0009E0  50DE               	movf	postinc2,w,c
  2416   0009E2  26E1               	addwf	fsr1l,f,c
  2417   0009E4  50DD               	movf	postdec2,w,c
  2418   0009E6  22E2               	addwfc	fsr1h,f,c
  2419   0009E8  06E7               	decf	indf1,f,c
  2420   0009EA  EE22  F0DE         	lfsr	2,_readyQueue+531
  2421   0009EE  EE10 F069          	lfsr	1,105
  2422   0009F2  50DE               	movf	postinc2,w,c
  2423   0009F4  26E1               	addwf	fsr1l,f,c
  2424   0009F6  50DD               	movf	postdec2,w,c
  2425   0009F8  22E2               	addwfc	fsr1h,f,c
  2426   0009FA  50E7               	movf	indf1,w,c
  2427   0009FC  6E0D               	movwf	??_ISR_TIMER_0^0,c
  2428   0009FE  500D               	movf	??_ISR_TIMER_0^0,w,c
  2429   000A00  0D03               	mullw	3
  2430   000A02  CFF3 F00E          	movff	prodl,??_ISR_TIMER_0+1
  2431   000A06  CFF4 F00F          	movff	prodh,??_ISR_TIMER_0+2
  2432   000A0A  EE22  F0DE         	lfsr	2,_readyQueue+531
  2433   000A0E  CFDE F010          	movff	postinc2,??_ISR_TIMER_0+3
  2434   000A12  CFDD F011          	movff	postdec2,??_ISR_TIMER_0+4
  2435   000A16  500E               	movf	(??_ISR_TIMER_0+1)^0,w,c
  2436   000A18  2410               	addwf	(??_ISR_TIMER_0+3)^0,w,c
  2437   000A1A  6E12               	movwf	(??_ISR_TIMER_0+5)^0,c
  2438   000A1C  500F               	movf	(??_ISR_TIMER_0+2)^0,w,c
  2439   000A1E  2011               	addwfc	(??_ISR_TIMER_0+4)^0,w,c
  2440   000A20  6E13               	movwf	(??_ISR_TIMER_0+6)^0,c
  2441   000A22  0E09               	movlw	9
  2442   000A24  2412               	addwf	(??_ISR_TIMER_0+5)^0,w,c
  2443   000A26  6ED9               	movwf	fsr2l,c
  2444   000A28  0E00               	movlw	0
  2445   000A2A  2013               	addwfc	(??_ISR_TIMER_0+6)^0,w,c
  2446   000A2C  6EDA               	movwf	fsr2h,c
  2447   000A2E  CFDE FFFD          	movff	postinc2,tosl	;volatile
  2448   000A32  CFDE FFFE          	movff	postinc2,tosh	;volatile
  2449   000A36  CFDD FFFF          	movff	postdec2,tosu	;volatile
  2450   000A3A  EE22  F0DE         	lfsr	2,_readyQueue+531
  2451   000A3E  EE10 F069          	lfsr	1,105
  2452   000A42  50DE               	movf	postinc2,w,c
  2453   000A44  26E1               	addwf	fsr1l,f,c
  2454   000A46  50DD               	movf	postdec2,w,c
  2455   000A48  22E2               	addwfc	fsr1h,f,c
  2456   000A4A  50E7               	movf	indf1,w,c
  2457   000A4C  A4D8               	btfss	status,2,c
  2458   000A4E  EF2B  F005         	goto	i2u74_41
  2459   000A52  EF2D  F005         	goto	i2u74_40
  2460   000A56                     i2u74_41:
  2461   000A56  EFEB  F004         	goto	i2l222
  2462   000A5A                     i2u74_40:
  2463   000A5A                     i2l1480:
  2464   000A5A  EE22  F0DE         	lfsr	2,_readyQueue+531
  2465   000A5E  EE10 F003          	lfsr	1,3
  2466   000A62  50DE               	movf	postinc2,w,c
  2467   000A64  26E1               	addwf	fsr1l,f,c
  2468   000A66  50DD               	movf	postdec2,w,c
  2469   000A68  22E2               	addwfc	fsr1h,f,c
  2470   000A6A  0E01               	movlw	1
  2471   000A6C  6EE7               	movwf	indf1,c
  2472   000A6E                     i2l1482:
  2473                           
  2474                           ;hardware.c: 40:     (INTCONbits.GIE = 1);
  2475   000A6E  8EF2               	bsf	242,7,c	;volatile
  2476   000A70  C019  FFF4         	movff	??_ISR_TIMER_0+12,prodh
  2477   000A74  C018  FFF3         	movff	??_ISR_TIMER_0+11,prodl
  2478   000A78  C017  FFDA         	movff	??_ISR_TIMER_0+10,fsr2h
  2479   000A7C  C016  FFD9         	movff	??_ISR_TIMER_0+9,fsr2l
  2480   000A80  C015  FFE2         	movff	??_ISR_TIMER_0+8,fsr1h
  2481   000A84  C014  FFE1         	movff	??_ISR_TIMER_0+7,fsr1l
  2482   000A88  921C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2483   000A8A  0011               	retfie		f
  2484   000A8C                     __end_of_ISR_TIMER_0:
  2485                           	callstack 0
  2486                           
  2487 ;; *************** function _scheduler *****************
  2488 ;; Defined at:
  2489 ;;		line 37 in file "scheduler.c"
  2490 ;; Parameters:    Size  Location     Type
  2491 ;;		None
  2492 ;; Auto vars:     Size  Location     Type
  2493 ;;		None
  2494 ;; Return value:  Size  Location     Type
  2495 ;;                  1    wreg      void 
  2496 ;; Registers used:
  2497 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2498 ;; Tracked objects:
  2499 ;;		On entry : 0/0
  2500 ;;		On exit  : 0/0
  2501 ;;		Unchanged: 0/0
  2502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2503 ;;      Params:         0       0       0       0       0       0       0       0       0
  2504 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2505 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2506 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2507 ;;Total ram usage:        0 bytes
  2508 ;; Hardware stack levels used: 1
  2509 ;; Hardware stack levels required when called: 2
  2510 ;; This function calls:
  2511 ;;		_rr_scheduler
  2512 ;; This function is called by:
  2513 ;;		_ISR_TIMER_0
  2514 ;;		_os_delay
  2515 ;;		_os_yield
  2516 ;;		_os_change_state
  2517 ;; This function uses a non-reentrant model
  2518 ;;
  2519                           
  2520                           	psect	text13
  2521   000E66                     __ptext13:
  2522                           	callstack 0
  2523   000E66                     _scheduler:
  2524                           	callstack 23
  2525   000E66                     
  2526                           ;scheduler.c: 40:     readyQueue.taskRunning = rr_scheduler();
  2527   000E66  EC46  F005         	call	_rr_scheduler	;wreg free
  2528   000E6A  C007  F2DE         	movff	?_rr_scheduler,_readyQueue+531
  2529   000E6E  C008  F2DF         	movff	?_rr_scheduler+1,_readyQueue+532
  2530   000E72  0012               	return		;funcret
  2531   000E74                     __end_of_scheduler:
  2532                           	callstack 0
  2533                           
  2534 ;; *************** function _rr_scheduler *****************
  2535 ;; Defined at:
  2536 ;;		line 12 in file "scheduler.c"
  2537 ;; Parameters:    Size  Location     Type
  2538 ;;		None
  2539 ;; Auto vars:     Size  Location     Type
  2540 ;;  pos_task_run    1   11[COMRAM] unsigned char 
  2541 ;;  idle_selecte    1   10[COMRAM] unsigned char 
  2542 ;; Return value:  Size  Location     Type
  2543 ;;                  2    6[COMRAM] PTR struct tcb
  2544 ;; Registers used:
  2545 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2546 ;; Tracked objects:
  2547 ;;		On entry : 0/0
  2548 ;;		On exit  : 0/0
  2549 ;;		Unchanged: 0/0
  2550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2551 ;;      Params:         2       0       0       0       0       0       0       0       0
  2552 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2553 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2554 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2555 ;;Total ram usage:        6 bytes
  2556 ;; Hardware stack levels used: 1
  2557 ;; Hardware stack levels required when called: 1
  2558 ;; This function calls:
  2559 ;;		___awmod
  2560 ;;		_os_task_pos
  2561 ;; This function is called by:
  2562 ;;		_scheduler
  2563 ;; This function uses a non-reentrant model
  2564 ;;
  2565                           
  2566                           	psect	text14
  2567   000A8C                     __ptext14:
  2568                           	callstack 0
  2569   000A8C                     _rr_scheduler:
  2570                           	callstack 23
  2571   000A8C                     
  2572                           ;scheduler.c: 14:     uint8_t pos_task_running = os_task_pos(readyQueue.taskRunning->tas
      +                          k_func);
  2573   000A8C  EE22  F0DE         	lfsr	2,_readyQueue+531
  2574   000A90  EE10 F001          	lfsr	1,1
  2575   000A94  50DE               	movf	postinc2,w,c
  2576   000A96  26E1               	addwf	fsr1l,f,c
  2577   000A98  50DD               	movf	postdec2,w,c
  2578   000A9A  22E2               	addwfc	fsr1h,f,c
  2579   000A9C  CFE6 F001          	movff	postinc1,os_task_pos@task
  2580   000AA0  CFE5 F002          	movff	postdec1,os_task_pos@task+1
  2581   000AA4  EC50  F006         	call	_os_task_pos	;wreg free
  2582   000AA8  6E0C               	movwf	rr_scheduler@pos_task_running^0,c
  2583   000AAA                     
  2584                           ;scheduler.c: 15:     uint8_t idle_selected = 0;
  2585   000AAA  6A0B               	clrf	rr_scheduler@idle_selected^0,c
  2586   000AAC                     i2l1292:
  2587                           
  2588                           ;scheduler.c: 18:         pos_task_running = (pos_task_running+1) % readyQueue.readyQueu
      +                          eSize;
  2589   000AAC  0E01               	movlw	1
  2590   000AAE  240C               	addwf	rr_scheduler@pos_task_running^0,w,c
  2591   000AB0  6E01               	movwf	___awmod@dividend^0,c
  2592   000AB2  6A02               	clrf	(___awmod@dividend+1)^0,c
  2593   000AB4  0E00               	movlw	0
  2594   000AB6  2202               	addwfc	(___awmod@dividend+1)^0,f,c
  2595   000AB8  C2DD  F009         	movff	_readyQueue+530,??_rr_scheduler
  2596   000ABC  5009               	movf	??_rr_scheduler^0,w,c
  2597   000ABE  6E03               	movwf	___awmod@divisor^0,c
  2598   000AC0  6A04               	clrf	(___awmod@divisor+1)^0,c
  2599   000AC2  ECB5  F005         	call	___awmod	;wreg free
  2600   000AC6  5001               	movf	?___awmod^0,w,c
  2601   000AC8  6E0C               	movwf	rr_scheduler@pos_task_running^0,c
  2602   000ACA                     
  2603                           ;scheduler.c: 19:         if (readyQueue.readyQueue[pos_task_running].task_func == os_id
      +                          le_task) {
  2604   000ACA  500C               	movf	rr_scheduler@pos_task_running^0,w,c
  2605   000ACC  0D6A               	mullw	106
  2606   000ACE  0ECC               	movlw	low (_readyQueue+1)
  2607   000AD0  24F3               	addwf	243,w,c
  2608   000AD2  6ED9               	movwf	fsr2l,c
  2609   000AD4  0E00               	movlw	high (_readyQueue+1)
  2610   000AD6  20F4               	addwfc	prodh,w,c
  2611   000AD8  6EDA               	movwf	fsr2h,c
  2612   000ADA  0E72               	movlw	low _os_idle_task
  2613   000ADC  18DE               	xorwf	postinc2,w,c
  2614   000ADE  E107               	bnz	i2u49_41
  2615   000AE0  0E0D               	movlw	high _os_idle_task
  2616   000AE2  18DE               	xorwf	postinc2,w,c
  2617   000AE4  A4D8               	btfss	status,2,c
  2618   000AE6  EF77  F005         	goto	i2u49_41
  2619   000AEA  EF79  F005         	goto	i2u49_40
  2620   000AEE                     i2u49_41:
  2621   000AEE  EF88  F005         	goto	i2l1304
  2622   000AF2                     i2u49_40:
  2623   000AF2                     
  2624                           ;scheduler.c: 20:             idle_selected++;
  2625   000AF2  2A0B               	incf	rr_scheduler@idle_selected^0,f,c
  2626   000AF4                     
  2627                           ;scheduler.c: 21:             if (idle_selected > 1) return &readyQueue.readyQueue[0];
  2628   000AF4  0E01               	movlw	1
  2629   000AF6  640B               	cpfsgt	rr_scheduler@idle_selected^0,c
  2630   000AF8  EF80  F005         	goto	i2u50_41
  2631   000AFC  EF82  F005         	goto	i2u50_40
  2632   000B00                     i2u50_41:
  2633   000B00  EF88  F005         	goto	i2l1304
  2634   000B04                     i2u50_40:
  2635   000B04  0ECB               	movlw	low _readyQueue
  2636   000B06  6E07               	movwf	?_rr_scheduler^0,c
  2637   000B08  0E00               	movlw	high _readyQueue
  2638   000B0A  6E08               	movwf	(?_rr_scheduler+1)^0,c
  2639   000B0C  EFB4  F005         	goto	i2l171
  2640   000B10                     i2l1304:
  2641                           
  2642                           ;scheduler.c: 24:     } while (readyQueue.readyQueue[pos_task_running].task_state != REA
      +                          DY ||
  2643   000B10  500C               	movf	rr_scheduler@pos_task_running^0,w,c
  2644   000B12  0D6A               	mullw	106
  2645   000B14  0ECE               	movlw	low (_readyQueue+3)
  2646   000B16  24F3               	addwf	243,w,c
  2647   000B18  6ED9               	movwf	fsr2l,c
  2648   000B1A  0E00               	movlw	high (_readyQueue+3)
  2649   000B1C  20F4               	addwfc	prodh,w,c
  2650   000B1E  6EDA               	movwf	fsr2h,c
  2651   000B20  50DF               	movf	indf2,w,c
  2652   000B22  A4D8               	btfss	status,2,c
  2653   000B24  EF96  F005         	goto	i2u51_41
  2654   000B28  EF98  F005         	goto	i2u51_40
  2655   000B2C                     i2u51_41:
  2656   000B2C  EF56  F005         	goto	i2l1292
  2657   000B30                     i2u51_40:
  2658   000B30  500C               	movf	rr_scheduler@pos_task_running^0,w,c
  2659   000B32  0D6A               	mullw	106
  2660   000B34  0ECC               	movlw	low (_readyQueue+1)
  2661   000B36  24F3               	addwf	243,w,c
  2662   000B38  6ED9               	movwf	fsr2l,c
  2663   000B3A  0E00               	movlw	high (_readyQueue+1)
  2664   000B3C  20F4               	addwfc	prodh,w,c
  2665   000B3E  6EDA               	movwf	fsr2h,c
  2666   000B40  0E72               	movlw	low _os_idle_task
  2667   000B42  18DE               	xorwf	postinc2,w,c
  2668   000B44  E109               	bnz	i2u52_40
  2669   000B46  0E0D               	movlw	high _os_idle_task
  2670   000B48  18DE               	xorwf	postinc2,w,c
  2671   000B4A  B4D8               	btfsc	status,2,c
  2672   000B4C  EFAA  F005         	goto	i2u52_41
  2673   000B50  EFAC  F005         	goto	i2u52_40
  2674   000B54                     i2u52_41:
  2675   000B54  EF56  F005         	goto	i2l1292
  2676   000B58                     i2u52_40:
  2677   000B58                     
  2678                           ;scheduler.c: 27:     return &readyQueue.readyQueue[pos_task_running];
  2679   000B58  500C               	movf	rr_scheduler@pos_task_running^0,w,c
  2680   000B5A  0D6A               	mullw	106
  2681   000B5C  0ECB               	movlw	low _readyQueue
  2682   000B5E  24F3               	addwf	243,w,c
  2683   000B60  6E07               	movwf	?_rr_scheduler^0,c
  2684   000B62  0E00               	movlw	high _readyQueue
  2685   000B64  20F4               	addwfc	prodh,w,c
  2686   000B66  6E08               	movwf	(?_rr_scheduler+1)^0,c
  2687   000B68                     i2l171:
  2688   000B68  0012               	return		;funcret
  2689   000B6A                     __end_of_rr_scheduler:
  2690                           	callstack 0
  2691                           
  2692 ;; *************** function _os_task_pos *****************
  2693 ;; Defined at:
  2694 ;;		line 47 in file "kernel.c"
  2695 ;; Parameters:    Size  Location     Type
  2696 ;;  task            2    0[COMRAM] PTR FTN()void 
  2697 ;;		 -> os_idle_task(1), sensors_reading(1), motors_control(1), 
  2698 ;; Auto vars:     Size  Location     Type
  2699 ;;  i               1    4[COMRAM] unsigned char 
  2700 ;; Return value:  Size  Location     Type
  2701 ;;                  1    wreg      unsigned char 
  2702 ;; Registers used:
  2703 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2704 ;; Tracked objects:
  2705 ;;		On entry : 0/0
  2706 ;;		On exit  : 0/0
  2707 ;;		Unchanged: 0/0
  2708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2709 ;;      Params:         2       0       0       0       0       0       0       0       0
  2710 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2711 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2712 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2713 ;;Total ram usage:        5 bytes
  2714 ;; Hardware stack levels used: 1
  2715 ;; This function calls:
  2716 ;;		Nothing
  2717 ;; This function is called by:
  2718 ;;		_rr_scheduler
  2719 ;; This function uses a non-reentrant model
  2720 ;;
  2721                           
  2722                           	psect	text15
  2723   000CA0                     __ptext15:
  2724                           	callstack 0
  2725   000CA0                     _os_task_pos:
  2726                           	callstack 23
  2727   000CA0                     
  2728                           ;kernel.c: 47: uint8_t os_task_pos(f_ptr task);kernel.c: 48: {;kernel.c: 49:     for (ui
      +                          nt8_t i = 0; i < readyQueue.readyQueueSize; i++) {
  2729   000CA0  6A05               	clrf	os_task_pos@i^0,c
  2730   000CA2  EF6B  F006         	goto	i2l1226
  2731   000CA6                     i2l1218:
  2732                           
  2733                           ;kernel.c: 50:         if (readyQueue.readyQueue[i].task_func == task) return i;
  2734   000CA6  5005               	movf	os_task_pos@i^0,w,c
  2735   000CA8  0D6A               	mullw	106
  2736   000CAA  0ECC               	movlw	low (_readyQueue+1)
  2737   000CAC  24F3               	addwf	243,w,c
  2738   000CAE  6ED9               	movwf	fsr2l,c
  2739   000CB0  0E00               	movlw	high (_readyQueue+1)
  2740   000CB2  20F4               	addwfc	prodh,w,c
  2741   000CB4  6EDA               	movwf	fsr2h,c
  2742   000CB6  5001               	movf	os_task_pos@task^0,w,c
  2743   000CB8  18DE               	xorwf	postinc2,w,c
  2744   000CBA  E107               	bnz	i2u40_41
  2745   000CBC  5002               	movf	(os_task_pos@task+1)^0,w,c
  2746   000CBE  18DE               	xorwf	postinc2,w,c
  2747   000CC0  A4D8               	btfss	status,2,c
  2748   000CC2  EF65  F006         	goto	i2u40_41
  2749   000CC6  EF67  F006         	goto	i2u40_40
  2750   000CCA                     i2u40_41:
  2751   000CCA  EF6A  F006         	goto	i2l1224
  2752   000CCE                     i2u40_40:
  2753   000CCE  5005               	movf	os_task_pos@i^0,w,c
  2754   000CD0  EF77  F006         	goto	i2l60
  2755   000CD4                     i2l1224:
  2756                           
  2757                           ;kernel.c: 51:     }
  2758   000CD4  2A05               	incf	os_task_pos@i^0,f,c
  2759   000CD6                     i2l1226:
  2760   000CD6  EE22  F0DD         	lfsr	2,_readyQueue+530
  2761   000CDA  50DE               	movf	postinc2,w,c
  2762   000CDC  5C05               	subwf	os_task_pos@i^0,w,c
  2763   000CDE  A0D8               	btfss	status,0,c
  2764   000CE0  EF74  F006         	goto	i2u41_41
  2765   000CE4  EF76  F006         	goto	i2u41_40
  2766   000CE8                     i2u41_41:
  2767   000CE8  EF53  F006         	goto	i2l1218
  2768   000CEC                     i2u41_40:
  2769   000CEC                     
  2770                           ;kernel.c: 53:     return 0;
  2771   000CEC  0E00               	movlw	0
  2772   000CEE                     i2l60:
  2773   000CEE  0012               	return		;funcret
  2774   000CF0                     __end_of_os_task_pos:
  2775                           	callstack 0
  2776                           
  2777 ;; *************** function ___awmod *****************
  2778 ;; Defined at:
  2779 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awmod.c"
  2780 ;; Parameters:    Size  Location     Type
  2781 ;;  dividend        2    0[COMRAM] int 
  2782 ;;  divisor         2    2[COMRAM] int 
  2783 ;; Auto vars:     Size  Location     Type
  2784 ;;  sign            1    5[COMRAM] unsigned char 
  2785 ;;  counter         1    4[COMRAM] unsigned char 
  2786 ;; Return value:  Size  Location     Type
  2787 ;;                  2    0[COMRAM] int 
  2788 ;; Registers used:
  2789 ;;		wreg, status,2, status,0
  2790 ;; Tracked objects:
  2791 ;;		On entry : 0/0
  2792 ;;		On exit  : 0/0
  2793 ;;		Unchanged: 0/0
  2794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2795 ;;      Params:         4       0       0       0       0       0       0       0       0
  2796 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2797 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2798 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2799 ;;Total ram usage:        6 bytes
  2800 ;; Hardware stack levels used: 1
  2801 ;; This function calls:
  2802 ;;		Nothing
  2803 ;; This function is called by:
  2804 ;;		_rr_scheduler
  2805 ;; This function uses a non-reentrant model
  2806 ;;
  2807                           
  2808                           	psect	text16
  2809   000B6A                     __ptext16:
  2810                           	callstack 0
  2811   000B6A                     ___awmod:
  2812                           	callstack 23
  2813   000B6A  6A06               	clrf	___awmod@sign^0,c
  2814   000B6C  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  2815   000B6E  EFBD  F005         	goto	i2u42_40
  2816   000B72  EFBB  F005         	goto	i2u42_41
  2817   000B76                     i2u42_41:
  2818   000B76  EFC3  F005         	goto	i2l1240
  2819   000B7A                     i2u42_40:
  2820   000B7A  6C01               	negf	___awmod@dividend^0,c
  2821   000B7C  1E02               	comf	(___awmod@dividend+1)^0,f,c
  2822   000B7E  B0D8               	btfsc	status,0,c
  2823   000B80  2A02               	incf	(___awmod@dividend+1)^0,f,c
  2824   000B82  0E01               	movlw	1
  2825   000B84  6E06               	movwf	___awmod@sign^0,c
  2826   000B86                     i2l1240:
  2827   000B86  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  2828   000B88  EFCA  F005         	goto	i2u43_40
  2829   000B8C  EFC8  F005         	goto	i2u43_41
  2830   000B90                     i2u43_41:
  2831   000B90  EFCE  F005         	goto	i2l1244
  2832   000B94                     i2u43_40:
  2833   000B94  6C03               	negf	___awmod@divisor^0,c
  2834   000B96  1E04               	comf	(___awmod@divisor+1)^0,f,c
  2835   000B98  B0D8               	btfsc	status,0,c
  2836   000B9A  2A04               	incf	(___awmod@divisor+1)^0,f,c
  2837   000B9C                     i2l1244:
  2838   000B9C  5003               	movf	___awmod@divisor^0,w,c
  2839   000B9E  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  2840   000BA0  B4D8               	btfsc	status,2,c
  2841   000BA2  EFD5  F005         	goto	i2u44_41
  2842   000BA6  EFD7  F005         	goto	i2u44_40
  2843   000BAA                     i2u44_41:
  2844   000BAA  EFFB  F005         	goto	i2l1260
  2845   000BAE                     i2u44_40:
  2846   000BAE  0E01               	movlw	1
  2847   000BB0  6E05               	movwf	___awmod@counter^0,c
  2848   000BB2  EFDF  F005         	goto	i2l1250
  2849   000BB6                     i2l1248:
  2850   000BB6  90D8               	bcf	status,0,c
  2851   000BB8  3603               	rlcf	___awmod@divisor^0,f,c
  2852   000BBA  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  2853   000BBC  2A05               	incf	___awmod@counter^0,f,c
  2854   000BBE                     i2l1250:
  2855   000BBE  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  2856   000BC0  EFE4  F005         	goto	i2u45_41
  2857   000BC4  EFE6  F005         	goto	i2u45_40
  2858   000BC8                     i2u45_41:
  2859   000BC8  EFDB  F005         	goto	i2l1248
  2860   000BCC                     i2u45_40:
  2861   000BCC                     i2l1252:
  2862   000BCC  5003               	movf	___awmod@divisor^0,w,c
  2863   000BCE  5C01               	subwf	___awmod@dividend^0,w,c
  2864   000BD0  5004               	movf	(___awmod@divisor+1)^0,w,c
  2865   000BD2  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  2866   000BD4  A0D8               	btfss	status,0,c
  2867   000BD6  EFEF  F005         	goto	i2u46_41
  2868   000BDA  EFF1  F005         	goto	i2u46_40
  2869   000BDE                     i2u46_41:
  2870   000BDE  EFF5  F005         	goto	i2l1256
  2871   000BE2                     i2u46_40:
  2872   000BE2  5003               	movf	___awmod@divisor^0,w,c
  2873   000BE4  5E01               	subwf	___awmod@dividend^0,f,c
  2874   000BE6  5004               	movf	(___awmod@divisor+1)^0,w,c
  2875   000BE8  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  2876   000BEA                     i2l1256:
  2877   000BEA  90D8               	bcf	status,0,c
  2878   000BEC  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  2879   000BEE  3203               	rrcf	___awmod@divisor^0,f,c
  2880   000BF0  2E05               	decfsz	___awmod@counter^0,f,c
  2881   000BF2  EFE6  F005         	goto	i2l1252
  2882   000BF6                     i2l1260:
  2883   000BF6  5006               	movf	___awmod@sign^0,w,c
  2884   000BF8  B4D8               	btfsc	status,2,c
  2885   000BFA  EF01  F006         	goto	i2u47_41
  2886   000BFE  EF03  F006         	goto	i2u47_40
  2887   000C02                     i2u47_41:
  2888   000C02  EF07  F006         	goto	i2l1264
  2889   000C06                     i2u47_40:
  2890   000C06  6C01               	negf	___awmod@dividend^0,c
  2891   000C08  1E02               	comf	(___awmod@dividend+1)^0,f,c
  2892   000C0A  B0D8               	btfsc	status,0,c
  2893   000C0C  2A02               	incf	(___awmod@dividend+1)^0,f,c
  2894   000C0E                     i2l1264:
  2895   000C0E  C001  F001         	movff	___awmod@dividend,?___awmod
  2896   000C12  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  2897   000C16  0012               	return		;funcret
  2898   000C18                     __end_of___awmod:
  2899                           	callstack 0
  2900                           
  2901 ;; *************** function _os_task_time_decrease *****************
  2902 ;; Defined at:
  2903 ;;		line 56 in file "kernel.c"
  2904 ;; Parameters:    Size  Location     Type
  2905 ;;		None
  2906 ;; Auto vars:     Size  Location     Type
  2907 ;;  i               1    1[COMRAM] unsigned char 
  2908 ;; Return value:  Size  Location     Type
  2909 ;;                  1    wreg      void 
  2910 ;; Registers used:
  2911 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2912 ;; Tracked objects:
  2913 ;;		On entry : 0/0
  2914 ;;		On exit  : 0/0
  2915 ;;		Unchanged: 0/0
  2916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2917 ;;      Params:         0       0       0       0       0       0       0       0       0
  2918 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2919 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2920 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2921 ;;Total ram usage:        2 bytes
  2922 ;; Hardware stack levels used: 1
  2923 ;; This function calls:
  2924 ;;		Nothing
  2925 ;; This function is called by:
  2926 ;;		_ISR_TIMER_0
  2927 ;; This function uses a non-reentrant model
  2928 ;;
  2929                           
  2930                           	psect	text17
  2931   000C18                     __ptext17:
  2932                           	callstack 0
  2933   000C18                     _os_task_time_decrease:
  2934                           	callstack 25
  2935   000C18                     
  2936                           ;kernel.c: 58:     for (uint8_t i = 1; i < readyQueue.readyQueueSize; i++) {
  2937   000C18  0E01               	movlw	1
  2938   000C1A  6E02               	movwf	os_task_time_decrease@i^0,c
  2939   000C1C  EF44  F006         	goto	i2l1038
  2940   000C20                     i2l1030:
  2941                           
  2942                           ;kernel.c: 59:         if (readyQueue.readyQueue[i].task_state == WAITING) {
  2943   000C20  5002               	movf	os_task_time_decrease@i^0,w,c
  2944   000C22  0D6A               	mullw	106
  2945   000C24  0ECE               	movlw	low (_readyQueue+3)
  2946   000C26  24F3               	addwf	243,w,c
  2947   000C28  6ED9               	movwf	fsr2l,c
  2948   000C2A  0E00               	movlw	high (_readyQueue+3)
  2949   000C2C  20F4               	addwfc	prodh,w,c
  2950   000C2E  6EDA               	movwf	fsr2h,c
  2951   000C30  0E02               	movlw	2
  2952   000C32  18DE               	xorwf	postinc2,w,c
  2953   000C34  A4D8               	btfss	status,2,c
  2954   000C36  EF1F  F006         	goto	i2u14_41
  2955   000C3A  EF21  F006         	goto	i2u14_40
  2956   000C3E                     i2u14_41:
  2957   000C3E  EF43  F006         	goto	i2l1036
  2958   000C42                     i2u14_40:
  2959   000C42                     
  2960                           ;kernel.c: 60:             readyQueue.readyQueue[i].task_time_to_waiting--;
  2961   000C42  5002               	movf	os_task_time_decrease@i^0,w,c
  2962   000C44  0D6A               	mullw	106
  2963   000C46  0ED0               	movlw	low (_readyQueue+5)
  2964   000C48  24F3               	addwf	243,w,c
  2965   000C4A  6ED9               	movwf	fsr2l,c
  2966   000C4C  0E00               	movlw	high (_readyQueue+5)
  2967   000C4E  20F4               	addwfc	prodh,w,c
  2968   000C50  6EDA               	movwf	fsr2h,c
  2969   000C52  06DF               	decf	indf2,f,c
  2970                           
  2971                           ;kernel.c: 61:             if (readyQueue.readyQueue[i].task_time_to_waiting == 0) {
  2972   000C54  5002               	movf	os_task_time_decrease@i^0,w,c
  2973   000C56  0D6A               	mullw	106
  2974   000C58  0ED0               	movlw	low (_readyQueue+5)
  2975   000C5A  24F3               	addwf	243,w,c
  2976   000C5C  6ED9               	movwf	fsr2l,c
  2977   000C5E  0E00               	movlw	high (_readyQueue+5)
  2978   000C60  20F4               	addwfc	prodh,w,c
  2979   000C62  6EDA               	movwf	fsr2h,c
  2980   000C64  50DF               	movf	indf2,w,c
  2981   000C66  A4D8               	btfss	status,2,c
  2982   000C68  EF38  F006         	goto	i2u15_41
  2983   000C6C  EF3A  F006         	goto	i2u15_40
  2984   000C70                     i2u15_41:
  2985   000C70  EF43  F006         	goto	i2l1036
  2986   000C74                     i2u15_40:
  2987   000C74                     
  2988                           ;kernel.c: 63:                 readyQueue.readyQueue[i].task_state = READY;
  2989   000C74  5002               	movf	os_task_time_decrease@i^0,w,c
  2990   000C76  0D6A               	mullw	106
  2991   000C78  0ECE               	movlw	low (_readyQueue+3)
  2992   000C7A  24F3               	addwf	243,w,c
  2993   000C7C  6ED9               	movwf	fsr2l,c
  2994   000C7E  0E00               	movlw	high (_readyQueue+3)
  2995   000C80  20F4               	addwfc	prodh,w,c
  2996   000C82  6EDA               	movwf	fsr2h,c
  2997   000C84  6ADF               	clrf	indf2,c
  2998   000C86                     i2l1036:
  2999                           
  3000                           ;kernel.c: 66:     }
  3001   000C86  2A02               	incf	os_task_time_decrease@i^0,f,c
  3002   000C88                     i2l1038:
  3003   000C88  EE22  F0DD         	lfsr	2,_readyQueue+530
  3004   000C8C  50DE               	movf	postinc2,w,c
  3005   000C8E  5C02               	subwf	os_task_time_decrease@i^0,w,c
  3006   000C90  A0D8               	btfss	status,0,c
  3007   000C92  EF4D  F006         	goto	i2u16_41
  3008   000C96  EF4F  F006         	goto	i2u16_40
  3009   000C9A                     i2u16_41:
  3010   000C9A  EF10  F006         	goto	i2l1030
  3011   000C9E                     i2u16_40:
  3012   000C9E  0012               	return		;funcret
  3013   000CA0                     __end_of_os_task_time_decrease:
  3014                           	callstack 0
  3015                           
  3016                           	psect	smallconst
  3017   000800                     __psmallconst:
  3018                           	callstack 0
  3019   000800  00                 	db	0
  3020   000801  00                 	db	0	; dummy byte at the end
  3021   000800                     __smallconst    set	__psmallconst
  3022   000800                     __mediumconst   set	__psmallconst
  3023   000000                     __activetblptr  equ	0
  3024                           
  3025                           	psect	rparam
  3026   000001                     ___rparam_used  equ	1
  3027   000000                     ___param_bank   equ	0
  3028   000000                     __Lparam        equ	__Lrparam
  3029   000000                     __Hparam        equ	__Hrparam
  3030                           
  3031                           	psect	temp
  3032   00001C                     btemp:
  3033                           	callstack 0
  3034   00001C                     	ds	1
  3035   00001C                     int$flags       set	btemp
  3036   00001D                     wtemp8          set	btemp+1
  3037   00001D                     ttemp5          set	btemp+1
  3038   000020                     ttemp6          set	btemp+4
  3039   000024                     ttemp7          set	btemp+8
  3040                           tosu	equ	0xFFF
  3041                           tosh	equ	0xFFE
  3042                           tosl	equ	0xFFD
  3043                           stkptr	equ	0xFFC
  3044                           pclatu	equ	0xFFB
  3045                           pclath	equ	0xFFA
  3046                           pcl	equ	0xFF9
  3047                           tblptru	equ	0xFF8
  3048                           tblptrh	equ	0xFF7
  3049                           tblptrl	equ	0xFF6
  3050                           tablat	equ	0xFF5
  3051                           prodh	equ	0xFF4
  3052                           prodl	equ	0xFF3
  3053                           indf0	equ	0xFEF
  3054                           postinc0	equ	0xFEE
  3055                           postdec0	equ	0xFED
  3056                           preinc0	equ	0xFEC
  3057                           plusw0	equ	0xFEB
  3058                           fsr0h	equ	0xFEA
  3059                           fsr0l	equ	0xFE9
  3060                           wreg	equ	0xFE8
  3061                           indf1	equ	0xFE7
  3062                           postinc1	equ	0xFE6
  3063                           postdec1	equ	0xFE5
  3064                           preinc1	equ	0xFE4
  3065                           plusw1	equ	0xFE3
  3066                           fsr1h	equ	0xFE2
  3067                           fsr1l	equ	0xFE1
  3068                           bsr	equ	0xFE0
  3069                           indf2	equ	0xFDF
  3070                           postinc2	equ	0xFDE
  3071                           postdec2	equ	0xFDD
  3072                           preinc2	equ	0xFDC
  3073                           plusw2	equ	0xFDB
  3074                           fsr2h	equ	0xFDA
  3075                           fsr2l	equ	0xFD9
  3076                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         535
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     26      28
    BANK0           160    107     107
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    mutex_lock@m	PTR struct . size(1) Largest target is 2
		 -> x(COMRAM[2]), 

    mutex_unlock@m	PTR struct . size(1) Largest target is 2
		 -> x(COMRAM[2]), 

    new_task$task_func	PTR FTN()void  size(2) Largest target is 1
		 -> motors_control(), os_idle_task(), sensors_reading(), 

    os_create_task@task_f	PTR FTN()void  size(2) Largest target is 1
		 -> motors_control(), os_idle_task(), sensors_reading(), 

    os_task_pos@task	PTR FTN()void  size(2) Largest target is 1
		 -> motors_control(), os_idle_task(), sensors_reading(), 

    ?_priority_scheduler$task_func	PTR FTN()void  size(2) Largest target is 1
		 -> motors_control(), os_idle_task(), sensors_reading(), 

    readyQueue$readyQueue$task_func	PTR FTN()void  size(2) Largest target is 1
		 -> motors_control(), os_idle_task(), sensors_reading(), 

    readyQueue$task_func	PTR FTN()void  size(2) Largest target is 1
		 -> motors_control(), os_idle_task(), sensors_reading(), 

    readyQueue$taskRunning	PTR struct tcb size(2) Largest target is 533
		 -> readyQueue(BIGRAM[533]), readyQueue$readyQueue(BIGRAM[530]), NULL(NULL[0]), 

    readyQueue$taskRunning$task_func	PTR FTN()void  size(2) Largest target is 1
		 -> motors_control(), os_idle_task(), sensors_reading(), 

    ?_rr_scheduler$task_func	PTR FTN()void  size(2) Largest target is 1
		 -> motors_control(), os_idle_task(), sensors_reading(), 

    ?_rr_scheduler$taskRunning	PTR struct tcb size(2) Largest target is 533
		 -> readyQueue(BIGRAM[533]), NULL(NULL[0]), 

    S64tcb$task_func	PTR FTN()void  size(2) Largest target is 1
		 -> motors_control(), os_idle_task(), sensors_reading(), 

    S75f_aptos$taskRunning	PTR struct tcb size(2) Largest target is 533
		 -> readyQueue(BIGRAM[533]), NULL(NULL[0]), 

    sp__priority_scheduler	PTR struct tcb size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sp__priority_scheduler$task_func	PTR FTN()void  size(2) Largest target is 1
		 -> motors_control(), os_idle_task(), sensors_reading(), 

    sp__rr_scheduler	PTR struct tcb size(2) Largest target is 533
		 -> readyQueue(BIGRAM[533]), readyQueue$readyQueue(BIGRAM[530]), 


Critical Paths under _main in COMRAM

    _main->_os_create_task
    _os_config->_os_create_task

Critical Paths under _os_idle_task in COMRAM

    None.

Critical Paths under _os_idle_task in COMRAM

    None.

Critical Paths under _motors_control in COMRAM

    None.

Critical Paths under _sensors_reading in COMRAM

    _sensors_reading->_mutex_lock

Critical Paths under _motors_control in COMRAM

    None.

Critical Paths under _sensors_reading in COMRAM

    _sensors_reading->_mutex_lock

Critical Paths under _ISR_TIMER_0 in COMRAM

    _scheduler->_rr_scheduler
    _rr_scheduler->___awmod

Critical Paths under _main in BANK0

    _main->_os_create_task
    _os_config->_os_create_task

Critical Paths under _os_idle_task in BANK0

    None.

Critical Paths under _os_idle_task in BANK0

    None.

Critical Paths under _motors_control in BANK0

    None.

Critical Paths under _sensors_reading in BANK0

    None.

Critical Paths under _motors_control in BANK0

    None.

Critical Paths under _sensors_reading in BANK0

    None.

Critical Paths under _ISR_TIMER_0 in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _os_idle_task in BANK1

    None.

Critical Paths under _os_idle_task in BANK1

    None.

Critical Paths under _motors_control in BANK1

    None.

Critical Paths under _sensors_reading in BANK1

    None.

Critical Paths under _motors_control in BANK1

    None.

Critical Paths under _sensors_reading in BANK1

    None.

Critical Paths under _ISR_TIMER_0 in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _os_idle_task in BANK2

    None.

Critical Paths under _os_idle_task in BANK2

    None.

Critical Paths under _motors_control in BANK2

    None.

Critical Paths under _sensors_reading in BANK2

    None.

Critical Paths under _motors_control in BANK2

    None.

Critical Paths under _sensors_reading in BANK2

    None.

Critical Paths under _ISR_TIMER_0 in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _os_idle_task in BANK3

    None.

Critical Paths under _os_idle_task in BANK3

    None.

Critical Paths under _motors_control in BANK3

    None.

Critical Paths under _sensors_reading in BANK3

    None.

Critical Paths under _motors_control in BANK3

    None.

Critical Paths under _sensors_reading in BANK3

    None.

Critical Paths under _ISR_TIMER_0 in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _os_idle_task in BANK4

    None.

Critical Paths under _os_idle_task in BANK4

    None.

Critical Paths under _motors_control in BANK4

    None.

Critical Paths under _sensors_reading in BANK4

    None.

Critical Paths under _motors_control in BANK4

    None.

Critical Paths under _sensors_reading in BANK4

    None.

Critical Paths under _ISR_TIMER_0 in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _os_idle_task in BANK5

    None.

Critical Paths under _os_idle_task in BANK5

    None.

Critical Paths under _motors_control in BANK5

    None.

Critical Paths under _sensors_reading in BANK5

    None.

Critical Paths under _motors_control in BANK5

    None.

Critical Paths under _sensors_reading in BANK5

    None.

Critical Paths under _ISR_TIMER_0 in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _os_idle_task in BANK6

    None.

Critical Paths under _os_idle_task in BANK6

    None.

Critical Paths under _motors_control in BANK6

    None.

Critical Paths under _sensors_reading in BANK6

    None.

Critical Paths under _motors_control in BANK6

    None.

Critical Paths under _sensors_reading in BANK6

    None.

Critical Paths under _ISR_TIMER_0 in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _os_idle_task in BANK7

    None.

Critical Paths under _os_idle_task in BANK7

    None.

Critical Paths under _motors_control in BANK7

    None.

Critical Paths under _sensors_reading in BANK7

    None.

Critical Paths under _motors_control in BANK7

    None.

Critical Paths under _sensors_reading in BANK7

    None.

Critical Paths under _ISR_TIMER_0 in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     540
                          _os_config
                     _os_create_task
                           _os_start
 ---------------------------------------------------------------------------------
 (1) _os_start                                             0     0      0       0
                    _conf_interrupts
                       _conf_timer_0
                         _config_app
 ---------------------------------------------------------------------------------
 (2) _config_app                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _conf_timer_0                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _conf_interrupts                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _os_config                                            0     0      0     270
                     _os_create_task
 ---------------------------------------------------------------------------------
 (1) _os_create_task                                     111   108      3     270
                                             13 COMRAM     4     1      3
                                              0 BANK0    107   107      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _os_idle_task                                         1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _os_idle_task                                         1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _motors_control                                       0     0      0      70
                         _mutex_lock
                       _mutex_unlock
 ---------------------------------------------------------------------------------
 (4) _mutex_unlock                                         1     0      1      24
                                             10 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (4) _mutex_lock                                           3     2      1      46
                                             10 COMRAM     3     2      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _sensors_reading                                      0     0      0      70
                         _mutex_lock
                       _mutex_unlock
 ---------------------------------------------------------------------------------
 (4) _mutex_unlock                                         1     0      1      24
                                             10 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (4) _mutex_lock                                           3     2      1      46
                                             10 COMRAM     3     2      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _motors_control                                       0     0      0      70
                         _mutex_lock
                       _mutex_unlock
 ---------------------------------------------------------------------------------
 (4) _mutex_unlock                                         1     0      1      24
                                             10 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (4) _mutex_lock                                           3     2      1      46
                                             10 COMRAM     3     2      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _sensors_reading                                      0     0      0      70
                         _mutex_lock
                       _mutex_unlock
 ---------------------------------------------------------------------------------
 (4) _mutex_unlock                                         1     0      1      24
                                             10 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (4) _mutex_lock                                           3     2      1      46
                                             10 COMRAM     3     2      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR_TIMER_0                                         13    13      0     600
                                             12 COMRAM    13    13      0
              _os_task_time_decrease
                          _scheduler
 ---------------------------------------------------------------------------------
 (6) _scheduler                                            0     0      0     525
                       _rr_scheduler
 ---------------------------------------------------------------------------------
 (7) _rr_scheduler                                         6     4      2     525
                                              6 COMRAM     6     4      2
                            ___awmod
                        _os_task_pos
 ---------------------------------------------------------------------------------
 (8) _os_task_pos                                          5     3      2      91
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (8) ___awmod                                              6     2      4     298
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) _os_task_time_decrease                                2     2      0      75
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _os_config
     _os_create_task
   _os_create_task
   _os_start
     _conf_interrupts
     _conf_timer_0
     _config_app

 _os_idle_task (ROOT)

 _os_idle_task (ROOT)

 _motors_control (ROOT)
   _mutex_lock
   _mutex_unlock

 _sensors_reading (ROOT)
   _mutex_lock
   _mutex_unlock

 _motors_control (ROOT)
   _mutex_lock
   _mutex_unlock

 _sensors_reading (ROOT)
   _mutex_lock
   _mutex_unlock

 _ISR_TIMER_0 (ROOT)
   _os_task_time_decrease
   _scheduler
     _rr_scheduler
       ___awmod
       _os_task_pos

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            2047      0     533     26.0%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256      0       0      0.0%
BITBANK0           160      0       0      0.0%
BANK0              160    107     107     66.9%
BITCOMRAM           94      0       0      0.0%
COMRAM              94     26      28     29.8%
BITBIGSFRlh         91      0       0      0.0%
BITBIGSFRlll        35      0       0      0.0%
BITBIGSFRh          23      0       0      0.0%
BITBIGSFRllh         8      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0     668      0.0%


Microchip Technology PIC18 Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Mon Oct 20 01:39:32 2025

                            _x 001A                             l17 0D6A                             l18 0D6A  
                           l45 0DEC                             l80 0E48                             l48 0E3A  
                           l90 0E60                             l83 0E52                             l84 0E52  
                           l89 0E60                            l111 0D3C                            l203 0E2A  
                          l206 0E82                            l980 0E80                            l990 0E26  
                          l982 0E3C                            l992 0E28                            l984 0E10  
                          l986 0E14                            l988 0E24                            _BSR 0FE0  
__end_of_os_task_time_decrease 0CA0                            u481 0D2A                            _TOS 0FFD  
                 ___awmod@sign 0006                            prod 0FF3                            wreg 0FE8  
                         l1022 0E2C                           l1024 0E34                           l1026 0E38  
                         l1052 0D72                           l1054 0D74                           l1312 0DC8  
                         l1314 0DDA                           l1332 0E58                           l1324 0D3E  
                         l1270 0CF8                           l1326 0D66                           l1328 0E4A  
                         l1280 0D0C                           l1272 0D00                           l1282 0D0E  
                         l1274 0D04                           l1284 0D10                           l1276 0D08  
                         l1268 0CF4                           l1286 0D32                           l1278 0D0A  
                         i2l60 0CEE                           i2l69 0C9E                           _TMR0 0FD6  
                         _WREG 0FE8                           _main 0D3E                           fsr1h 0FE2  
                         fsr2h 0FDA                           indf1 0FE7                           indf2 0FDF  
                         fsr1l 0FE1                           fsr2l 0FD9                 ??_conf_timer_0 000E  
                         btemp 001C                           prodh 0FF4                           prodl 0FF3  
                         start 000E               ??_motors_control 000B                   ___param_bank 0000  
                        ?_main 0001                __end_of___awmod 0C18                          i1l232 0E7E  
                        i1l229 0DC6                          i2l222 09D6                          i2l225 0A70  
                        i2l171 0B68                          i2l178 0E72                          i2l479 0C16  
                        u18_20 0D84                          u18_21 0D7E                          u18_26 0D86  
                        plusw1 0FE3                          plusw2 0FDB                          ttemp5 001D  
                        ttemp6 0020                          ttemp7 0024                          status 0FD8  
                        wtemp8 001D                __initialization 0DEE                   ?_ISR_TIMER_0 0001  
                 __end_of_main 0D72              ??_sensors_reading 000E                         ??_main 0012  
                __activetblptr 0000                         i1l1320 0E74                         i1l1316 0DA0  
                       i1l1318 0DB8                         i2l1030 0C20                         i2l1032 0C42  
                       i2l1034 0C74                         i2l1036 0C86                         i2l1028 0C18  
                       i2l1220 0CCE                         i2l1300 0B04                         i2l1038 0C88  
                       i2l1240 0B86                         i2l1232 0B6A                         i2l1224 0CD4  
                       i2l1216 0CA0                         i2l1304 0B10                         i2l1250 0BBE  
                       i2l1242 0B94                         i2l1234 0B6C                         i2l1218 0CA6  
                       i2l1226 0CD6                         i2l1306 0B30                         i2l1322 0E66  
                       i2l1252 0BCC                         i2l1260 0BF6                         i2l1244 0B9C  
                       i2l1236 0B7A                         i2l1228 0CEC                         i2l1308 0B58  
                       i2l1262 0C06                         i2l1254 0BE2                         i2l1246 0BAE  
                       i2l1238 0B82                         i2l1264 0C0E                         i2l1256 0BEA  
                       i2l1248 0BB6                         i2l1258 0BF0                         i2l1290 0AAA  
                       i2l1450 0832                         i2l1292 0AAC                         i2l1460 0918  
                       i2l1452 0852                         i2l1444 081C                         i2l1294 0ACA  
                       i2l1470 09AE                         i2l1454 08A4                         i2l1462 092A  
                       i2l1446 082C                         i2l1296 0AF2                         i2l1288 0A8C  
                       i2l1480 0A5A                         i2l1472 09B0                         i2l1464 092E  
                       i2l1456 08F4                         i2l1448 082E                         i2l1298 0AF4  
                       i2l1474 09D8                         i2l1466 094E                         i2l1458 0908  
                       i2l1482 0A6E                         i2l1476 09EA                         i2l1468 098C  
                       i2l1478 0A3A                         _STATUS 0FD8                         _STKPTR 0FFC  
                 ?_os_task_pos 0001                      ??___awmod 0005                  mutex_unlock@m 000B  
                       clear_0 0DF6                ___awmod@divisor 0003                         isa$std 0001  
              ___awmod@counter 0005           __end_of_conf_timer_0 0E2C               __end_of_os_start 0E3C  
                 __mediumconst 0800                     __accesstop 0060        __end_of__initialization 0E06  
                ___rparam_used 0001                 _os_create_task 0CF0                 __pcstackCOMRAM 0001  
             os_create_task@id 0060         __end_of_os_create_task 0D3E                  ?_os_idle_task 0001  
        _os_task_time_decrease 0C18                     _config_app 0E3C                        i1u53_20 0DB8  
                      i1u53_21 0DB4                        i2u14_40 0C42                        i2u14_41 0C3E  
                      i2u15_40 0C74                        i2u15_41 0C70                        i2u16_40 0C9E  
                      i2u40_40 0CCE                        i2u16_41 0C9A                        i2u40_41 0CCA  
                      i2u41_40 0CEC                        i2u41_41 0CE8                        i2u42_40 0B7A  
                      i2u50_40 0B04                        i2u42_41 0B76                        i2u50_41 0B00  
                      i2u43_40 0B94                        i2u51_40 0B30                        i2u43_41 0B90  
                      i2u51_41 0B2C                        i2u44_40 0BAE                        i2u52_40 0B58  
                      i2u44_41 0BAA                        i2u52_41 0B54                        i2u45_40 0BCC  
                      i2u45_41 0BC8                        i2u46_40 0BE2                        i2u70_40 0852  
                      i2u46_41 0BDE                        i2u70_41 084E                        i2u47_40 0C06  
                      i2u71_40 0918                        i2u47_41 0C02                        i2u71_41 0914  
                      i2u72_40 094E                        i2u72_41 094A                        i2u49_40 0AF2  
                      i2u73_40 09AE                        i2u49_41 0AEE                        i2u73_41 09AA  
                      i2u74_40 0A5A                        i2u74_41 0A56                        i2u69_40 082C  
                      i2u69_41 0828                _sensors_reading 0E58                ?_os_create_task 000E  
                      __Hparam 0000              ??_conf_interrupts 000E                        __Lparam 0000  
                    ?_os_start 0001                        ___awmod 0B6A                   __psmallconst 0800  
               ??_os_idle_task 0001                        __pcinit 0DEE                        __ramtop 0800  
                      __ptext0 0D3E                        __ptext1 0E2C                        __ptext2 0E3C  
                      __ptext3 0E10                        __ptext4 0E80                        __ptext5 0DC8  
                      __ptext6 0CF0                        __ptext7 0D72                        __ptext8 0E4A  
                      __ptext9 0E74                      _T0CONbits 0FD5                     _readyQueue 00CB  
             ___awmod@dividend 0001            os_create_task@prior 0010              __end_of_scheduler 0E74  
               __pintcode_body 0802           end_of_initialization 0E06              __end_of_os_config 0DEE  
                      int_func 0802                   _conf_timer_0 0E10         os_create_task@new_task 0061  
                   ??_os_start 000E                        postdec1 0FE5                        postdec2 0FDD  
                ?_rr_scheduler 0007                        postinc0 0FEE                        postinc1 0FE6  
                      postinc2 0FDE                      _PORTDbits 0F83         ?_os_task_time_decrease 0001  
                   _mutex_lock 0DA0                    ?_config_app 0001                      _TRISDbits 0F95  
      __end_of_sensors_reading 0E66                  ?_mutex_unlock 000B                 ??_rr_scheduler 0009  
                  mutex_lock@m 000B            start_initialization 0DEE                 ??_mutex_unlock 000C  
         __end_of_os_idle_task 0DA0                    __pbssBIGRAM 00CB   rr_scheduler@pos_task_running 000C  
                  ?_mutex_lock 000B                    __pbssCOMRAM 001A                  __pcstackBANK0 0060  
             ?_sensors_reading 0001                _conf_interrupts 0E80               ??_os_create_task 0011  
                ??_ISR_TIMER_0 000D                      __pintcode 0008                       ?___awmod 0001  
               _motors_control 0E4A                    __smallconst 0800           __end_of_rr_scheduler 0B6A  
                    _scheduler 0E66                       _LATDbits 0F8C                      _os_config 0DC8  
                ??_os_task_pos 0003         os_task_time_decrease@i 0002         __end_of_motors_control 0E58  
      ??_os_task_time_decrease 0001           __end_of_mutex_unlock 0E80            __end_of_ISR_TIMER_0 0A8C  
      __end_of_conf_interrupts 0E84                   ??_config_app 000E                     ?_scheduler 0001  
                   ?_os_config 0001                       __Hrparam 0000                       __Lrparam 0000  
           __end_of_config_app 0E4A                ?_motors_control 0001            __end_of_os_task_pos 0CF0  
                 _os_idle_task 0D72                       __ptext10 0DA0                       __ptext11 0E58  
                     __ptext13 0E66                       __ptext14 0A8C                       __ptext15 0CA0  
                     __ptext16 0B6A                       __ptext17 0C18           os_create_task@task_f 000E  
                     _os_start 0E2C                       isa$xinst 0000                    _ISR_TIMER_0 0008  
                     int$flags 001C                   os_task_pos@i 0005               ?_conf_interrupts 0001  
                 ??_mutex_lock 000C                     _INTCONbits 0FF2                       intlevel1 0000  
                     intlevel2 0000                    ??_scheduler 000D                    ??_os_config 0012  
                  _os_task_pos 0CA0             __end_of_mutex_lock 0DC8                   _rr_scheduler 0A8C  
    rr_scheduler@idle_selected 000B                   _mutex_unlock 0E74                  ?_conf_timer_0 0001  
              os_task_pos@task 0001  
